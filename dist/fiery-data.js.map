{"version":3,"sources":["webpack://FieryData/webpack/universalModuleDefinition","webpack://FieryData/webpack/bootstrap","webpack://FieryData/./src/util.ts","webpack://FieryData/./src/cache.ts","webpack://FieryData/./src/stats.ts","webpack://FieryData/./src/constants.ts","webpack://FieryData/./src/data.ts","webpack://FieryData/./src/options.ts","webpack://FieryData/./src/entry.ts","webpack://FieryData/./src/operations.ts","webpack://FieryData/./src/factory/index.ts","webpack://FieryData/./src/index.ts","webpack://FieryData/./src/store.ts","webpack://FieryData/./src/factory/document.ts","webpack://FieryData/./src/factory/map.ts","webpack://FieryData/./src/factory/collection.ts","webpack://FieryData/./src/instance.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","x","toString","isString","isArray","Array","isDate","Date","isDefined","isFunction","coalesce","a","b","isCollectionSource","source","getFields","fields","otherwise","forEach","iterable","callback","length","prop","isEqual","getTime","constants_1","entry_1","factory_1","stats_1","getCacheForReference","entry","ref","checkSubs","uid","storeKey","UID_SEPARATOR","path","globalCache","addCacheToEntry","data","options","newDocument","PROP_UID","cache","exists","uses","sub","firstEntry","entries","removed","createRecord","getCacheForData","removeCacheFromEntry","children","entryIndex","indexOf","splice","inInstance","instance","removeCacheFromInstance","isReferencedSub","closeEntry","entrySubs","addSubs","push","checkForDestroy","destroyCache","subProp","hasLiveSub","subOptions","subName","ENTRY_SEPARATOR","subSource","doc","parent","split","PATH_SEPARATOR","pop","collection","subEntry","getEntry","live","record","defineProperties","recordProperties","getCacheForDocument","stats","reads","removeDataFromEntry","queries","deletes","updates","sets","writes","PROP_VALUE","RECORD_OPTIONS","sync","update","remove","clear","build","getChanges","util_1","copyData","system","setProperty","decodeData","encoded","decode","decoders","parseDocument","out","_a","propValue","id","refreshData","decoded","propExists","propParent","encodeData","values","explicit","include","exclude","encoders","performMerge","defaults","mergeOptions","optionsProp","merger","globalOptions","defined","user","undefined","onError","message","onMissing","onSuccess","results","onRemove","liveOptions","recordOptions","map","getOptionsByKey","parseInt","getOptions","extends","shared","type","typeConstructor_1","newCollection","excludeMap","recycleOptions","nameOrMap","namedOptions","setGlobalOptions","mergeStrategy","ignore","replace","chain","apply","arguments","shallow","__assign","concat","union","added","exclusions_1","defaultsArray_1","optionsArray_1","vm","query","once","nullifyMissing","recordFunctions","onceOptions","options_1","store_1","cache_1","operations","off","index","entryList","cached","getEntryRecordFunctions","excludeSubs","props","initial","buildSub","createSub","fieldsOrEquality","equalityOrNothing","getEntryRecordProperties","optionsInput","namedSource","getStoreKey","existing","sources","data_1","_this","delete","Promise","reject","buildFromCollection","defaultValue","resolve","set","propsArray","ref_1","store","firestore","promises_1","deleting","deleteCount","_i","propsArray_1","firebaseRuntime","app","firebase_","FieldValue","all","equality_1","current_1","getter_1","then","remote","local","changed","remoteValue","localValue","catch","error","ref_2","target","built","entryFor","document_1","map_1","collection_1","where","default","instance_1","__export","getInstance","stores","keyNext","idToKey","initialTarget","missingSynchronously","onSnapshot","handleDocumentUpdate","promise","removeNamed","querySnapshot","missing","missed","removeProperty","getInitialHandler","handleInitial","handleUpdate","docChanges","change","getUpdateHandler","handler","getLiveHandler","arrayResize","arrayAdd","created","arraySet","newIndex","updated","oldIndex","size","destroy","opt","free","linkSources","container","systemOverrides","defaultSystem","systemProp","buildSystem"],"mappings":"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","file":"fiery-data.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FieryData\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FieryData\"] = factory();\n\telse\n\t\troot[\"FieryData\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryOptions, FierySource, FieryData, FieryMetadata, FieryEntry, FieryFields } from './types'\nimport { getOptionsByKey } from './options'\n\n\n\nexport function isObject (x?: any): x is Object\n{\n  return Object.prototype.toString.call(x) === '[object Object]'\n}\n\nexport function isFunction (x?: any): x is Function\n{\n  return typeof x === 'function'\n}\n\nexport function isString (x?: any): x is string\n{\n  return typeof x === 'string'\n}\n\nexport function isArray (x?: any): x is Array<any>\n{\n  return x && x instanceof Array\n}\n\nexport function isDate (x?: any): x is Date\n{\n  return x && x instanceof Date\n}\n\nexport function isDefined (x?: any): boolean\n{\n  return typeof x !== 'undefined'\n}\n\nexport function coalesce (a?: any, b?: any): any\n{\n  return isDefined(a) ? a : b\n}\n\nexport function isCollectionSource (source: FierySource): boolean\n{\n  return !!((<any>source).where)\n}\n\nexport function getFields (fields?: FieryFields, otherwise?: string[]): string[] | undefined\n{\n  return !fields ? otherwise : (isString(fields) ? [fields] : fields)\n}\n\n// export function forEach<I, V extends I[keyof I], K extends keyof I>(iterable: I, callback: (item: V, key: K, iterable: I) => any): boolean\n// export function forEach<V, K>(iterable: V[], callback: (item: V, key: K, iterable: V[]) => any): boolean\nexport function forEach(iterable: any, callback: (item: any, key: any, iterable: any) => any): boolean\n{\n  if (isArray(iterable))\n  {\n    for (let i = 0; i < iterable.length; i++)\n    {\n      callback(iterable[i], i, iterable)\n    }\n\n    return true\n  }\n  else if (isObject(iterable))\n  {\n    for (let prop in iterable)\n    {\n      if (iterable.hasOwnProperty(prop))\n      {\n        callback(iterable[prop], prop, iterable)\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n\nexport function isEqual (a: any, b: any): boolean\n{\n  if (a === b)\n  {\n    return true\n  }\n\n  if (!a || !b)\n  {\n    return false\n  }\n\n  if (typeof a !== typeof b)\n  {\n    return false\n  }\n\n  if (isArray(a) && isArray(b))\n  {\n    if (a.length !== b.length)\n    {\n      return false\n    }\n\n    for (let i = 0; i < a.length; i++)\n    {\n      if (!isEqual(a[i], b[i]))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (isDate(a) && isDate(b))\n  {\n    return a.getTime() === b.getTime()\n  }\n\n  if (isObject(a) && isObject(b))\n  {\n    for (let prop in a)\n    {\n      if (!isEqual(a[prop], b[prop]))\n      {\n        return false\n      }\n    }\n\n    for (let prop in b)\n    {\n      if (!(prop in a))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { UID_SEPARATOR, PROP_UID, PATH_SEPARATOR, ENTRY_SEPARATOR } from './constants'\nimport { FieryInstance, FieryEntry, FierySource, FieryCacheEntry, FieryCache, FieryData, FieryOptions, FieryOptionsMap, FieryEntryMap } from './types'\nimport { closeEntry, getEntry } from './entry'\nimport { factory } from './factory'\nimport { stats } from './stats'\n\n\n\nexport const globalCache: FieryCache = { }\n\n\nexport function getCacheForReference (entry: FieryEntry, ref: firebase.firestore.DocumentReference, checkSubs: boolean = false): FieryCacheEntry\n{\n  const uid = entry.storeKey + UID_SEPARATOR + ref.path\n\n  if (uid in globalCache)\n  {\n    addCacheToEntry(globalCache[uid], entry, checkSubs)\n\n    return globalCache[uid]\n  }\n\n  const data = entry.options.newDocument()\n\n  data[PROP_UID] = uid\n\n  const cache: FieryCacheEntry = {\n    uid,\n    data,\n    ref,\n    exists: false,\n    uses: 0,\n    sub: {},\n    firstEntry: entry,\n    entries: [],\n    removed: false\n  }\n\n  globalCache[uid] = cache\n\n  addCacheToEntry(cache, entry, true)\n  createRecord(data, entry)\n\n  return cache\n}\n\nexport function getCacheForDocument (entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot, checkSubs: boolean = false): FieryCacheEntry\n{\n  stats.reads++\n\n  return getCacheForReference(entry, doc.ref, checkSubs)\n}\n\nexport function getCacheForData (data: FieryData): FieryCacheEntry | undefined\n{\n  return globalCache[data[PROP_UID]]\n}\n\nexport function removeDataFromEntry (entry: FieryEntry, data: FieryData): void\n{\n  removeCacheFromEntry(entry, getCacheForData(data))\n}\n\nexport function removeCacheFromEntry (entry: FieryEntry, cache?: FieryCacheEntry): void\n{\n  if (cache && cache.uid in entry.children)\n  {\n    const options: FieryOptions = entry.options\n    const entries: FieryEntry[] = cache.entries\n\n    // remove reference to entry from cache\n    const entryIndex = entries.indexOf(entry)\n    if (entryIndex !== -1)\n    {\n      entries.splice(entryIndex, 1)\n    }\n\n    // remove cache reference from entry\n    delete entry.children[cache.uid]\n\n    // if no more entries for this instance, remove from instance\n    let inInstance: boolean = false\n\n    for (var i = 0; i < entries.length; i++)\n    {\n      if (entries[i].instance === entry.instance)\n      {\n        inInstance = true\n        break\n      }\n    }\n\n    if (!inInstance)\n    {\n      removeCacheFromInstance(cache, entry.instance, true)\n    }\n\n    // turn off any unneeded subs if we're still being used\n    if (cache.uses > 0)\n    {\n      for (var sub in cache.sub)\n      {\n        if (!isReferencedSub(cache, sub))\n        {\n          closeEntry(cache.sub[sub], true)\n        }\n      }\n    }\n  }\n}\n\nexport function isReferencedSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  const entries: FieryEntry[] = cache.entries\n  const subs: FieryEntryMap = cache.sub\n\n  for (var i = 0; i < entries.length; i++)\n  {\n    const entry: FieryEntry = entries[i]\n    const entrySubs: FieryOptionsMap | undefined = entry.options.sub as (FieryOptionsMap | undefined)\n\n    if (entrySubs && sub in entrySubs)\n    {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function addCacheToEntry (cache: FieryCacheEntry, entry: FieryEntry, checkSubs: boolean = false): void\n{\n  if (!(cache.uid in entry.instance.cache))\n  {\n    entry.instance.cache[cache.uid] = cache\n    cache.uses++\n  }\n\n  if (!(cache.uid in entry.children))\n  {\n    cache.entries.push(entry)\n    entry.children[cache.uid] = cache\n\n    addSubs(cache, entry)\n  }\n  else if (checkSubs)\n  {\n    addSubs(cache, entry)\n  }\n}\n\nexport function removeCacheFromInstance (cache: FieryCacheEntry, instance: FieryInstance, checkForDestroy: boolean = true): void\n{\n  if (cache.uid in instance.cache)\n  {\n    cache.uses--\n    delete instance.cache[cache.uid]\n\n    const entries: FieryEntry[] = cache.entries\n\n    for (let i = entries.length - 1; i >= 0; i--)\n    {\n      const entry = entries[i]\n\n      if (entry.instance === instance)\n      {\n        removeCacheFromEntry(entry, cache)\n      }\n    }\n\n    if (checkForDestroy && cache.uses <= 0)\n    {\n      destroyCache(cache)\n    }\n  }\n}\n\nexport function destroyCache (cache: FieryCacheEntry): void\n{\n  const entries: FieryEntry[] = cache.entries\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    removeCacheFromInstance(cache, entries[i].instance, false)\n  }\n\n  for (var sub in cache.sub)\n  {\n    closeEntry(cache.sub[sub], true)\n  }\n\n  if (cache.uses <= 0 && !cache.removed)\n  {\n    delete globalCache[cache.uid]\n    delete cache.ref\n    delete cache.sub\n    delete cache.data\n\n    cache.entries.length = 0\n    cache.removed = true\n  }\n}\n\nexport function addSubs (cache: FieryCacheEntry, entry: FieryEntry): void\n{\n  const options: FieryOptions = entry.options\n  const data: FieryData = cache.data\n  const ref: firebase.firestore.DocumentReference | undefined = cache.ref\n\n  if (options.sub && ref)\n  {\n    for (let subProp in options.sub)\n    {\n      if (!hasLiveSub(cache, subProp))\n      {\n        let subOptions: FieryOptions = options.sub[subProp] as FieryOptions\n        let subName: string = cache.uid + ENTRY_SEPARATOR + subProp\n\n        let subSource: FierySource = subOptions.doc\n          ? ref.parent.doc(cache.uid.split(PATH_SEPARATOR).pop() + PATH_SEPARATOR + subProp)\n          : ref.collection(subProp)\n\n        let subEntry: FieryEntry = getEntry(\n          entry.instance,\n          subSource,\n          subOptions,\n          subName,\n          false // we shouldn't add this to sources\n        )\n\n        subEntry.parent = cache\n        cache.sub[subProp] = subEntry\n\n        data[subProp] = factory(subEntry)\n      }\n    }\n  }\n}\n\nexport function hasLiveSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  return sub in cache.sub && cache.sub[sub].live\n}\n\nexport function createRecord (data: FieryData, entry: FieryEntry): FieryData\n{\n  const options: FieryOptions = entry.options\n\n  if (options.record)\n  {\n    Object.defineProperties(data, entry.recordProperties)\n  }\n\n  return data\n}\n","\n\nexport const stats = {\n  queries: 0,\n  reads: 0,\n  deletes: 0,\n  updates: 0,\n  sets: 0,\n  writes: 0\n}\n","\nexport const PROP_VALUE = '.value'\nexport const PROP_UID = '.uid'\nexport const UID_SEPARATOR = '///'\nexport const ENTRY_SEPARATOR = '/'\nexport const PATH_SEPARATOR = '/'\nexport const RECORD_OPTIONS = {\n  sync: '$sync',\n  update: '$update',\n  remove: '$remove',\n  ref: '$ref',\n  clear: '$clear',\n  build: '$build',\n  create: '$create',\n  getChanges: '$getChanges'\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource, FierySystem, FieryOptions, FieryInstance, FieryEntry, FieryData, FieryMap, FieryFields, FieryCacheEntry } from './types'\nimport { isObject, getFields } from './util'\n\n\n\nexport function refreshData (cache: FieryCacheEntry, doc: firebase.firestore.DocumentSnapshot, entry: FieryEntry): FieryData\n{\n  const system: FierySystem = entry.instance.system\n  const options: FieryOptions = entry.options\n  const encoded: FieryData = parseDocument(doc, options)\n  const decoded: FieryData = decodeData(encoded, options)\n  const data: FieryData = cache.data\n\n  copyData(system, data, decoded)\n\n  if (options.propExists)\n  {\n    system.setProperty(data, options.propExists, doc.exists)\n  }\n\n  if (options.propParent && entry.parent)\n  {\n    system.setProperty(data, options.propParent, entry.parent.data)\n  }\n\n  cache.exists = doc.exists\n\n  return data;\n}\n\nexport function copyData (system: FierySystem, data: FieryData, update: FieryData): FieryData\n{\n  for (let prop in update)\n  {\n    system.setProperty(data, prop, update[prop])\n  }\n\n  return data\n}\n\nexport function decodeData (encoded: FieryData, options: FieryOptions): FieryData\n{\n  if (options.decode)\n  {\n    encoded = options.decode(encoded)\n  }\n  else if (options.decoders)\n  {\n    for (let prop in options.decoders)\n    {\n      if (prop in encoded)\n      {\n        encoded[prop] = options.decoders[prop](encoded[prop], encoded)\n      }\n    }\n  }\n\n  return encoded\n}\n\nexport function encodeData (data: FieryData, options: FieryOptions, fields?: FieryFields): FieryData\n{\n  const values: FieryData = {}\n  const explicit: string[] = getFields(fields, options.include) as string[]\n\n  if (explicit)\n  {\n    for (let i = 0; i < explicit.length; i++)\n    {\n      let prop: string = explicit[i]\n\n      if (prop in data)\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n  else\n  {\n    for (let prop in data)\n    {\n      if (!(prop in options.exclude))\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n\n  if (options.encoders)\n  {\n    for (let prop in options.encoders)\n    {\n      if (prop in values)\n      {\n        values[prop] = options.encoders[prop](values[prop], data)\n      }\n    }\n  }\n\n  return values\n}\n\nexport function parseDocument (doc: firebase.firestore.DocumentSnapshot, options: FieryOptions): FieryData\n{\n  let value = doc.data()\n  let out = (isObject(value) ? value : { [options.propValue]: value }) as FieryData\n\n  if (out && options.key)\n  {\n    out[options.key] = doc.id\n  }\n\n  return out\n}\n","\nimport { PROP_UID, PROP_VALUE, RECORD_OPTIONS } from './constants'\nimport { FieryOptionsInput, FieryOptions, FieryOptionsMap, FieryInstance, FieryExclusions, FierySource, FieryData, FieryMap, FieryEquality, FieryMergeStrategy, FieryMergeStrategies } from './types'\nimport { isObject, isFunction, isArray, coalesce, forEach, isDefined, isString } from './util'\nimport * as operations from './operations'\n\n\n\nexport const globalOptions =\n{\n  defined: {} as FieryOptionsMap,\n\n  user: undefined as Partial<FieryOptions> | undefined,\n\n  defaults:\n  {\n    onError: (message: any) => {},\n\n    onMissing: () => {},\n\n    onSuccess: (results: any) => {},\n\n    onRemove: () => {},\n\n    liveOptions: {},\n\n    propValue: PROP_VALUE,\n\n    recordOptions: RECORD_OPTIONS,\n\n    newDocument: (encoded?: FieryData) => ({} as FieryData)\n\n  } as Partial<FieryOptions>,\n\n  id: 0,\n\n  map: {} as FieryOptionsMap\n}\n\n\nexport function getOptionsByKey (key: string): FieryOptions\n{\n  return globalOptions.map[parseInt(key)] as FieryOptions\n}\n\nexport function getOptions (options?: FieryOptionsInput, instance?: FieryInstance): FieryOptions\n{\n  // If a string is passed - returned a defined option.\n  if (isString(options))\n  {\n    if (!(options in globalOptions.defined))\n    {\n      throw 'The definition ' + options + ' was not found. You must call define before you use the definition'\n    }\n\n    // Ensure the defined option is properly populated\n    return getOptions(globalOptions.defined[options])\n  }\n\n  // If nothing was given, populate an empty set of options\n  if (!options || !isObject(options))\n  {\n    options = {}\n  }\n\n  // If the options was already populated, return the options\n  if (options.id && options.id in globalOptions.map)\n  {\n    return options as FieryOptions\n  }\n  // Otherwise, assign this options an id and add it to the list of options\n  else if (!options.id)\n  {\n    options.id = ++globalOptions.id\n    globalOptions.map[options.id] = options as FieryOptions\n  }\n\n  if (options.extends)\n  {\n    performMerge(options, getOptions(options.extends))\n  }\n\n  performMerge(options, globalOptions.user)\n  performMerge(options, globalOptions.defaults)\n\n  if (instance && !options.shared)\n  {\n    options.instance = instance\n    instance.options[ options.id ] = options as FieryOptions\n  }\n\n  if (options.type)\n  {\n    const typeConstructor = options.type\n\n    options.newDocument = (encoded?: FieryData) => (new typeConstructor() as FieryData)\n  }\n\n  if (!options.newCollection)\n  {\n    options.newCollection = options.map\n      ? () => ({} as FieryMap)\n      : () => ([] as FieryData[])\n  }\n\n  let excludeMap: FieryExclusions = {}\n\n  if (!options.exclude)\n  {\n    if (options.key)\n    {\n      excludeMap[options.key] = true\n    }\n  }\n  else if (isArray(options.exclude))\n  {\n    forEach(options.exclude, (value, key) => excludeMap[value] = true)\n  }\n  else\n  {\n    excludeMap = options.exclude as FieryExclusions\n  }\n\n  excludeMap[options.propValue as string] = true\n  excludeMap[PROP_UID] = true\n\n  forEach(options.recordOptions, (value, key) => excludeMap[value] = true)\n\n  options.exclude = excludeMap\n\n  if (options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptionsInput = options.sub[subProp] as FieryOptionsInput\n      let subOptions = getOptions(subOptionsInput, instance)\n\n      subOptions.parent = options as FieryOptions\n\n      options.sub[subProp] = subOptions\n\n      if (!subOptions.ref)\n      {\n        excludeMap[subProp] = true\n      }\n    }\n  }\n\n  return options as FieryOptions\n}\n\nexport function recycleOptions (options: FieryOptions)\n{\n  const instance: FieryInstance | undefined = options.instance\n\n  if (instance)\n  {\n    delete instance.options[options.id]\n  }\n}\n\nexport function define (nameOrMap: string | FieryOptionsMap, namedOptions?: Partial<FieryOptions>): void\n{\n  if (isString(nameOrMap))\n  {\n    const options: Partial<FieryOptions> = namedOptions as Partial<FieryOptions>\n\n    options.shared = true\n\n    globalOptions.defined[nameOrMap] = options\n  }\n  else\n  {\n    for (let name in nameOrMap)\n    {\n      const options: Partial<FieryOptions> = nameOrMap[name]\n\n      options.shared = true\n\n      globalOptions.defined[name] = options\n    }\n  }\n}\n\nexport function setGlobalOptions (user?: Partial<FieryOptions>): void\n{\n  if (user)\n  {\n    user.shared = true\n  }\n\n  globalOptions.user = user\n}\n\nexport function performMerge (options: Partial<FieryOptions>, defaults?: Partial<FieryOptions>): void\n{\n  if (!defaults) return\n\n  for (let prop in mergeOptions)\n  {\n    const optionsProp = prop as keyof FieryOptions\n    const merger: FieryMergeStrategy = mergeOptions[optionsProp]\n\n    options[optionsProp] = merger( options[optionsProp], defaults[optionsProp] )\n  }\n}\n\nexport const mergeStrategy: FieryMergeStrategies =\n{\n  ignore (options: any, defaults: any): any {\n    return options\n  },\n  replace (options: any, defaults: any): any {\n    return coalesce(options, defaults)\n  },\n  chain (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return function(this: any) {\n      (defaults as Function).apply(this, arguments)\n      (options as Function).apply(this, arguments)\n    }\n  },\n  shallow (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return {\n      ...defaults,\n      ...options\n    }\n  },\n  concat (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    if (isArray(options) && isArray(defaults)) {\n      let union = options.concat(defaults)\n      let added: {[k:string]:any} = {}\n      for (let i = union.length - 1; i >= 0; i--) {\n        if (union[i] in added) {\n          union.splice(i, 1)\n        } else {\n          added[union[i]] = true\n        }\n      }\n      return union\n    }\n  },\n  exclude (options: any, defaults: any): any {\n    const union = mergeStrategy.concat(options, defaults)\n    if (!union && options && defaults) {\n      let exclusions: {[k:string]:any} = {}\n      let defaultsArray = isArray(defaults)\n      let optionsArray = isArray(options)\n      forEach(defaults, (value, key) => value ? (exclusions[defaultsArray ? value : key] = true) : 0)\n      forEach(options, (value, key) => value ? (exclusions[optionsArray ? value : key] = true) : 0)\n      return exclusions\n    }\n    return union\n  }\n}\n\nexport const mergeOptions: FieryMergeStrategies =\n{\n  extends:            mergeStrategy.ignore,\n  id:                 mergeStrategy.ignore,\n  parent:             mergeStrategy.ignore,\n  shared:             mergeStrategy.ignore,\n  vm:                 mergeStrategy.ignore,\n  key:                mergeStrategy.replace,\n  query:              mergeStrategy.replace,\n  map:                mergeStrategy.replace,\n  once:               mergeStrategy.replace,\n  type:               mergeStrategy.replace,\n  nullifyMissing:     mergeStrategy.replace,\n  newDocument:        mergeStrategy.replace,\n  newCollection:      mergeStrategy.replace,\n  decode:             mergeStrategy.replace,\n  decoders:           mergeStrategy.shallow,\n  encoders:           mergeStrategy.shallow,\n  record:             mergeStrategy.replace,\n  recordOptions:      mergeStrategy.replace,\n  recordFunctions:    mergeStrategy.replace,\n  propValue:          mergeStrategy.replace,\n  propExists:         mergeStrategy.replace,\n  propParent:         mergeStrategy.replace,\n  onceOptions:        mergeStrategy.replace,\n  liveOptions:        mergeStrategy.replace,\n  include:            mergeStrategy.concat,\n  exclude:            mergeStrategy.exclude,\n  onError:            mergeStrategy.replace,\n  onSuccess:          mergeStrategy.replace,\n  onMissing:          mergeStrategy.replace,\n  onRemove:           mergeStrategy.replace,\n  sub:                mergeStrategy.shallow\n}\n","\n\nimport { FierySystem, FieryOptionsInput, FieryEntryMap, FieryOptions, FieryInstance, FieryEntry, FierySources, FierySource, FieryCache, FieryData, FieryChanges, FieryEquality, FieryFields, FieryRecordProperties } from './types'\nimport { isCollectionSource, forEach, isDefined } from './util'\nimport { getOptions, recycleOptions } from './options'\nimport { getStoreKey } from './store'\nimport { removeCacheFromEntry } from './cache'\nimport * as operations from './operations'\n\n\n\nexport function closeEntry (entry: FieryEntry | null, remove: boolean = false): void\n{\n  if (entry && entry.live)\n  {\n    if (entry.off)\n    {\n      entry.off()\n\n      delete entry.off\n    }\n\n    entry.live = false\n\n    if (remove)\n    {\n      const instance: FieryInstance = entry.instance\n\n      if (isDefined(entry.index))\n      {\n        instance.entryList[entry.index as number] = null\n\n        delete entry.index\n      }\n\n      if (entry.name && entry.name in instance.entry)\n      {\n        delete instance.entry[entry.name]\n      }\n\n      forEach(entry.children, cached =>\n      {\n        removeCacheFromEntry(entry, cached)\n      })\n    }\n  }\n}\n\nexport function getEntry (instance: FieryInstance, source: FierySource, optionsInput?: FieryOptionsInput, name?: string, namedSource: boolean = true)\n{\n  // Things that are allowed to change on repetitive entry calls\n  const options: FieryOptions = getOptions(optionsInput, instance)\n  const storeKey: number = getStoreKey(source)\n\n  if (name && name in instance.entry)\n  {\n    const existing: FieryEntry = instance.entry[ name ]\n\n    closeEntry(existing)\n\n    if (options.id !== existing.options.id)\n    {\n      recycleOptions(existing.options)\n    }\n\n    existing.source = source\n    existing.options = options\n    existing.storeKey = storeKey\n    existing.live = true\n\n    if (name && namedSource)\n    {\n      instance.sources[ name ] = source\n    }\n\n    return existing\n  }\n\n  const recordFunctions = getEntryRecordFunctions(instance)\n  const recordProperties = getEntryRecordProperties(options, recordFunctions)\n  const children: FieryCache = {}\n  const live: boolean = true\n  const entry: FieryEntry = {\n    name,\n    options,\n    source,\n    instance,\n    storeKey,\n    children,\n    recordFunctions,\n    recordProperties,\n    live\n  }\n\n  if (!name || !(name in instance.entry))\n  {\n    entry.index = instance.entryList.length\n\n    instance.entryList.push(entry)\n  }\n\n  if (name)\n  {\n    instance.entry[ name ] = entry\n  }\n\n  if (name && namedSource)\n  {\n    instance.sources[ name ] = source\n  }\n\n  return entry\n}\n\nexport function getEntryRecordFunctions (instance: FieryInstance)\n{\n  return {\n    sync: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.sync.call(instance, this, fields)\n    },\n    update: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.update.call(instance, this, fields)\n    },\n    remove: function(this: FieryData, excludeSubs: boolean = false): Promise<void> {\n      return operations.remove.call(instance, this, excludeSubs)\n    },\n    ref: function(this: FieryData, sub?: string): FierySource {\n      return operations.ref.call(instance, this, sub)\n    },\n    clear: function(this: FieryData, props: FieryFields): Promise<void[]> {\n      return operations.clear.call(instance, this, props)\n    },\n    build: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.buildSub.call(instance, this, sub, initial)\n    },\n    create: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.createSub.call(instance, this, sub, initial)\n    },\n    getChanges: function(this: FieryData,\n      fieldsOrEquality: FieryFields | FieryEquality,\n      equalityOrNothing?: FieryEquality): Promise<FieryChanges> {\n      return operations.getChanges.call(instance, this, fieldsOrEquality, equalityOrNothing)\n    }\n  }\n}\n\nexport function getEntryRecordProperties (options: FieryOptions, recordFunctions: any): FieryRecordProperties\n{\n  const props: FieryRecordProperties = {}\n\n  for (var prop in options.recordOptions)\n  {\n    const newProp = options.recordOptions[prop]\n\n    props[newProp] = {\n      value: recordFunctions[prop]\n    }\n  }\n\n  return props\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryInstance, FieryCacheEntry, FieryOptions, FieryEntry, FieryData, FierySource, FieryChanges, FieryEquality, FieryFields, FieryTarget } from './types'\nimport { parseDocument, encodeData } from './data'\nimport { forEach, isEqual, isDefined, isFunction, isString, getFields } from './util'\nimport { getCacheForData, getCacheForReference } from './cache'\nimport { stats } from './stats'\n\n\n\nexport function update (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n  const result = Promise.resolve(false)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    stats.writes++\n\n    if (cache.exists)\n    {\n      stats.updates++\n\n      return cache.ref.update(values)\n    }\n    else\n    {\n      stats.sets++\n\n      return cache.ref.set(values)\n    }\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function sync (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    stats.sets++\n    stats.writes++\n\n    return cache.ref.set(values)\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function remove (this: FieryInstance, data: FieryData, excludeSubs: boolean = false): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n\n    if (!excludeSubs && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        forEach(data[subProp], (sub) =>\n        {\n          remove.call(this, sub as FieryData)\n        })\n      }\n    }\n\n    stats.deletes++\n\n    return cache.ref.delete()\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function clear (this: FieryInstance, data: FieryData, props: FieryFields): Promise<void[]>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n  const propsArray: string[] = getFields(props) as string[]\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const ref: firebase.firestore.DocumentReference = cache.ref\n    const store: firebase.firestore.Firestore = ref.firestore\n    const promises: Promise<void>[] = []\n\n    const deleting: any = {}\n    let deleteCount: number = 0\n\n    for (let prop of propsArray)\n    {\n      if (options.sub && prop in options.sub && data[prop])\n      {\n        forEach(data[prop], (sub) =>\n        {\n          promises.push(remove.call(this, sub as FieryData))\n        })\n      }\n      else if (prop in data)\n      {\n        let firebaseRuntime: any = (<any>store.app).firebase_\n\n        if (firebaseRuntime)\n        {\n          deleting[prop] = firebaseRuntime.firestore.FieldValue.delete()\n          deleteCount++\n        }\n      }\n    }\n\n    if (deleteCount > 0)\n    {\n      stats.updates++\n      stats.writes++\n\n      promises.push(ref.update(deleting))\n    }\n\n    return Promise.all(promises)\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function getChanges (this: FieryInstance,\n  data: FieryData,\n  fieldsOrEquality: FieryFields | FieryEquality,\n  equalityOrNothing?: FieryEquality): Promise<FieryChanges>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const fields: FieryFields | undefined = isFunction(fieldsOrEquality) ? undefined : getFields(fieldsOrEquality as FieryFields)\n    const equality: FieryEquality = ((fields ? equalityOrNothing : fieldsOrEquality) || isEqual) as FieryEquality\n    const options: FieryOptions = cache.firstEntry.options\n    const current: FieryData = encodeData(data, options, fields)\n\n    stats.reads++\n\n    const getter: Promise<firebase.firestore.DocumentSnapshot> = cache.ref.get()\n\n    return new Promise((resolve, reject) =>\n    {\n      getter.then((doc: firebase.firestore.DocumentSnapshot) =>\n      {\n        const encoded: FieryData = parseDocument(doc, options)\n        const remote: FieryData = {}\n        const local: FieryData = {}\n        let changed = false\n\n        for (let prop in current)\n        {\n          let remoteValue = encoded[prop]\n          let localValue = current[prop]\n\n          if (!equality(remoteValue, localValue))\n          {\n            changed = true\n            remote[prop] = remoteValue\n            local[prop] = localValue\n          }\n        }\n\n        resolve({ changed, remote, local })\n      })\n\n      getter.catch(error => reject(error))\n    })\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function ref (this: FieryInstance, data: FieryData, sub?: string): FierySource\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return sub ? ref.collection(sub) : ref\n  }\n\n  throw 'The given data is out of scope and cannot be referenced.'\n}\n\nexport function create <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  const built: T = this.build(target, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function createSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const built: T = this.buildSub(data, sub, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function build <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  if (isString(target))\n  {\n    if (target in this.entry)\n    {\n      const entry: FieryEntry = this.entry[target]\n\n      return buildFromCollection (entry.source as firebase.firestore.CollectionReference, entry, initial)\n    }\n  }\n  else\n  {\n    const entry = this.entryFor(target)\n\n    if (entry)\n    {\n      return buildFromCollection (entry.source as firebase.firestore.CollectionReference, entry, initial)\n    }\n  }\n\n  throw 'Cannot build ' + target + + ', it does not exist in the current $fiery instance.'\n}\n\nexport function buildSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref && sub in cache.sub)\n  {\n    const entry: FieryEntry = cache.sub[sub]\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return buildFromCollection(ref.collection(sub), entry, initial)\n  }\n\n  throw 'Cannot build in the sub collection ' + sub + + ', the parent data does not exist in the current $fiery instance or the sub collection is not defined in the options.'\n}\n\nexport function buildFromCollection <T extends FieryData>(collection: firebase.firestore.CollectionReference, entry: FieryEntry, initial?: FieryData): T\n{\n  const options: FieryOptions = entry.options\n  const ref = collection.doc()\n  const cache: FieryCacheEntry = getCacheForReference(entry, ref)\n\n  if (options.defaults)\n  {\n    forEach(options.defaults, (defaultValue, prop) =>\n    {\n      if (!initial || !(prop in initial))\n      {\n        cache.data[prop] = isFunction(defaultValue) ? defaultValue() : defaultValue\n      }\n    })\n  }\n\n  if (initial)\n  {\n    forEach(initial, (value, prop) =>\n    {\n      cache.data[prop] = value\n    })\n  }\n\n  return cache.data as T\n}\n","\n\nimport { FieryInstance, FieryEntry, FieryTarget, FierySource, FieryOptions } from '../types'\nimport { getEntry } from '../entry'\n\n\n\nimport factoryDocument from './document'\nimport factoryMap from './map'\nimport factoryCollection from './collection'\n\n\n\nexport function factory (entry: FieryEntry): FieryTarget\n{\n  let chosenFactory = (<any>entry.source).where\n    ? (entry.options.map ? factoryMap : factoryCollection)\n    : factoryDocument\n\n  return chosenFactory(entry)\n}\n\nexport default factory\n","\nimport { define, setGlobalOptions, mergeStrategy, mergeOptions } from './options'\nimport { getCacheForData, destroyCache } from './cache'\nimport { getInstance } from './instance'\nimport { stats } from './stats'\n\nexport * from './constants'\nexport * from './types'\nexport { stats }\nexport { define, setGlobalOptions, mergeStrategy, mergeOptions }\nexport { getCacheForData, destroyCache }\nexport default getInstance\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource } from './types'\n\n\n\nexport const stores = {\n\n  keyNext: 0,\n\n  map: { } as { [storeKey: number]: firebase.firestore.Firestore },\n\n  idToKey: { } as { [id: string]: number }\n\n}\n\nexport function getStoreKey (source: FierySource): number\n{\n  const firestore: firebase.firestore.Firestore = source.firestore\n  const id: string = firestore.app.name\n  let key: number = stores.idToKey[id]\n\n  if (!key)\n  {\n    key = ++stores.keyNext\n    stores.map[key] = firestore\n    stores.idToKey[id] = key\n  }\n\n  return key\n}\n","\nimport * as firebase from 'firebase'\n\n\nimport { FierySystem, FieryOptions, FieryEntry, FieryData, FieryCacheEntry, FieryTarget } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForReference, removeDataFromEntry, destroyCache } from '../cache'\nimport { stats } from '../stats'\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.DocumentSnapshot) => any\n\n\n\nexport function factory (entry: FieryEntry): FieryData\n{\n  const source: firebase.firestore.DocumentReference = entry.source as firebase.firestore.DocumentReference\n  const options: FieryOptions = entry.options\n  const cache: FieryCacheEntry = getCacheForReference(entry, source, true)\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  let missingSynchronously = false\n\n  const onSnapshot = (doc: firebase.firestore.DocumentSnapshot) =>\n  {\n    handleDocumentUpdate(cache, entry, doc)\n\n    missingSynchronously = !doc.exists\n  }\n\n  if (initialTarget && initialTarget !== cache.data)\n  {\n    removeDataFromEntry(entry, initialTarget)\n  }\n\n  entry.target = cache.data\n\n  stats.queries++\n\n  if (options.once)\n  {\n    entry.promise = source.get(options.onceOptions)\n      .then(onSnapshot)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.off = source.onSnapshot(\n      options.liveOptions,\n      onSnapshot,\n      options.onError\n    )\n  }\n\n  if (missingSynchronously && options.nullifyMissing)\n  {\n    return (<any>null) as FieryData\n  }\n\n  return entry.target as FieryData\n}\n\nexport function handleDocumentUpdate (cache: FieryCacheEntry, entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot): void\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  if (!doc.exists)\n  {\n    if (options.propExists)\n    {\n      system.setProperty(cache.data, options.propExists, false)\n    }\n    \n    cache.exists = false\n\n    if (options.nullifyMissing)\n    {\n      destroyCache(cache)\n\n      if (entry.name)\n      {\n        system.removeNamed(entry.name)\n      }\n    }\n  }\n  else\n  {\n    refreshData(cache, doc, entry)\n\n    options.onSuccess(cache.data)\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { PROP_UID } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { forEach } from '../util'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeDataFromEntry, removeCacheFromEntry, destroyCache } from '../cache'\nimport { stats } from '../stats'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\n\n\n\nfunction factory (entry: FieryEntry): FieryMap\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n  const initial = getInitialHandler(entry)\n\n  if (!entry.target)\n  {\n    entry.target = options.newCollection()\n  }\n\n  stats.queries++\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then(initial)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(\n      options.liveOptions,\n      getLiveHandler(entry, initial),\n      options.onError\n    )\n  }\n\n  return entry.target as FieryMap\n}\n\nfunction getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n    const missing: FieryMap = { ...target }\n\n    querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n    {\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc, true)\n\n      refreshData(cache, doc, entry)\n\n      system.setProperty(target, doc.id, cache.data)\n\n      delete missing[doc.id]\n\n    }, options.onError)\n\n    forEach(missing, (missed, key) => system.removeProperty(target, key as string))\n    forEach(missing, missed => removeDataFromEntry(entry, missed))\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n\n    (<any>querySnapshot).docChanges().forEach((change: firebase.firestore.DocumentChange) =>\n    {\n      const doc: firebase.firestore.DocumentSnapshot = change.doc\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n      switch (change.type) {\n        case 'modified':\n        case 'added':\n          const data: FieryData = refreshData(cache, doc, entry)\n          system.setProperty(target, doc.id, data)\n          break\n        case 'removed':\n          system.removeProperty(target, doc.id)\n          if (doc.exists) {\n            removeCacheFromEntry(entry, cache)\n          } else {\n            if (options.propExists) {\n              system.setProperty(cache.data, options.propExists, false)\n            }\n            cache.exists = false\n            destroyCache(cache)\n          }\n          break\n      }\n    }, options.onError)\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\nimport { PROP_UID } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeCacheFromEntry, removeDataFromEntry, destroyCache } from '../cache'\nimport { forEach } from '../util'\nimport { stats } from '../stats'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\n\n\n\nexport function factory (entry: FieryEntry): FieryData[]\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n  const initial = getInitialHandler(entry)\n\n  if (!entry.target)\n  {\n    entry.target = options.newCollection()\n  }\n\n  stats.queries++\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then(initial)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(\n      options.liveOptions,\n      getLiveHandler(entry, initial),\n      options.onError\n    )\n  }\n\n  return entry.target as FieryData[]\n}\n\nfunction getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n    const missing: FieryMap = {}\n\n    if (initialTarget)\n    {\n      for (let i = 0; i < target.length; i++)\n      {\n        const data = target[i]\n        missing[data[PROP_UID]] = data\n      }\n    }\n\n    system.arrayResize(target, 0)\n\n    querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n    {\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc, true)\n\n      refreshData(cache, doc, entry)\n\n      system.arrayAdd(target, cache.data)\n\n      delete missing[cache.uid]\n\n    }, options.onError)\n\n    forEach(missing, value => removeDataFromEntry(entry, value))\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n\n    (<any>querySnapshot).docChanges().forEach((change: firebase.firestore.DocumentChange) =>\n    {\n      const doc: firebase.firestore.DocumentSnapshot = change.doc\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n      switch (change.type)\n      {\n        case 'added':\n          const created: FieryData = refreshData(cache, doc, entry)\n          system.arraySet(target, change.newIndex, created)\n          break\n\n        case 'removed':\n          if (doc.exists) {\n            removeCacheFromEntry(entry, cache)\n          } else {\n            if (options.propExists) {\n              system.setProperty(cache.data, options.propExists, false)\n            }\n            cache.exists = false\n            destroyCache(cache)\n          }\n          break\n\n        case 'modified':\n          const updated: FieryData = refreshData(cache, doc, entry)\n\n          if (change.oldIndex !== change.newIndex) {\n            system.arraySet(target, change.newIndex, updated)\n          }\n          break\n      }\n    }, options.onError)\n\n    system.arrayResize(target, querySnapshot.size)\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport { FierySystem, FieryInstance, FieryOptionsInput, FieryTarget, FierySource, FieryEntry, FieryOptions } from './types'\nimport { forEach } from './util'\nimport { factory } from './factory'\nimport { getEntry, closeEntry } from './entry'\nimport { removeCacheFromInstance } from './cache'\nimport { globalOptions } from './options'\nimport * as operations from './operations'\n\n\nexport function getInstance (systemOverrides?: Partial<FierySystem>): FieryInstance\n{\n  const system = buildSystem(systemOverrides)\n\n  const targetFactory = (source: FierySource, options?: FieryOptionsInput, name?: string): FieryTarget => {\n    return factory(getEntry(instance, source, options, name))\n  }\n\n  const instance: FieryInstance = targetFactory as FieryInstance\n\n  instance.system = system\n  instance.entry = {}\n  instance.entryList = []\n  instance.options = {}\n  instance.sources = {}\n  instance.cache = {}\n  instance.update = operations.update\n  instance.sync = operations.sync\n  instance.remove = operations.remove\n  instance.clear = operations.clear\n  instance.getChanges = operations.getChanges\n  instance.ref = operations.ref\n  instance.create = operations.create\n  instance.createSub = operations.createSub\n  instance.build = operations.build\n  instance.buildSub = operations.buildSub\n  instance.entryFor = entryFor\n  instance.destroy = destroy\n  instance.free = free\n  instance.linkSources = linkSources\n\n  return instance as FieryInstance\n}\n\nfunction destroy(this: FieryInstance)\n{\n  forEach(this.options, opt => delete globalOptions.map[opt.id])\n  forEach(this.cache, cached => removeCacheFromInstance(cached, this))\n  forEach(this.entryList, entry => closeEntry(entry, true))\n\n  this.entry = {}\n  this.entryList = []\n  this.options = {}\n  this.sources = {}\n  this.cache = {}\n}\n\nfunction free (this: FieryInstance, target: FieryTarget)\n{\n  const entry = this.entryFor(target)\n\n  if (entry !== null)\n  {\n    closeEntry(entry, true)\n  }\n}\n\nfunction entryFor (this: FieryInstance, target: FieryTarget): FieryEntry | null\n{\n  const entries = this.entryList\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    const entry = entries[i]\n\n    if (entry && entry.target === target)\n    {\n      return entry\n    }\n  }\n\n  return null\n}\n\nfunction linkSources (this: FieryInstance, container: any): void\n{\n  const entryList: (FieryEntry | null)[] = this.entryList\n\n  for (let i = 0; i < entryList.length; i++)\n  {\n    const entry: FieryEntry | null = entryList[i]\n\n    if (entry === null)\n    {\n      continue\n    }\n\n    const options: FieryOptions = entry.options\n\n    if (!options.parent && !entry.name)\n    {\n      for (let prop in container)\n      {\n        if (container[prop] === entry.target)\n        {\n          entry.name = prop\n\n          this.entry[ prop ] = entry\n          this.sources[ prop ] = entry.source\n\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction buildSystem(systemOverrides?: Partial<FierySystem>): FierySystem\n{\n  const system = systemOverrides || {}\n\n  for (let prop in defaultSystem)\n  {\n    const systemProp = prop as keyof FierySystem\n\n    if (!(systemProp in system))\n    {\n      system[systemProp] = defaultSystem[systemProp]\n    }\n  }\n\n  return system as FierySystem\n}\n\nconst defaultSystem: FierySystem = {\n  removeNamed: (name: string) => {\n\n  },\n  setProperty: (target: any, property: string, value: any) => {\n    target[property] = value\n  },\n  removeProperty: (target: any, property: string) => {\n    delete target[property]\n  },\n  arraySet: (target: any[], index: number, value: any) => {\n    target[index] = value\n  },\n  arrayAdd: (target: any[], value: any) => {\n    target.push(value)\n  },\n  arrayResize: (target: any[], size: number) => {\n    target.length = size\n  }\n}\n"],"sourceRoot":""}