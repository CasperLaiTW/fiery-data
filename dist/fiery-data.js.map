{"version":3,"sources":["webpack://FieryData/webpack/universalModuleDefinition","webpack://FieryData/webpack/bootstrap","webpack://FieryData/./src/util.ts","webpack://FieryData/./src/cache.ts","webpack://FieryData/./src/callbacks.ts","webpack://FieryData/./src/stats.ts","webpack://FieryData/./src/data.ts","webpack://FieryData/./src/constants.ts","webpack://FieryData/./src/entry.ts","webpack://FieryData/./src/options.ts","webpack://FieryData/./src/factory/index.ts","webpack://FieryData/./src/operations.ts","webpack://FieryData/./src/index.ts","webpack://FieryData/./src/instance.ts","webpack://FieryData/./src/factory/document.ts","webpack://FieryData/./src/store.ts","webpack://FieryData/./src/pager.ts","webpack://FieryData/./src/factory/map.ts","webpack://FieryData/./src/factory/collection.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","x","toString","isFunction","isString","isArray","Array","isDate","Date","isDefined","isNumber","isFinite","parseDate","toDate","coalesce","a","b","isCollectionSource","source","getFields","fields","otherwise","forEach","iterable","callback","length","prop","isEqual","getTime","constants_1","entry_1","factory_1","stats_1","callbacks_1","getCacheForReference","entry","ref","checkSubs","uid","storeKey","UID_SEPARATOR","path","globalCache","addCacheToEntry","data","options","newDocument","PROP_UID","cache","exists","uses","sub","firstEntry","entries","removed","createRecord","callbacks","onCacheCreate","triggerEvent","getCacheForData","removeCacheFromEntry","children","entryIndex","indexOf","splice","inInstance","instance","removeCacheFromInstance","isReferencedSub","onSubDestroy","closeEntry","entrySubs","addSubs","push","checkForDestroy","destroyCache","force","onCacheDestroy","subProp","hasLiveSub","subOptions","subName","ENTRY_SEPARATOR","subSource","doc","parent","split","PATH_SEPARATOR","pop","collection","subEntry","getEntry","onSubCreate","live","record","defineProperties","recordProperties","destroyGlobalCache","getCacheForDocument","stats","reads","removeDataFromEntry","onInvalidOperation","operation","onUpdate","values","onSet","onDelete","onClear","props","onGetChanges","onRefresh","cachedOnly","onBuild","onCollectionAdd","target","onCollectionRemove","onCollectionModify","onCollectionChanged","onDocumentUpdate","onDocumentMissing","onInstanceCreate","onInstanceDestroy","queries","deletes","updates","sets","writes","util_1","copyData","system","update","setProperty","decodeData","encoded","decode","decoders","parseDocument","out","_a","propValue","id","refreshData","decoded","propExists","propParent","encodeData","explicit","include","exclude","encoders","PROP_VALUE","RECORD_OPTIONS","refresh","sync","save","remove","clear","build","getChanges","EVENTS_OPTIONS","missing","destroy","options_1","store_1","cache_1","operations","off","index","entryList","cached","getEntryRecordFunctions","excludeSubs","initial","buildSub","createSub","fieldsOrEquality","equalityOrNothing","getEntryRecordProperties","recordFunctions","recordOptions","optionsInput","namedSource","getOptions","getStoreKey","existing","recycleOptions","sources","updatePointers","querySnapshot","docs","first","last","docChanges","performMerge","defaults","mergeOptions","optionsProp","merger","globalOptions","defined","user","undefined","onError","message","onMissing","onSuccess","results","onRemove","onMutate","mutate","liveOptions","eventsOptions","event","handler","events","map","getOptionsByKey","parseInt","extends","shared","type","typeConstructor_1","newCollection","excludeMap","timestamps","decoders_1","timestamp","nameOrMap","namedOptions","setGlobalOptions","mergeStrategy","ignore","replace","chain","apply","arguments","shallow","__assign","concat","union","added","exclusions_1","defaultsArray_1","optionsArray_1","vm","query","once","nullifyMissing","onceOptions","document_1","map_1","collection_1","where","default","data_1","pager_1","_this","delete","Promise","reject","buildFromCollection","defaultValue","pager","entryFor","getPager","system_1","then","options_2","values_1","createValues","set","propsArray","ref_1","store","firestore","promises_1","deleting","deleteCount","_i","propsArray_1","firebaseRuntime","app","firebase_","FieldValue","all","equality_1","options_3","current_1","remote","local","changed","remoteValue","localValue","resolve","ref_2","built","instance_1","getInstance","__export","opt","free","linkSources","container","systemOverrides","defaultSystem","systemProp","buildSystem","removeNamed","removeProperty","arraySet","arrayAdd","arrayResize","size","initialTarget","missingSynchronously","onSnapshot","handleDocumentUpdate","promise","catch","_resolve","_reject","reason","stores","keyNext","idToKey","pointer","hasQuery","requery","hasData","hasNext","hasPrev","next","startAfter","prev","endBefore","startAt","missed","getInitialHandler","resolve_1","reject_1","handleInitial","handleUpdate","changes","change","updated","created","getUpdateHandler","getLiveHandler","newIndex","oldIndex"],"mappings":"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","file":"fiery-data.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FieryData\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FieryData\"] = factory();\n\telse\n\t\troot[\"FieryData\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryOptions, FierySource, FieryData, FieryMetadata, FieryEntry, FieryFields } from './types'\nimport { getOptionsByKey } from './options'\n\n\n\nexport function isObject (x?: any): x is Object\n{\n  return Object.prototype.toString.call(x) === '[object Object]'\n}\n\nexport function isFunction (x?: any): x is Function\n{\n  return typeof x === 'function'\n}\n\nexport function isString (x?: any): x is string\n{\n  return typeof x === 'string'\n}\n\nexport function isArray (x?: any): x is Array<any>\n{\n  return x && x instanceof Array\n}\n\nexport function isDate (x?: any): x is Date\n{\n  return x && x instanceof Date\n}\n\nexport function isDefined (x?: any): boolean\n{\n  return typeof x !== 'undefined'\n}\n\nexport function isNumber (x?: any): x is number\n{\n  return typeof x === 'number' && isFinite(x)\n}\n\nexport function parseDate (x?: any): Date | any\n{\n  if (isDate(x))\n  {\n    return x\n  }\n\n  if (x && isFunction(x.toDate))\n  {\n    return x.toDate()\n  }\n\n  if (isNumber(x))\n  {\n    return new Date(x)\n  }\n\n  return x\n}\n\nexport function coalesce (a?: any, b?: any): any\n{\n  return isDefined(a) ? a : b\n}\n\nexport function isCollectionSource (source: FierySource): boolean\n{\n  return !!((<any>source).where)\n}\n\nexport function getFields (fields?: FieryFields, otherwise?: string[]): string[] | undefined\n{\n  return !fields ? otherwise : (isString(fields) ? [fields] : fields)\n}\n\n// export function forEach<I, V extends I[keyof I], K extends keyof I>(iterable: I, callback: (item: V, key: K, iterable: I) => any): boolean\n// export function forEach<V, K>(iterable: V[], callback: (item: V, key: K, iterable: V[]) => any): boolean\nexport function forEach(iterable: any, callback: (item: any, key: any, iterable: any) => any): boolean\n{\n  if (isArray(iterable))\n  {\n    for (let i = 0; i < iterable.length; i++)\n    {\n      callback(iterable[i], i, iterable)\n    }\n\n    return true\n  }\n  else if (isObject(iterable))\n  {\n    for (let prop in iterable)\n    {\n      if (iterable.hasOwnProperty(prop))\n      {\n        callback(iterable[prop], prop, iterable)\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n\nexport function isEqual (a: any, b: any): boolean\n{\n  if (a === b)\n  {\n    return true\n  }\n\n  if (!a || !b)\n  {\n    return false\n  }\n\n  if (typeof a !== typeof b)\n  {\n    return false\n  }\n\n  if (isArray(a) && isArray(b))\n  {\n    if (a.length !== b.length)\n    {\n      return false\n    }\n\n    for (let i = 0; i < a.length; i++)\n    {\n      if (!isEqual(a[i], b[i]))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (isDate(a) && isDate(b))\n  {\n    return a.getTime() === b.getTime()\n  }\n\n  if (isObject(a) && isObject(b))\n  {\n    for (let prop in a)\n    {\n      if (!isEqual(a[prop], b[prop]))\n      {\n        return false\n      }\n    }\n\n    for (let prop in b)\n    {\n      if (!(prop in a))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { UID_SEPARATOR, PROP_UID, PATH_SEPARATOR, ENTRY_SEPARATOR } from './constants'\nimport { FieryInstance, FieryEntry, FierySource, FieryCacheEntry, FieryCache, FieryData, FieryOptions, FieryOptionsMap, FieryEntryMap } from './types'\nimport { closeEntry, getEntry } from './entry'\nimport { factory } from './factory'\nimport { stats } from './stats'\nimport { callbacks } from './callbacks'\n\n\n\nexport let globalCache: FieryCache = Object.create(null)\n\n\nexport function destroyGlobalCache()\n{\n  for (const uid in globalCache)\n  {\n    destroyCache(globalCache[uid], true)\n  }\n}\n\nexport function getCacheForReference (entry: FieryEntry, ref: firebase.firestore.DocumentReference, checkSubs: boolean = false): FieryCacheEntry\n{\n  const uid = entry.storeKey + UID_SEPARATOR + ref.path\n\n  if (uid in globalCache)\n  {\n    addCacheToEntry(globalCache[uid], entry, checkSubs)\n\n    return globalCache[uid]\n  }\n\n  const data = entry.options.newDocument()\n\n  data[PROP_UID] = uid\n\n  const cache: FieryCacheEntry = {\n    uid,\n    data,\n    ref,\n    exists: null,\n    uses: 0,\n    sub: {},\n    firstEntry: entry,\n    entries: [],\n    removed: false\n  }\n\n  globalCache[uid] = cache\n\n  addCacheToEntry(cache, entry, true)\n  createRecord(data, entry)\n\n  callbacks.onCacheCreate(cache)\n\n  entry.options.triggerEvent(data, 'create')\n\n  return cache\n}\n\nexport function getCacheForDocument (entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot, checkSubs: boolean = false): FieryCacheEntry\n{\n  stats.reads++\n\n  return getCacheForReference(entry, doc.ref, checkSubs)\n}\n\nexport function getCacheForData (data: FieryData): FieryCacheEntry | undefined\n{\n  return globalCache[data[PROP_UID]]\n}\n\nexport function removeDataFromEntry (entry: FieryEntry, data: FieryData): void\n{\n  removeCacheFromEntry(entry, getCacheForData(data))\n}\n\nexport function removeCacheFromEntry (entry: FieryEntry, cache?: FieryCacheEntry): void\n{\n  if (cache && cache.uid in entry.children)\n  {\n    const options: FieryOptions = entry.options\n    const entries: FieryEntry[] = cache.entries\n\n    // remove reference to entry from cache\n    const entryIndex = entries.indexOf(entry)\n    if (entryIndex !== -1)\n    {\n      entries.splice(entryIndex, 1)\n    }\n\n    // remove cache reference from entry\n    delete entry.children[cache.uid]\n\n    // if no more entries for this instance, remove from instance\n    let inInstance: boolean = false\n\n    for (var i = 0; i < entries.length; i++)\n    {\n      if (entries[i].instance === entry.instance)\n      {\n        inInstance = true\n        break\n      }\n    }\n\n    if (!inInstance)\n    {\n      removeCacheFromInstance(cache, entry.instance, true)\n    }\n\n    // turn off any unneeded subs if we're still being used\n    if (cache.uses > 0)\n    {\n      for (var sub in cache.sub)\n      {\n        if (!isReferencedSub(cache, sub))\n        {\n          callbacks.onSubDestroy(cache.data, sub, cache)\n\n          closeEntry(cache.sub[sub], true)\n        }\n      }\n    }\n  }\n}\n\nexport function isReferencedSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  const entries: FieryEntry[] = cache.entries\n  const subs: FieryEntryMap = cache.sub\n\n  for (var i = 0; i < entries.length; i++)\n  {\n    const entry: FieryEntry = entries[i]\n    const entrySubs: FieryOptionsMap | undefined = entry.options.sub as (FieryOptionsMap | undefined)\n\n    if (entrySubs && sub in entrySubs)\n    {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function addCacheToEntry (cache: FieryCacheEntry, entry: FieryEntry, checkSubs: boolean = false): void\n{\n  if (!(cache.uid in entry.instance.cache))\n  {\n    entry.instance.cache[cache.uid] = cache\n    cache.uses++\n  }\n\n  if (!(cache.uid in entry.children))\n  {\n    cache.entries.push(entry)\n    entry.children[cache.uid] = cache\n\n    addSubs(cache, entry)\n  }\n  else if (checkSubs)\n  {\n    addSubs(cache, entry)\n  }\n}\n\nexport function removeCacheFromInstance (cache: FieryCacheEntry, instance: FieryInstance, checkForDestroy: boolean = true): void\n{\n  if (cache.uid in instance.cache)\n  {\n    cache.uses--\n    delete instance.cache[cache.uid]\n\n    const entries: FieryEntry[] = cache.entries\n\n    for (let i = entries.length - 1; i >= 0; i--)\n    {\n      const entry = entries[i]\n\n      if (entry.instance === instance)\n      {\n        removeCacheFromEntry(entry, cache)\n      }\n    }\n\n    if (checkForDestroy && cache.uses <= 0)\n    {\n      destroyCache(cache)\n    }\n  }\n}\n\nexport function destroyCache (cache: FieryCacheEntry, force: boolean = false): void\n{\n  const entries: FieryEntry[] = cache.entries\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    removeCacheFromInstance(cache, entries[i].instance, false)\n  }\n\n  for (var sub in cache.sub)\n  {\n    closeEntry(cache.sub[sub], true)\n  }\n\n  if (cache.uses <= 0 && !cache.removed)\n  {\n    callbacks.onCacheDestroy(cache)\n\n    cache.firstEntry.options.triggerEvent(cache.data, 'destroy')\n\n    delete globalCache[cache.uid]\n    delete cache.ref\n    delete cache.sub\n    delete cache.data\n\n    cache.uses = 0\n    cache.entries.length = 0\n    cache.removed = true\n  }\n}\n\nexport function addSubs (cache: FieryCacheEntry, entry: FieryEntry): void\n{\n  const options: FieryOptions = entry.options\n  const data: FieryData = cache.data\n  const ref: firebase.firestore.DocumentReference | undefined = cache.ref\n\n  if (options.sub && ref)\n  {\n    for (let subProp in options.sub)\n    {\n      if (!hasLiveSub(cache, subProp))\n      {\n        let subOptions: FieryOptions = options.sub[subProp] as FieryOptions\n        let subName: string = cache.uid + ENTRY_SEPARATOR + subProp\n\n        let subSource: FierySource = subOptions.doc\n          ? ref.parent.doc(cache.uid.split(PATH_SEPARATOR).pop() + PATH_SEPARATOR + subProp)\n          : ref.collection(subProp)\n\n        let subEntry: FieryEntry = getEntry(\n          entry.instance,\n          subSource,\n          subOptions,\n          subName,\n          false // we shouldn't add this to sources\n        )\n\n        subEntry.parent = cache\n        cache.sub[subProp] = subEntry\n\n        data[subProp] = factory(subEntry)\n\n        callbacks.onSubCreate(data, subProp, cache)\n      }\n    }\n  }\n}\n\nexport function hasLiveSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  return sub in cache.sub && cache.sub[sub].live\n}\n\nexport function createRecord (data: FieryData, entry: FieryEntry): FieryData\n{\n  const options: FieryOptions = entry.options\n\n  if (options.record)\n  {\n    Object.defineProperties(data, entry.recordProperties)\n  }\n\n  return data\n}\n","\nimport { FieryData, FieryCacheEntry, FieryTarget, FieryEntry, FieryInstance } from './types'\n\nexport const callbacks =\n{\n  onInvalidOperation (data: FieryData, operation: string) {},\n\n  onUpdate (data: FieryData, values: FieryData, cache: FieryCacheEntry) {},\n\n  onSet (data: FieryData, values: FieryData, cache: FieryCacheEntry) {},\n\n  onDelete (data: FieryData, cache: FieryCacheEntry) {},\n\n  onClear (data: FieryData, props: string[]) {},\n\n  onGetChanges (data: FieryData, cache: FieryCacheEntry, fields?: string[]) {},\n\n  onRefresh (data: FieryData, cachedOnly?: boolean) {},\n\n  onBuild (data: FieryData, cache: FieryCacheEntry) {},\n\n  onCacheCreate (cache: FieryCacheEntry) {},\n\n  onCacheDestroy (cache: FieryCacheEntry) {},\n\n  onSubCreate (data: FieryData, sub: string, cache: FieryCacheEntry) {},\n\n  onSubDestroy (data: FieryData, sub: string, cache: FieryCacheEntry) {},\n\n  onCollectionAdd (data: FieryData, target: FieryTarget, entry: FieryEntry) {},\n\n  onCollectionRemove (data: FieryData, target: FieryTarget, entry: FieryEntry) {},\n\n  onCollectionModify (data: FieryData, target: FieryTarget, entry: FieryEntry) {},\n\n  onCollectionChanged (target: FieryTarget, entry: FieryEntry) {},\n\n  onDocumentUpdate (data: FieryData, entry: FieryEntry) {},\n\n  onDocumentMissing (data: FieryData, entry: FieryEntry) {},\n\n  onInstanceCreate (instance: FieryInstance) {},\n\n  onInstanceDestroy (instance: FieryInstance) {},\n}\n","\n\nexport const stats = {\n  queries: 0,\n  reads: 0,\n  deletes: 0,\n  updates: 0,\n  sets: 0,\n  writes: 0\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource, FierySystem, FieryOptions, FieryInstance, FieryEntry, FieryData, FieryMap, FieryFields, FieryCacheEntry } from './types'\nimport { isObject, getFields } from './util'\n\n\n\nexport function refreshData (cache: FieryCacheEntry, doc: firebase.firestore.DocumentSnapshot, entry: FieryEntry): FieryData\n{\n  const system: FierySystem = entry.instance.system\n  const options: FieryOptions = entry.options\n  const encoded: FieryData = parseDocument(doc, options)\n  const decoded: FieryData = decodeData(encoded, options)\n  const data: FieryData = cache.data\n\n  copyData(system, data, decoded)\n\n  if (options.propExists)\n  {\n    system.setProperty(data, options.propExists, doc.exists)\n  }\n\n  if (options.propParent && entry.parent)\n  {\n    system.setProperty(data, options.propParent, entry.parent.data)\n  }\n\n  cache.exists = doc.exists\n\n  options.triggerEvent(data, 'update')\n\n  return data;\n}\n\nexport function copyData (system: FierySystem, data: FieryData, update: FieryData): FieryData\n{\n  for (let prop in update)\n  {\n    system.setProperty(data, prop, update[prop])\n  }\n\n  return data\n}\n\nexport function decodeData (encoded: FieryData, options: FieryOptions): FieryData\n{\n  if (options.decode)\n  {\n    encoded = options.decode(encoded)\n  }\n  else if (options.decoders)\n  {\n    for (let prop in options.decoders)\n    {\n      if (prop in encoded)\n      {\n        encoded[prop] = options.decoders[prop](encoded[prop], encoded)\n      }\n    }\n  }\n\n  return encoded\n}\n\nexport function encodeData (data: FieryData, options: FieryOptions, fields?: FieryFields): FieryData\n{\n  const values: FieryData = {}\n  const explicit: string[] = getFields(fields, options.include) as string[]\n\n  if (explicit)\n  {\n    for (let i = 0; i < explicit.length; i++)\n    {\n      let prop: string = explicit[i]\n\n      if (prop in data)\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n  else\n  {\n    for (let prop in data)\n    {\n      if (!(prop in options.exclude))\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n\n  if (options.encoders)\n  {\n    for (let prop in options.encoders)\n    {\n      if (prop in values)\n      {\n        values[prop] = options.encoders[prop](values[prop], data)\n      }\n    }\n  }\n\n  return values\n}\n\nexport function parseDocument (doc: firebase.firestore.DocumentSnapshot, options: FieryOptions): FieryData\n{\n  let value = doc.data()\n  let out = (isObject(value) ? value : { [options.propValue]: value }) as FieryData\n\n  if (out && options.key)\n  {\n    out[options.key] = doc.id\n  }\n\n  return out\n}\n","\nexport const PROP_VALUE = '.value'\n\nexport const PROP_UID = '.uid'\n\nexport const UID_SEPARATOR = '///'\n\nexport const ENTRY_SEPARATOR = '/'\n\nexport const PATH_SEPARATOR = '/'\n\nexport const RECORD_OPTIONS = {\n  refresh: '$refresh',\n  sync: '$sync',\n  update: '$update',\n  save: '$save',\n  remove: '$remove',\n  ref: '$ref',\n  clear: '$clear',\n  build: '$build',\n  create: '$create',\n  getChanges: '$getChanges'\n}\n\nexport const EVENTS_OPTIONS = {\n  create: '$onCreate',\n  missing: '$onMissing',\n  update: '$onUpdate',\n  remove: '$onRemove',\n  destroy: '$onDestroy'\n}","\n\nimport { FierySystem, FieryOptionsInput, FieryEntryMap, FieryOptions, FieryInstance, FieryEntry, FierySources, FierySource, FieryCache, FieryData, FieryChanges, FieryEquality, FieryFields, FieryRecordProperties } from './types'\nimport { isCollectionSource, forEach, isDefined, isArray, isFunction } from './util'\nimport { getOptions, recycleOptions } from './options'\nimport { getStoreKey } from './store'\nimport { removeCacheFromEntry } from './cache'\nimport * as operations from './operations'\n\n\n\nexport function closeEntry (entry: FieryEntry | null, remove: boolean = false): void\n{\n  if (entry && entry.live)\n  {\n    if (entry.off)\n    {\n      entry.off()\n\n      delete entry.off\n    }\n\n    entry.live = false\n\n    if (remove)\n    {\n      const instance: FieryInstance = entry.instance\n\n      if (isDefined(entry.index))\n      {\n        instance.entryList[entry.index as number] = null\n\n        delete entry.index\n      }\n\n      if (entry.name && entry.name in instance.entry)\n      {\n        delete instance.entry[entry.name]\n      }\n\n      forEach(entry.children, cached =>\n      {\n        removeCacheFromEntry(entry, cached)\n      })\n    }\n  }\n}\n\nexport function getEntry (instance: FieryInstance, source: FierySource, optionsInput?: FieryOptionsInput, name?: string, namedSource: boolean = true)\n{\n  // Things that are allowed to change on repetitive entry calls\n  const options: FieryOptions = getOptions(optionsInput, instance)\n  const storeKey: number = getStoreKey(source)\n\n  if (name && name in instance.entry)\n  {\n    const existing: FieryEntry = instance.entry[ name ]\n\n    closeEntry(existing)\n\n    if (options.id !== existing.options.id)\n    {\n      recycleOptions(existing.options)\n    }\n\n    existing.source = source\n    existing.options = options\n    existing.storeKey = storeKey\n    existing.live = true\n\n    if (name && namedSource)\n    {\n      instance.sources[ name ] = source\n    }\n\n    return existing\n  }\n\n  const recordFunctions = getEntryRecordFunctions(instance)\n  const recordProperties = getEntryRecordProperties(options, recordFunctions)\n  const children: FieryCache = {}\n  const live: boolean = true\n  const entry: FieryEntry = {\n    name,\n    options,\n    source,\n    instance,\n    storeKey,\n    children,\n    recordFunctions,\n    recordProperties,\n    live\n  }\n\n  if (!name || !(name in instance.entry))\n  {\n    entry.index = instance.entryList.length\n\n    instance.entryList.push(entry)\n  }\n\n  if (name)\n  {\n    instance.entry[ name ] = entry\n  }\n\n  if (name && namedSource)\n  {\n    instance.sources[ name ] = source\n  }\n\n  return entry\n}\n\nexport function updatePointers (entry: FieryEntry, querySnapshot: firebase.firestore.QuerySnapshot): void\n{\n  const docs = querySnapshot.docs\n  \n  entry.first = docs[0]\n  entry.last = docs[docs.length - 1]\n}\n\nexport function getChanges (querySnapshot: firebase.firestore.QuerySnapshot): firebase.firestore.DocumentChange[]\n{\n  if (isFunction(querySnapshot.docChanges))\n  {\n    return querySnapshot.docChanges()\n  }\n\n  if (isArray(querySnapshot.docChanges))\n  {\n    return (<any>querySnapshot.docChanges) as firebase.firestore.DocumentChange[]\n  }\n\n  return []\n}\n\nexport function getEntryRecordFunctions (instance: FieryInstance)\n{\n  return {\n    refresh: function(this: FieryData, cachedOnly?: boolean): Promise<void> {\n      return operations.refresh.call(instance, this, cachedOnly)\n    },\n    sync: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.sync.call(instance, this, fields)\n    },\n    update: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.update.call(instance, this, fields)\n    },\n    save: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.save.call(instance, this, fields)\n    },\n    remove: function(this: FieryData, excludeSubs: boolean = false): Promise<void> {\n      return operations.remove.call(instance, this, excludeSubs)\n    },\n    ref: function(this: FieryData, sub?: string): FierySource {\n      return operations.ref.call(instance, this, sub)\n    },\n    clear: function(this: FieryData, props: FieryFields): Promise<void[]> {\n      return operations.clear.call(instance, this, props)\n    },\n    build: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.buildSub.call(instance, this, sub, initial)\n    },\n    create: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.createSub.call(instance, this, sub, initial)\n    },\n    getChanges: function(this: FieryData,\n      fieldsOrEquality: FieryFields | FieryEquality,\n      equalityOrNothing?: FieryEquality): Promise<FieryChanges> {\n      return operations.getChanges.call(instance, this, fieldsOrEquality, equalityOrNothing)\n    }\n  }\n}\n\nexport function getEntryRecordProperties (options: FieryOptions, recordFunctions: any): FieryRecordProperties\n{\n  const props: FieryRecordProperties = {}\n\n  for (var prop in options.recordOptions)\n  {\n    const newProp = options.recordOptions[prop]\n\n    props[newProp] = {\n      value: recordFunctions[prop]\n    }\n  }\n\n  return props\n}\n","\nimport { PROP_UID, PROP_VALUE, RECORD_OPTIONS, EVENTS_OPTIONS } from './constants'\nimport { FieryOptionsInput, FieryTarget, FieryOptions, FieryOptionsMap, FieryInstance, FieryExclusions, FierySource, FieryData, FieryMap, FieryEquality, FieryMergeStrategy, FieryMergeStrategies, FieryEvents } from './types'\nimport { parseDate, isObject, isFunction, isArray, coalesce, forEach, isDefined, isString } from './util'\nimport * as operations from './operations'\n\n\n\nexport const globalOptions =\n{\n  defined: {} as FieryOptionsMap,\n\n  user: undefined as Partial<FieryOptions> | undefined,\n\n  defaults:\n  {\n    onError: (message: any) => {},\n\n    onMissing: () => {},\n\n    onSuccess: (results: any) => {},\n\n    onRemove: () => {},\n\n    onMutate: (mutate: () => FieryTarget) => {\n      mutate()\n    },\n\n    liveOptions: {},\n\n    propValue: PROP_VALUE,\n\n    recordOptions: RECORD_OPTIONS,\n\n    newDocument: (encoded?: FieryData) => ({} as FieryData),\n\n    eventsOptions: EVENTS_OPTIONS,\n\n    triggerEvent (this: FieryOptions, data: FieryData, event: FieryEvents)\n    {\n      const handler = this.eventsOptions[event]\n\n      if (this.events && handler && data[handler])\n      {\n        data[handler]()\n      }\n    }\n\n  } as Partial<FieryOptions>,\n\n  id: 0,\n\n  map: {} as FieryOptionsMap\n}\n\n\nexport function getOptionsByKey (key: string): FieryOptions\n{\n  return globalOptions.map[parseInt(key)] as FieryOptions\n}\n\nexport function getOptions (options?: FieryOptionsInput, instance?: FieryInstance): FieryOptions\n{\n  // If a string is passed - returned a defined option.\n  if (isString(options))\n  {\n    if (!(options in globalOptions.defined))\n    {\n      throw 'The definition ' + options + ' was not found. You must call define before you use the definition'\n    }\n\n    // Ensure the defined option is properly populated\n    return getOptions(globalOptions.defined[options])\n  }\n\n  // If nothing was given, populate an empty set of options\n  if (!options || !isObject(options))\n  {\n    options = {}\n  }\n\n  // If the options was already populated, return the options\n  if (options.id && options.id in globalOptions.map)\n  {\n    return options as FieryOptions\n  }\n  // Otherwise, assign this options an id and add it to the list of options\n  else if (!options.id)\n  {\n    options.id = ++globalOptions.id\n    globalOptions.map[options.id] = options as FieryOptions\n  }\n\n  if (options.extends)\n  {\n    performMerge(options, getOptions(options.extends))\n  }\n\n  performMerge(options, globalOptions.user)\n  performMerge(options, globalOptions.defaults)\n\n  if (instance && !options.shared)\n  {\n    options.instance = instance\n    instance.options[ options.id ] = options as FieryOptions\n  }\n\n  if (options.type)\n  {\n    const typeConstructor = options.type\n\n    options.newDocument = (encoded?: FieryData) => (new typeConstructor() as FieryData)\n  }\n\n  if (!options.newCollection)\n  {\n    options.newCollection = options.map\n      ? () => ({} as FieryMap)\n      : () => ([] as FieryData[])\n  }\n\n  let excludeMap: FieryExclusions = {}\n\n  if (!options.exclude)\n  {\n    if (options.key)\n    {\n      excludeMap[options.key] = true\n    }\n  }\n  else if (isArray(options.exclude))\n  {\n    forEach(options.exclude, (value, key) => excludeMap[value] = true)\n  }\n  else\n  {\n    excludeMap = options.exclude as FieryExclusions\n  }\n\n  excludeMap[options.propValue as string] = true\n  excludeMap[PROP_UID] = true\n\n  forEach(options.recordOptions, (value, key) => excludeMap[value] = true)\n\n  options.exclude = excludeMap\n\n  if (options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptionsInput = options.sub[subProp] as FieryOptionsInput\n      let subOptions = getOptions(subOptionsInput, instance)\n\n      subOptions.parent = options as FieryOptions\n\n      options.sub[subProp] = subOptions\n\n      if (!subOptions.ref)\n      {\n        excludeMap[subProp] = true\n      }\n    }\n  }\n\n  if (isArray(options.timestamps) && options.timestamps.length)\n  {\n    let decoders = options.decoders || {}\n\n    forEach(options.timestamps, timestamp =>\n    {\n      if (!(timestamp in decoders))\n      {\n        decoders[timestamp] = parseDate\n      }\n    })\n\n    options.decoders = decoders\n  }\n\n  return options as FieryOptions\n}\n\nexport function recycleOptions (options: FieryOptions)\n{\n  const instance: FieryInstance | undefined = options.instance\n\n  if (instance)\n  {\n    delete instance.options[options.id]\n  }\n}\n\nexport function define (nameOrMap: string | FieryOptionsMap, namedOptions?: Partial<FieryOptions>): void\n{\n  if (isString(nameOrMap))\n  {\n    const options: Partial<FieryOptions> = namedOptions as Partial<FieryOptions>\n\n    options.shared = true\n\n    globalOptions.defined[nameOrMap] = options\n  }\n  else\n  {\n    for (let name in nameOrMap)\n    {\n      const options: Partial<FieryOptions> = nameOrMap[name]\n\n      options.shared = true\n\n      globalOptions.defined[name] = options\n    }\n  }\n}\n\nexport function setGlobalOptions (user?: Partial<FieryOptions>): void\n{\n  if (user)\n  {\n    user.shared = true\n  }\n\n  globalOptions.user = user\n}\n\nexport function performMerge (options: Partial<FieryOptions>, defaults?: Partial<FieryOptions>): void\n{\n  if (!defaults) return\n\n  for (let prop in mergeOptions)\n  {\n    const optionsProp = prop as keyof FieryOptions\n    const merger: FieryMergeStrategy = mergeOptions[optionsProp]\n\n    options[optionsProp] = merger( options[optionsProp], defaults[optionsProp] )\n  }\n}\n\nexport const mergeStrategy: FieryMergeStrategies =\n{\n  ignore (options: any, defaults: any): any {\n    return options\n  },\n  replace (options: any, defaults: any): any {\n    return coalesce(options, defaults)\n  },\n  chain (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return function(this: any) {\n      (defaults as Function).apply(this, arguments)\n      (options as Function).apply(this, arguments)\n    }\n  },\n  shallow (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return {\n      ...defaults,\n      ...options\n    }\n  },\n  concat (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    if (isArray(options) && isArray(defaults)) {\n      let union = options.concat(defaults)\n      let added: {[k:string]:any} = {}\n      for (let i = union.length - 1; i >= 0; i--) {\n        if (union[i] in added) {\n          union.splice(i, 1)\n        } else {\n          added[union[i]] = true\n        }\n      }\n      return union\n    }\n  },\n  exclude (options: any, defaults: any): any {\n    const union = mergeStrategy.concat(options, defaults)\n    if (!union && options && defaults) {\n      let exclusions: {[k:string]:any} = {}\n      let defaultsArray = isArray(defaults)\n      let optionsArray = isArray(options)\n      forEach(defaults, (value, key) => value ? (exclusions[defaultsArray ? value : key] = true) : 0)\n      forEach(options, (value, key) => value ? (exclusions[optionsArray ? value : key] = true) : 0)\n      return exclusions\n    }\n    return union\n  }\n}\n\nexport const mergeOptions: FieryMergeStrategies =\n{\n  extends:            mergeStrategy.ignore,\n  id:                 mergeStrategy.ignore,\n  parent:             mergeStrategy.ignore,\n  shared:             mergeStrategy.ignore,\n  vm:                 mergeStrategy.ignore,\n  key:                mergeStrategy.replace,\n  query:              mergeStrategy.replace,\n  map:                mergeStrategy.replace,\n  once:               mergeStrategy.replace,\n  type:               mergeStrategy.replace,\n  nullifyMissing:     mergeStrategy.replace,\n  newDocument:        mergeStrategy.replace,\n  newCollection:      mergeStrategy.replace,\n  decode:             mergeStrategy.replace,\n  decoders:           mergeStrategy.shallow,\n  encoders:           mergeStrategy.shallow,\n  record:             mergeStrategy.replace,\n  recordOptions:      mergeStrategy.replace,\n  recordFunctions:    mergeStrategy.replace,\n  events:             mergeStrategy.replace,\n  eventsOptions:      mergeStrategy.replace,\n  triggerEvent:       mergeStrategy.replace,\n  propValue:          mergeStrategy.replace,\n  propExists:         mergeStrategy.replace,\n  propParent:         mergeStrategy.replace,\n  onceOptions:        mergeStrategy.replace,\n  liveOptions:        mergeStrategy.replace,\n  include:            mergeStrategy.concat,\n  exclude:            mergeStrategy.exclude,\n  timestamps:         mergeStrategy.concat,\n  onError:            mergeStrategy.replace,\n  onSuccess:          mergeStrategy.replace,\n  onMissing:          mergeStrategy.replace,\n  onRemove:           mergeStrategy.replace,\n  onMutate:           mergeStrategy.replace,\n  sub:                mergeStrategy.shallow\n}\n","\n\nimport { FieryInstance, FieryEntry, FieryTarget, FierySource, FieryOptions } from '../types'\nimport { getEntry } from '../entry'\n\n\n\nimport factoryDocument from './document'\nimport factoryMap from './map'\nimport factoryCollection from './collection'\n\n\n\nexport function factory (entry: FieryEntry): FieryTarget\n{\n  let chosenFactory = (<any>entry.source).where\n    ? (entry.options.map ? factoryMap : factoryCollection)\n    : factoryDocument\n\n  return chosenFactory(entry)\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryInstance, FierySystem, FieryCacheEntry, FieryOptions, FieryEntry, FieryData, FierySource, FieryChanges, FieryEquality, FieryFields, FieryTarget, FieryPager } from './types'\nimport { parseDocument, encodeData, refreshData } from './data'\nimport { forEach, isEqual, isDefined, isFunction, isString, getFields } from './util'\nimport { getCacheForData, getCacheForReference } from './cache'\nimport { stats } from './stats'\nimport { callbacks } from './callbacks'\nimport { getPager } from './pager'\n\n\n\nexport function pager (this: FieryInstance, target: FieryTarget): FieryPager | null\n{\n  const entry = this.entryFor(target)\n\n  return entry\n    ? (entry.pager ? entry.pager : entry.pager = getPager(entry))\n    : null\n}\n\nexport function refresh (this: FieryInstance, data: FieryData, cachedOnly: boolean = false): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const entry: FieryEntry = cache.firstEntry\n    const options: FieryOptions = entry.options\n    const system: FierySystem = entry.instance.system\n    const getOptions: firebase.firestore.GetOptions = {\n      source: cachedOnly ? 'cache' : 'default'\n    }\n\n    stats.reads++\n\n    callbacks.onRefresh(data, cachedOnly)\n\n    return cache.ref.get(getOptions).then(doc =>\n    {\n      options.onMutate(() =>\n      {\n        if (doc.exists)\n        {\n          refreshData(cache, doc, entry)\n        }\n        else\n        {\n          if (options.propExists)\n          {\n            system.setProperty(cache.data, options.propExists, false)\n          }\n\n          cache.exists = false\n        }\n\n        return cache.data\n      })\n    })\n  }\n\n  callbacks.onInvalidOperation(data, 'refresh')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function save (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    if (cache.exists)\n    {\n      stats.writes++\n      stats.updates++\n\n      callbacks.onUpdate(data, values, cache)\n\n      return cache.ref.update(values)\n    }\n    else\n    {\n      return cache.ref.get().then(doc =>\n      {\n        stats.writes++\n\n        if (doc.exists)\n        {\n          stats.updates++\n\n          callbacks.onUpdate(data, values, cache)\n\n          return cache.ref.update(values)\n        }\n        else\n        {\n          const createValues = encodeData(data, options)\n\n          stats.sets++\n\n          callbacks.onSet(data, createValues, cache)\n\n          return cache.ref.set(createValues)\n        }\n      })\n    }\n  }\n\n  callbacks.onInvalidOperation(data, 'save')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function update (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    stats.writes++\n    stats.updates++\n\n    callbacks.onUpdate(data, values, cache)\n\n    return cache.ref.update(values)\n  }\n\n  callbacks.onInvalidOperation(data, 'update')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function sync (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    stats.sets++\n    stats.writes++\n\n    callbacks.onSet(data, values, cache)\n\n    return cache.ref.set(values)\n  }\n\n  callbacks.onInvalidOperation(data, 'sync')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function remove (this: FieryInstance, data: FieryData, excludeSubs: boolean = false): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n\n    if (!excludeSubs && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        forEach(data[subProp], (sub) =>\n        {\n          remove.call(this, sub as FieryData)\n        })\n      }\n    }\n\n    stats.deletes++\n\n    callbacks.onDelete(data, cache)\n\n    return cache.ref.delete()\n  }\n\n  callbacks.onInvalidOperation(data, 'remove')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function clear (this: FieryInstance, data: FieryData, props: FieryFields): Promise<void[]>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n  const propsArray: string[] = getFields(props) as string[]\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const ref: firebase.firestore.DocumentReference = cache.ref\n    const store: firebase.firestore.Firestore = ref.firestore\n    const promises: Promise<void>[] = []\n\n    const deleting: any = {}\n    let deleteCount: number = 0\n\n    for (let prop of propsArray)\n    {\n      if (options.sub && prop in options.sub && data[prop])\n      {\n        forEach(data[prop], (sub) =>\n        {\n          promises.push(remove.call(this, sub as FieryData))\n        })\n      }\n      else if (prop in data)\n      {\n        let firebaseRuntime: any = (<any>store.app).firebase_\n\n        if (firebaseRuntime)\n        {\n          deleting[prop] = firebaseRuntime.firestore.FieldValue.delete()\n          deleteCount++\n        }\n      }\n    }\n\n    if (deleteCount > 0)\n    {\n      stats.updates++\n      stats.writes++\n\n      promises.push(ref.update(deleting))\n    }\n\n    callbacks.onClear(data, propsArray)\n\n    return Promise.all(promises)\n  }\n\n  callbacks.onInvalidOperation(data, 'clear')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function getChanges (this: FieryInstance,\n  data: FieryData,\n  fieldsOrEquality: FieryFields | FieryEquality,\n  equalityOrNothing?: FieryEquality): Promise<FieryChanges>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const fields: FieryFields | undefined = isFunction(fieldsOrEquality) ? undefined : getFields(fieldsOrEquality as FieryFields)\n    const equality: FieryEquality = ((fields ? equalityOrNothing : fieldsOrEquality) || isEqual) as FieryEquality\n    const options: FieryOptions = cache.firstEntry.options\n    const current: FieryData = encodeData(data, options, fields)\n\n    stats.reads++\n\n    callbacks.onGetChanges(data, cache, fields)\n\n    return cache.ref.get().then(doc =>\n    {\n      const encoded: FieryData = parseDocument(doc, options)\n      const remote: FieryData = {}\n      const local: FieryData = {}\n      let changed = false\n\n      for (let prop in current)\n      {\n        let remoteValue = encoded[prop]\n        let localValue = current[prop]\n\n        if (!equality(remoteValue, localValue))\n        {\n          changed = true\n          remote[prop] = remoteValue\n          local[prop] = localValue\n        }\n      }\n\n      return Promise.resolve({ changed, remote, local })\n    })\n  }\n\n  callbacks.onInvalidOperation(data, 'getChanges')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function ref (this: FieryInstance, data: FieryData, sub?: string): FierySource\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return sub ? ref.collection(sub) : ref\n  }\n\n  throw 'The given data is out of scope and cannot be referenced.'\n}\n\nexport function create <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  const built: T = this.build(target, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function createSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const built: T = this.buildSub(data, sub, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function build <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  const entry = this.entryFor(target)\n\n  if (entry)\n  {\n    return buildFromCollection (entry.source as firebase.firestore.CollectionReference, entry, initial)\n  }\n\n  throw 'Cannot build ' + target + + ', it does not exist in the current $fiery instance.'\n}\n\nexport function buildSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref && sub in cache.sub)\n  {\n    const entry: FieryEntry = cache.sub[sub]\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return buildFromCollection(ref.collection(sub), entry, initial)\n  }\n\n  throw 'Cannot build in the sub collection ' + sub + + ', the parent data does not exist in the current $fiery instance or the sub collection is not defined in the options.'\n}\n\nexport function buildFromCollection <T extends FieryData>(collection: firebase.firestore.CollectionReference, entry: FieryEntry, initial?: FieryData): T\n{\n  const options: FieryOptions = entry.options\n  const ref = collection.doc()\n  const cache: FieryCacheEntry = getCacheForReference(entry, ref)\n\n  if (options.defaults)\n  {\n    forEach(options.defaults, (defaultValue, prop) =>\n    {\n      if (!initial || !(prop in initial))\n      {\n        cache.data[prop] = isFunction(defaultValue) ? defaultValue() : defaultValue\n      }\n    })\n  }\n\n  if (initial)\n  {\n    forEach(initial, (value, prop) =>\n    {\n      cache.data[prop] = value\n    })\n  }\n\n  callbacks.onBuild(cache.data, cache)\n\n  return cache.data as T\n}\n","\nimport { getInstance } from './instance'\n\nexport * from './constants'\nexport * from './types'\nexport { stats } from './stats'\nexport { callbacks } from './callbacks'\nexport { define, setGlobalOptions, mergeStrategy, mergeOptions, getOptions } from './options'\nexport { getCacheForData, destroyCache, destroyGlobalCache } from './cache'\n\nexport { getInstance }\nexport default getInstance\n","\nimport { FierySystem, FieryInstance, FieryOptionsInput, FieryTarget, FierySource, FieryEntry, FieryOptions } from './types'\nimport { forEach, isString } from './util'\nimport { factory } from './factory'\nimport { getEntry, closeEntry } from './entry'\nimport { removeCacheFromInstance } from './cache'\nimport { globalOptions } from './options'\nimport { callbacks } from './callbacks'\nimport * as operations from './operations'\n\n\nexport function getInstance (systemOverrides?: Partial<FierySystem>): FieryInstance\n{\n  const system = buildSystem(systemOverrides)\n\n  const targetFactory = (source: FierySource, options?: FieryOptionsInput, name?: string): FieryTarget => {\n    return factory(getEntry(instance, source, options, name))\n  }\n\n  const instance: FieryInstance = targetFactory as FieryInstance\n\n  instance.system = system\n  instance.entry = {}\n  instance.entryList = []\n  instance.options = {}\n  instance.sources = {}\n  instance.cache = {}\n  instance.pager = operations.pager\n  instance.refresh = operations.refresh\n  instance.update = operations.update\n  instance.save = operations.save\n  instance.sync = operations.sync\n  instance.remove = operations.remove\n  instance.clear = operations.clear\n  instance.getChanges = operations.getChanges\n  instance.ref = operations.ref\n  instance.create = operations.create\n  instance.createSub = operations.createSub\n  instance.build = operations.build\n  instance.buildSub = operations.buildSub\n  instance.entryFor = entryFor\n  instance.destroy = destroy\n  instance.free = free\n  instance.linkSources = linkSources\n\n  callbacks.onInstanceCreate(instance as FieryInstance)\n\n  return instance as FieryInstance\n}\n\nfunction destroy(this: FieryInstance)\n{\n  forEach(this.options, opt => delete globalOptions.map[opt.id])\n  forEach(this.cache, cached => removeCacheFromInstance(cached, this))\n  forEach(this.entryList, entry => closeEntry(entry, true))\n\n  this.entry = {}\n  this.entryList = []\n  this.options = {}\n  this.sources = {}\n  this.cache = {}\n\n  callbacks.onInstanceDestroy(this)\n}\n\nfunction free (this: FieryInstance, target: FieryTarget)\n{\n  const entry = this.entryFor(target)\n\n  if (entry !== null)\n  {\n    closeEntry(entry, true)\n  }\n}\n\nfunction entryFor (this: FieryInstance, target: string | FieryTarget): FieryEntry | null\n{\n  if (isString(target))\n  {\n    return this.entry[ target ]\n  }\n\n  const entries = this.entryList\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    const entry = entries[i]\n\n    if (entry && entry.target === target)\n    {\n      return entry\n    }\n  }\n\n  return null\n}\n\nfunction linkSources (this: FieryInstance, container: any): void\n{\n  const entryList: (FieryEntry | null)[] = this.entryList\n\n  for (let i = 0; i < entryList.length; i++)\n  {\n    const entry: FieryEntry | null = entryList[i]\n\n    if (entry === null)\n    {\n      continue\n    }\n\n    const options: FieryOptions = entry.options\n\n    if (!options.parent && !entry.name)\n    {\n      for (let prop in container)\n      {\n        if (container[prop] === entry.target)\n        {\n          entry.name = prop\n\n          this.entry[ prop ] = entry\n          this.sources[ prop ] = entry.source\n\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction buildSystem(systemOverrides?: Partial<FierySystem>): FierySystem\n{\n  const system = systemOverrides || {}\n\n  for (let prop in defaultSystem)\n  {\n    const systemProp = prop as keyof FierySystem\n\n    if (!(systemProp in system))\n    {\n      system[systemProp] = defaultSystem[systemProp]\n    }\n  }\n\n  return system as FierySystem\n}\n\nconst defaultSystem: FierySystem = {\n  removeNamed: (name: string) => {\n\n  },\n  setProperty: (target: any, property: string, value: any) => {\n    target[property] = value\n  },\n  removeProperty: (target: any, property: string) => {\n    delete target[property]\n  },\n  arraySet: (target: any[], index: number, value: any) => {\n    target[index] = value\n  },\n  arrayAdd: (target: any[], value: any) => {\n    target.push(value)\n  },\n  arrayResize: (target: any[], size: number) => {\n    target.length = size\n  }\n}\n","\nimport * as firebase from 'firebase'\n\n\nimport { FierySystem, FieryOptions, FieryEntry, FieryData, FieryCacheEntry, FieryTarget } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForReference, removeDataFromEntry, destroyCache } from '../cache'\nimport { stats } from '../stats'\nimport { callbacks } from '../callbacks'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.DocumentSnapshot) => any\ntype OnResolve = (target: FieryTarget) => any\ntype OnReject = (reason: any) => any\n\n\n\nexport function factory (entry: FieryEntry): FieryData\n{\n  const source: firebase.firestore.DocumentReference = entry.source as firebase.firestore.DocumentReference\n  const options: FieryOptions = entry.options\n  const cache: FieryCacheEntry = getCacheForReference(entry, source, true)\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  let missingSynchronously = false\n  let resolve: OnResolve = () => {}\n  let reject: OnReject = () => {}\n\n  const onSnapshot = (doc: firebase.firestore.DocumentSnapshot) =>\n  {\n    options.onMutate(() =>\n    {\n        handleDocumentUpdate(cache, entry, doc)\n\n        return cache.data\n    })\n\n    missingSynchronously = !doc.exists\n\n    resolve(cache.data)\n\n    return cache.data\n  }\n\n  if (initialTarget && initialTarget !== cache.data)\n  {\n    removeDataFromEntry(entry, initialTarget)\n  }\n\n  entry.target = cache.data\n\n  stats.queries++\n\n  if (options.once)\n  {\n    entry.promise = source.get(options.onceOptions)\n      .then(onSnapshot)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n      resolve = _resolve\n      reject = _reject\n    })\n\n    entry.off = source.onSnapshot(\n      options.liveOptions,\n      onSnapshot,\n      (reason) => {\n        reject(reason)\n        options.onError(reason)\n      }\n    )\n  }\n\n  if (missingSynchronously && options.nullifyMissing)\n  {\n    return (<any>null) as FieryData\n  }\n\n  return entry.target as FieryData\n}\n\nexport function handleDocumentUpdate (cache: FieryCacheEntry, entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot): void\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  if (!doc.exists)\n  {\n    if (options.propExists)\n    {\n      system.setProperty(cache.data, options.propExists, false)\n    }\n\n    if (cache.exists === null)\n    {\n      callbacks.onDocumentMissing(cache.data, entry)\n\n      options.triggerEvent(cache.data, 'missing')\n    }\n    else\n    {      \n      options.triggerEvent(cache.data, 'remove')\n    }\n\n    cache.exists = false\n\n    if (options.nullifyMissing)\n    {\n      destroyCache(cache)\n\n      if (entry.name)\n      {\n        system.removeNamed(entry.name)\n      }\n    }\n  }\n  else\n  {\n    refreshData(cache, doc, entry)\n\n    options.onSuccess(cache.data)\n\n    callbacks.onDocumentUpdate(cache.data, entry)\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource } from './types'\n\n\n\nexport const stores = {\n\n  keyNext: 0,\n\n  map: { } as { [storeKey: number]: firebase.firestore.Firestore },\n\n  idToKey: { } as { [id: string]: number }\n\n}\n\nexport function getStoreKey (source: FierySource): number\n{\n  const firestore: firebase.firestore.Firestore = source.firestore\n  const id: string = firestore.app.name\n  let key: number = stores.idToKey[id]\n\n  if (!key)\n  {\n    key = ++stores.keyNext\n    stores.map[key] = firestore\n    stores.idToKey[id] = key\n  }\n\n  return key\n}\n","\nimport { FieryEntry, FieryPager, FieryTarget } from './types'\nimport { isArray, isObject } from './util'\n\n\n\nexport function getPager(entry: FieryEntry): FieryPager\n{\n  let pointer: firebase.firestore.DocumentSnapshot | undefined\n\n  const pager: FieryPager =\n  {\n    index: 0,\n\n    hasQuery(): boolean\n    {\n      return !!(entry.query && entry.requery)\n    },\n\n    hasData(): boolean\n    {\n      const target = entry.target\n\n      if (isArray(target))\n      {\n        return target.length > 0\n      }\n\n      if (isObject(target))\n      {\n        for (let prop in target)\n        {\n          return true\n        }\n      }\n\n      return false\n    },\n\n    hasNext(): boolean\n    {\n      return this.hasQuery() && this.hasData()\n    },\n\n    hasPrev(): boolean\n    {\n      return this.hasQuery() && this.index > 0\n    },\n\n    next(): Promise<FieryTarget>\n    {\n      const { query, requery, last, first, off } = entry\n\n      if (query && requery && last && this.hasData())\n      {\n        if (off) off()\n\n        delete entry.off\n        delete entry.last\n\n        this.index++\n        pointer = first\n\n        requery(query.startAfter(last))\n\n        if (entry.promise) return entry.promise\n      }\n\n      return Promise.reject('The pager could not execute next')\n    },\n\n    prev(): Promise<FieryTarget>\n    {\n      const { query, requery, first, off } = entry\n\n      if (query && requery && (first || pointer) && this.index > 0)\n      {\n        if (off) off()\n\n        delete entry.off\n\n        this.index--\n\n        if (first)\n        {\n          delete entry.first\n\n          requery(query.endBefore(first))\n        }\n        else\n        {\n          requery(query.startAt(pointer))\n\n          pointer = undefined\n        }\n\n        if (entry.promise) return entry.promise\n      }\n\n      return Promise.reject('The pager could not execute prev')\n    }\n  }\n\n  return pager\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { PROP_UID } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { forEach } from '../util'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeDataFromEntry, removeCacheFromEntry, destroyCache } from '../cache'\nimport { stats } from '../stats'\nimport { updatePointers, getChanges } from '../entry'\nimport { callbacks } from '../callbacks'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\ntype OnResolve = (target: FieryTarget) => any\ntype OnReject = (reason: any) => any\n\n\n\nfunction factory (entry: FieryEntry): FieryMap\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n\n  entry.requery = (query) =>\n  {\n    const initial = getInitialHandler(entry)\n\n    if (!entry.target)\n    {\n      entry.target = options.newCollection()\n    }\n\n    stats.queries++\n\n    if (options.once)\n    {\n      entry.promise = query.get(options.onceOptions)\n        .then(initial)\n        .catch(options.onError)\n    }\n    else\n    {\n      let resolve: OnResolve = () => {}\n      let reject: OnReject = () => {}\n\n      entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n        resolve = _resolve\n        reject = _reject\n      })\n\n      entry.off = query.onSnapshot(\n        options.liveOptions,\n        getLiveHandler(entry, initial, resolve),\n        (reason) => {\n          reject(reason)\n          options.onError(reason)\n        }\n      )\n    }\n  }\n\n  entry.requery(entry.query = query)\n\n  return entry.target as FieryMap\n}\n\nfunction getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n    const missing: FieryMap = { ...target }\n\n    options.onMutate(() =>\n    {\n      querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n      {\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc, true)\n\n        refreshData(cache, doc, entry)\n\n        system.setProperty(target, doc.id, cache.data)\n\n        delete missing[doc.id]\n\n        callbacks.onCollectionAdd(cache.data, target, entry)\n\n      }, options.onError)\n\n      forEach(missing, (missed, key) => system.removeProperty(target, key as string))\n\n      return target\n    })\n\n    forEach(missing, data =>\n    {\n      callbacks.onCollectionRemove(data, target, entry)\n\n      removeDataFromEntry(entry, data)\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n\n    return target\n  }\n}\n\nfunction getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n\n    options.onMutate(() =>\n    {\n      const changes = getChanges(querySnapshot)\n\n      changes.forEach((change: firebase.firestore.DocumentChange) =>\n      {\n        const doc: firebase.firestore.DocumentSnapshot = change.doc\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n        switch (change.type)\n        {\n          case 'modified':\n            const updated: FieryData = refreshData(cache, doc, entry)\n            system.setProperty(target, doc.id, updated)\n\n            callbacks.onCollectionModify(updated, target, entry)\n            break\n\n          case 'added':\n            const created: FieryData = refreshData(cache, doc, entry)\n            system.setProperty(target, doc.id, created)\n\n            callbacks.onCollectionAdd(created, target, entry)\n            break\n\n          case 'removed':\n            callbacks.onCollectionRemove(cache.data, target, entry)\n\n            system.removeProperty(target, doc.id)\n\n            if (doc.exists)\n            {\n              removeCacheFromEntry(entry, cache)\n            }\n            else\n            {\n              if (options.propExists)\n              {\n                system.setProperty(cache.data, options.propExists, false)\n              }\n\n              cache.exists = false\n\n              options.triggerEvent(cache.data, 'remove')\n\n              destroyCache(cache)\n            }\n            break\n        }\n      }, options.onError)\n\n      return target\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n  }\n}\n\nfunction getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot, resolve: OnResolve): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    resolve(entry.target as FieryTarget)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\nimport { PROP_UID } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeCacheFromEntry, removeDataFromEntry, destroyCache } from '../cache'\nimport { forEach } from '../util'\nimport { updatePointers, getChanges } from '../entry'\nimport { stats } from '../stats'\nimport { callbacks } from '../callbacks'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\ntype OnResolve = (target: FieryTarget) => any\ntype OnReject = (reason: any) => any\n\n\nexport function factory (entry: FieryEntry): FieryData[]\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n\n  entry.requery = (query) =>\n  {\n    const initial = getInitialHandler(entry)\n\n    if (!entry.target)\n    {\n      entry.target = options.newCollection()\n    }\n\n    stats.queries++\n\n    if (options.once)\n    {\n      entry.promise = query.get(options.onceOptions)\n        .then(initial)\n        .catch(options.onError)\n    }\n    else\n    {\n      let resolve: OnResolve = () => {}\n      let reject: OnReject = () => {}\n\n      entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n        resolve = _resolve\n        reject = _reject\n      })\n\n      entry.off = query.onSnapshot(\n        options.liveOptions,\n        getLiveHandler(entry, initial, resolve),\n        (reason) => {\n          reject(reason)\n          options.onError(reason)\n        }\n      )\n    }\n  }\n\n  entry.requery(entry.query = query)\n\n  return entry.target as FieryData[]\n}\n\nfunction getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n    const missing: FieryMap = {}\n\n    if (initialTarget)\n    {\n      for (let i = 0; i < target.length; i++)\n      {\n        const data = target[i]\n        missing[data[PROP_UID]] = data\n      }\n    }\n\n    options.onMutate(() =>\n    {\n        system.arrayResize(target, 0)\n\n        querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n        {\n          const cache: FieryCacheEntry = getCacheForDocument(entry, doc, true)\n\n          refreshData(cache, doc, entry)\n\n          system.arrayAdd(target, cache.data)\n\n          delete missing[cache.uid]\n\n          callbacks.onCollectionAdd(cache.data, target, entry)\n\n        }, options.onError)\n\n        return target\n    })\n\n    forEach(missing, data =>\n    {\n      callbacks.onCollectionRemove(data, target, entry)\n\n      removeDataFromEntry(entry, data)\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n\n    return target\n  }\n}\n\nfunction getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n\n    options.onMutate(() =>\n    {\n      const changes = getChanges(querySnapshot)\n\n      changes.forEach((change: firebase.firestore.DocumentChange) =>\n      {\n        const doc: firebase.firestore.DocumentSnapshot = change.doc\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n        switch (change.type)\n        {\n          case 'added':\n            const created: FieryData = refreshData(cache, doc, entry)\n            system.arraySet(target, change.newIndex, created)\n\n            callbacks.onCollectionAdd(created, target, entry)\n            break\n\n          case 'removed':\n            callbacks.onCollectionRemove(cache.data, target, entry)\n\n            if (doc.exists)\n            {\n              removeCacheFromEntry(entry, cache)\n            }\n            else\n            {\n              if (options.propExists)\n              {\n                system.setProperty(cache.data, options.propExists, false)\n              }\n\n              cache.exists = false\n\n              options.triggerEvent(cache.data, 'remove')\n\n              destroyCache(cache)\n            }\n            break\n\n          case 'modified':\n            const updated: FieryData = refreshData(cache, doc, entry)\n\n            if (change.oldIndex !== change.newIndex)\n            {\n              system.arraySet(target, change.newIndex, updated)\n            }\n\n            callbacks.onCollectionModify(updated, target, entry)\n            break\n        }\n      }, options.onError)\n\n      system.arrayResize(target, querySnapshot.size)\n\n      return target\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n  }\n}\n\nfunction getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot, resolve: OnResolve): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    resolve(entry.target as FieryTarget)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n"],"sourceRoot":""}