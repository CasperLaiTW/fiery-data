{"version":3,"sources":["webpack://FieryData/webpack/universalModuleDefinition","webpack://FieryData/webpack/bootstrap","webpack://FieryData/./src/util.ts","webpack://FieryData/./src/cache.ts","webpack://FieryData/./src/constants.ts","webpack://FieryData/./src/data.ts","webpack://FieryData/./src/options.ts","webpack://FieryData/./src/entry.ts","webpack://FieryData/./src/operations.ts","webpack://FieryData/./src/factory/index.ts","webpack://FieryData/./src/index.ts","webpack://FieryData/./src/store.ts","webpack://FieryData/./src/factory/document.ts","webpack://FieryData/./src/factory/map.ts","webpack://FieryData/./src/factory/collection.ts","webpack://FieryData/./src/instance.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","x","toString","isString","isArray","Array","isDate","Date","isDefined","isFunction","coalesce","a","b","isCollectionSource","source","getFields","fields","otherwise","forEach","iterable","callback","length","prop","isEqual","getTime","constants_1","entry_1","factory_1","getCacheForReference","entry","ref","uid","storeKey","UID_SEPARATOR","path","globalCache","addCacheToEntry","data","options","newDocument","PROP_UID","cache","uses","sub","firstEntry","entries","removed","createRecord","addSubs","getCacheForData","removeCacheFromEntry","children","entryIndex","indexOf","splice","inInstance","instance","removeCacheFromInstance","isReferencedSub","closeEntry","entrySubs","push","checkForDestroy","destroyCache","subProp","hasLiveSub","subOptions","subName","ENTRY_SEPARATOR","subSource","doc","parent","split","PATH_SEPARATOR","pop","collection","subEntry","getEntry","live","record","recordOptions","recordFunctions","sync","update","remove","clear","getChanges","build","getCacheForDocument","removeDataFromEntry","PROP_VALUE","RECORD_OPTIONS","util_1","copyData","system","setProperty","decodeData","encoded","decode","decoders","parseDocument","out","_a","propValue","id","refreshData","decoded","encodeData","values","explicit","include","exclude","encoders","performMerge","defaults","mergeOptions","optionsProp","merger","globalOptions","defined","user","undefined","onError","message","onMissing","onSuccess","results","onRemove","liveOptions","map","getOptionsByKey","parseInt","getOptions","extends","shared","type","typeConstructor_1","newCollection","excludeMap","recycleOptions","nameOrMap","namedOptions","setGlobalOptions","mergeStrategy","ignore","replace","chain","apply","arguments","shallow","__assign","concat","union","added","exclusions_1","defaultsArray_1","optionsArray_1","vm","query","once","onceOptions","options_1","store_1","cache_1","operations","off","index","entryList","cached","getEntryRecordFunctions","excludeSubs","props","initial","buildSub","createSub","fieldsOrEquality","equalityOrNothing","optionsInput","namedSource","getStoreKey","existing","sources","data_1","_this","delete","Promise","reject","buildFromCollection","defaultValue","resolve","set","propsArray","ref_1","store","firestore","promises_1","deleting","deleteCount","_i","propsArray_1","firebaseRuntime","app","firebase_","FieldValue","all","equality_1","current_1","getter_1","then","remote","local","changed","remoteValue","localValue","catch","error","ref_2","target","built","entryFor","document_1","map_1","collection_1","where","default","instance_1","__export","getInstance","stores","keyNext","idToKey","initialTarget","onSnapshot","handleDocumentUpdate","promise","exists","removeNamed","querySnapshot","missing","missed","removeProperty","getInitialHandler","handleInitial","handleUpdate","docChanges","change","getUpdateHandler","handler","getLiveHandler","arrayResize","arrayAdd","created","arraySet","newIndex","updated","oldIndex","size","destroy","opt","free","linkSources","container","systemOverrides","defaultSystem","systemProp","buildSystem"],"mappings":"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","file":"fiery-data.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FieryData\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FieryData\"] = factory();\n\telse\n\t\troot[\"FieryData\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryOptions, FierySource, FieryData, FieryMetadata, FieryEntry, FieryFields } from './types'\nimport { getOptionsByKey } from './options'\n\n\n\nexport function isObject (x?: any): x is Object\n{\n  return Object.prototype.toString.call(x) === '[object Object]'\n}\n\nexport function isFunction (x?: any): x is Function\n{\n  return typeof x === 'function'\n}\n\nexport function isString (x?: any): x is string\n{\n  return typeof x === 'string'\n}\n\nexport function isArray (x?: any): x is Array<any>\n{\n  return x && x instanceof Array\n}\n\nexport function isDate (x?: any): x is Date\n{\n  return x && x instanceof Date\n}\n\nexport function isDefined (x?: any): boolean\n{\n  return typeof x !== 'undefined'\n}\n\nexport function coalesce (a?: any, b?: any): any\n{\n  return isDefined(a) ? a : b\n}\n\nexport function isCollectionSource (source: FierySource): boolean\n{\n  return !!((<any>source).where)\n}\n\nexport function getFields (fields?: FieryFields, otherwise?: string[]): string[] | undefined\n{\n  return !fields ? otherwise : (isString(fields) ? [fields] : fields)\n}\n\n// export function forEach<I, V extends I[keyof I], K extends keyof I>(iterable: I, callback: (item: V, key: K, iterable: I) => any): boolean\n// export function forEach<V, K>(iterable: V[], callback: (item: V, key: K, iterable: V[]) => any): boolean\nexport function forEach(iterable: any, callback: (item: any, key: any, iterable: any) => any): boolean\n{\n  if (isArray(iterable))\n  {\n    for (let i = 0; i < iterable.length; i++)\n    {\n      callback(iterable[i], i, iterable)\n    }\n\n    return true\n  }\n  else if (isObject(iterable))\n  {\n    for (let prop in iterable)\n    {\n      if (iterable.hasOwnProperty(prop))\n      {\n        callback(iterable[prop], prop, iterable)\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n\nexport function isEqual (a: any, b: any): boolean\n{\n  if (a === b)\n  {\n    return true\n  }\n\n  if (!a || !b)\n  {\n    return false\n  }\n\n  if (typeof a !== typeof b)\n  {\n    return false\n  }\n\n  if (isArray(a) && isArray(b))\n  {\n    if (a.length !== b.length)\n    {\n      return false\n    }\n\n    for (let i = 0; i < a.length; i++)\n    {\n      if (!isEqual(a[i], b[i]))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (isDate(a) && isDate(b))\n  {\n    return a.getTime() === b.getTime()\n  }\n\n  if (isObject(a) && isObject(b))\n  {\n    for (let prop in a)\n    {\n      if (!isEqual(a[prop], b[prop]))\n      {\n        return false\n      }\n    }\n\n    for (let prop in b)\n    {\n      if (!(prop in a))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { UID_SEPARATOR, PROP_UID, PATH_SEPARATOR, ENTRY_SEPARATOR } from './constants'\nimport { FieryInstance, FieryEntry, FierySource, FieryCacheEntry, FieryCache, FieryData, FieryOptions, FieryOptionsMap, FieryEntryMap } from './types'\nimport { closeEntry, getEntry } from './entry'\nimport { factory } from './factory'\n\n\n\nexport const globalCache: FieryCache = { }\n\n\nexport function getCacheForReference (entry: FieryEntry, ref: firebase.firestore.DocumentReference): FieryCacheEntry\n{\n  const uid = entry.storeKey + UID_SEPARATOR + ref.path\n\n  if (uid in globalCache)\n  {\n    addCacheToEntry(globalCache[uid], entry)\n\n    return globalCache[uid]\n  }\n\n  const data = entry.options.newDocument()\n\n  data[PROP_UID] = uid\n\n  const cache: FieryCacheEntry = {\n    uid,\n    data,\n    ref,\n    uses: 0,\n    sub: {},\n    firstEntry: entry,\n    entries: [],\n    removed: false\n  }\n\n  globalCache[uid] = cache\n\n  addCacheToEntry(cache, entry)\n  createRecord(data, entry)\n  addSubs(cache, entry)\n\n  return cache\n}\n\nexport function getCacheForDocument (entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot): FieryCacheEntry\n{\n  return getCacheForReference(entry, doc.ref)\n}\n\nexport function getCacheForData (data: FieryData): FieryCacheEntry | undefined\n{\n  return globalCache[data[PROP_UID]]\n}\n\nexport function removeDataFromEntry (entry: FieryEntry, data: FieryData): void\n{\n  removeCacheFromEntry(entry, getCacheForData(data))\n}\n\nexport function removeCacheFromEntry (entry: FieryEntry, cache?: FieryCacheEntry): void\n{\n  if (cache && cache.uid in entry.children)\n  {\n    const options: FieryOptions = entry.options\n    const entries: FieryEntry[] = cache.entries\n\n    // remove reference to entry from cache\n    const entryIndex = entries.indexOf(entry)\n    if (entryIndex !== -1)\n    {\n      entries.splice(entryIndex, 1)\n    }\n\n    // remove cache reference from entry\n    delete entry.children[cache.uid]\n\n    // if no more entries for this instance, remove from instance\n    let inInstance: boolean = false\n\n    for (var i = 0; i < entries.length; i++)\n    {\n      if (entries[i].instance === entry.instance)\n      {\n        inInstance = true\n        break\n      }\n    }\n\n    if (!inInstance)\n    {\n      removeCacheFromInstance(cache, entry.instance, true)\n    }\n\n    // turn off any unneeded subs if we're still being used\n    if (cache.uses > 0)\n    {\n      for (var sub in cache.sub)\n      {\n        if (!isReferencedSub(cache, sub))\n        {\n          closeEntry(cache.sub[sub], true)\n        }\n      }\n    }\n  }\n}\n\nexport function isReferencedSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  const entries: FieryEntry[] = cache.entries\n  const subs: FieryEntryMap = cache.sub\n\n  for (var i = 0; i < entries.length; i++)\n  {\n    const entry: FieryEntry = entries[i]\n    const entrySubs: FieryOptionsMap | undefined = entry.options.sub as (FieryOptionsMap | undefined)\n\n    if (entrySubs && sub in entrySubs)\n    {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function addCacheToEntry (cache: FieryCacheEntry, entry: FieryEntry): void\n{\n  if (!(cache.uid in entry.instance.cache))\n  {\n    entry.instance.cache[cache.uid] = cache\n    cache.uses++\n  }\n\n  if (!(cache.uid in entry.children))\n  {\n    cache.entries.push(entry)\n    entry.children[cache.uid] = cache\n\n    addSubs(cache, entry)\n  }\n}\n\nexport function removeCacheFromInstance (cache: FieryCacheEntry, instance: FieryInstance, checkForDestroy: boolean = true): void\n{\n  if (cache.uid in instance.cache)\n  {\n    cache.uses--\n    delete instance.cache[cache.uid]\n\n    const entries: FieryEntry[] = cache.entries\n\n    for (let i = entries.length - 1; i >= 0; i--)\n    {\n      const entry = entries[i]\n\n      if (entry.instance === instance)\n      {\n        removeCacheFromEntry(entry, cache)\n      }\n    }\n\n    if (checkForDestroy && cache.uses <= 0)\n    {\n      destroyCache(cache)\n    }\n  }\n}\n\nexport function destroyCache (cache: FieryCacheEntry): void\n{\n  const entries: FieryEntry[] = cache.entries\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    removeCacheFromInstance(cache, entries[i].instance, false)\n  }\n\n  for (var sub in cache.sub)\n  {\n    closeEntry(cache.sub[sub], true)\n  }\n\n  if (cache.uses <= 0 && !cache.removed)\n  {\n    delete globalCache[cache.uid]\n    delete cache.ref\n    delete cache.sub\n    delete cache.data\n\n    cache.entries.length = 0\n    cache.removed = true\n  }\n}\n\nexport function addSubs (cache: FieryCacheEntry, entry: FieryEntry): void\n{\n  const options: FieryOptions = entry.options\n  const data: FieryData = cache.data\n  const ref: firebase.firestore.DocumentReference | undefined = cache.ref\n\n  if (options.sub && ref)\n  {\n    for (let subProp in options.sub)\n    {\n      if (!hasLiveSub(cache, subProp))\n      {\n        let subOptions: FieryOptions = options.sub[subProp] as FieryOptions\n        let subName: string = cache.uid + ENTRY_SEPARATOR + subProp\n\n        let subSource: FierySource = subOptions.doc\n          ? ref.parent.doc(cache.uid.split(PATH_SEPARATOR).pop() + PATH_SEPARATOR + subProp)\n          : ref.collection(subProp)\n\n        let subEntry: FieryEntry = getEntry(\n          entry.instance,\n          subSource,\n          subOptions,\n          subName,\n          false // we shouldn't add this to sources\n        )\n\n        data[subProp] = factory(subEntry)\n        cache.sub[subProp] = subEntry\n      }\n    }\n  }\n}\n\nexport function hasLiveSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  return sub in cache.sub && cache.sub[sub].live\n}\n\nexport function createRecord (data: FieryData, entry: FieryEntry): FieryData\n{\n  const options: FieryOptions = entry.options\n\n  if (options.record)\n  {\n    let recordOptions = options.recordOptions\n    let recordFunctions = entry.recordFunctions\n\n    if (recordOptions.sync) data[recordOptions.sync] = recordFunctions.sync\n    if (recordOptions.update) data[recordOptions.update] = recordFunctions.update\n    if (recordOptions.remove) data[recordOptions.remove] = recordFunctions.remove\n    if (recordOptions.clear) data[recordOptions.clear] = recordFunctions.clear\n    if (recordOptions.getChanges) data[recordOptions.getChanges] = recordFunctions.getChanges\n    if (recordOptions.ref) data[recordOptions.ref] = recordFunctions.ref\n    if (recordOptions.create) data[recordOptions.create] = recordFunctions.create\n    if (recordOptions.build) data[recordOptions.build] = recordFunctions.build\n  }\n\n  return data\n}\n","\nexport const PROP_VALUE = '.value'\nexport const PROP_UID = '.uid'\nexport const UID_SEPARATOR = '///'\nexport const ENTRY_SEPARATOR = '/'\nexport const PATH_SEPARATOR = '/'\nexport const RECORD_OPTIONS = {\n  sync: '$sync',\n  update: '$update',\n  remove: '$remove',\n  ref: '$ref',\n  clear: '$clear',\n  build: '$build',\n  create: '$create',\n  getChanges: '$getChanges'\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource, FierySystem, FieryOptions, FieryInstance, FieryEntry, FieryData, FieryMap, FieryFields, FieryCacheEntry } from './types'\nimport { isObject, getFields } from './util'\n\n\n\nexport function refreshData (cache: FieryCacheEntry, doc: firebase.firestore.DocumentSnapshot, entry: FieryEntry): FieryData\n{\n  const system: FierySystem = entry.instance.system\n  const options: FieryOptions = entry.options\n  const encoded: FieryData = parseDocument(doc, options)\n  const decoded: FieryData = decodeData(encoded, options)\n  const data: FieryData = cache.data\n\n  copyData(system, data, decoded)\n\n  return data;\n}\n\nexport function copyData (system: FierySystem, data: FieryData, update: FieryData): FieryData\n{\n  for (let prop in update)\n  {\n    system.setProperty(data, prop, update[prop])\n  }\n\n  return data\n}\n\nexport function decodeData (encoded: FieryData, options: FieryOptions): FieryData\n{\n  if (options.decode)\n  {\n    encoded = options.decode(encoded)\n  }\n  else if (options.decoders)\n  {\n    for (let prop in options.decoders)\n    {\n      if (prop in encoded)\n      {\n        encoded[prop] = options.decoders[prop](encoded[prop], encoded)\n      }\n    }\n  }\n\n  return encoded\n}\n\nexport function encodeData (data: FieryData, options: FieryOptions, fields?: FieryFields): FieryData\n{\n  const values: FieryData = {}\n  const explicit: string[] = getFields(fields, options.include) as string[]\n\n  if (explicit)\n  {\n    for (let i = 0; i < explicit.length; i++)\n    {\n      let prop: string = explicit[i]\n\n      if (prop in data)\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n  else\n  {\n    for (let prop in data)\n    {\n      if (!(prop in options.exclude))\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n\n  if (options.encoders)\n  {\n    for (let prop in options.encoders)\n    {\n      if (prop in values)\n      {\n        values[prop] = options.encoders[prop](values[prop], data)\n      }\n    }\n  }\n\n  return values\n}\n\nexport function parseDocument (doc: firebase.firestore.DocumentSnapshot, options: FieryOptions): FieryData\n{\n  let value = doc.data()\n  let out = (isObject(value) ? value : { [options.propValue]: value }) as FieryData\n\n  if (out && options.key)\n  {\n    out[options.key] = doc.id\n  }\n\n  return out\n}\n","\nimport { PROP_UID, PROP_VALUE, RECORD_OPTIONS } from './constants'\nimport { FieryOptionsInput, FieryOptions, FieryOptionsMap, FieryInstance, FieryExclusions, FierySource, FieryData, FieryMap, FieryEquality, FieryMergeStrategy, FieryMergeStrategies } from './types'\nimport { isObject, isFunction, isArray, coalesce, forEach, isDefined, isString } from './util'\nimport * as operations from './operations'\n\n\n\nexport const globalOptions =\n{\n  defined: {} as FieryOptionsMap,\n\n  user: undefined as Partial<FieryOptions> | undefined,\n\n  defaults:\n  {\n    onError: (message: any) => {},\n\n    onMissing: () => {},\n\n    onSuccess: (results: any) => {},\n\n    onRemove: () => {},\n\n    liveOptions: {},\n\n    propValue: PROP_VALUE,\n\n    recordOptions: RECORD_OPTIONS,\n\n    newDocument: (encoded?: FieryData) => ({} as FieryData)\n\n  } as Partial<FieryOptions>,\n\n  id: 0,\n\n  map: {} as FieryOptionsMap\n}\n\n\nexport function getOptionsByKey (key: string): FieryOptions\n{\n  return globalOptions.map[parseInt(key)] as FieryOptions\n}\n\nexport function getOptions (options?: FieryOptionsInput, instance?: FieryInstance): FieryOptions\n{\n  // If a string is passed - returned a defined option.\n  if (isString(options))\n  {\n    if (!(options in globalOptions.defined))\n    {\n      throw 'The definition ' + options + ' was not found. You must call define before you use the definition'\n    }\n\n    // Ensure the defined option is properly populated\n    return getOptions(globalOptions.defined[options])\n  }\n\n  // If nothing was given, populate an empty set of options\n  if (!options || !isObject(options))\n  {\n    options = {}\n  }\n\n  // If the options was already populated, return the options\n  if (options.id && options.id in globalOptions.map)\n  {\n    return options as FieryOptions\n  }\n  // Otherwise, assign this options an id and add it to the list of options\n  else if (!options.id)\n  {\n    options.id = ++globalOptions.id\n    globalOptions.map[options.id] = options as FieryOptions\n  }\n\n  if (options.extends)\n  {\n    performMerge(options, getOptions(options.extends))\n  }\n\n  performMerge(options, globalOptions.user)\n  performMerge(options, globalOptions.defaults)\n\n  if (instance && !options.shared)\n  {\n    options.instance = instance\n    instance.options[ options.id ] = options as FieryOptions\n  }\n\n  if (options.type)\n  {\n    const typeConstructor = options.type\n\n    options.newDocument = (encoded?: FieryData) => (new typeConstructor() as FieryData)\n  }\n\n  if (!options.newCollection)\n  {\n    options.newCollection = options.map\n      ? () => ({} as FieryMap)\n      : () => ([] as FieryData[])\n  }\n\n  let excludeMap: FieryExclusions = {}\n\n  if (!options.exclude)\n  {\n    if (options.key)\n    {\n      excludeMap[options.key] = true\n    }\n  }\n  else if (isArray(options.exclude))\n  {\n    forEach(options.exclude, (value, key) => excludeMap[value] = true)\n  }\n  else\n  {\n    excludeMap = options.exclude as FieryExclusions\n  }\n\n  excludeMap[options.propValue as string] = true\n  excludeMap[PROP_UID] = true\n\n  forEach(options.recordOptions, (value, key) => excludeMap[value] = true)\n\n  options.exclude = excludeMap\n\n  if (options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptionsInput = options.sub[subProp] as FieryOptionsInput\n      let subOptions = getOptions(subOptionsInput, instance)\n\n      subOptions.parent = options as FieryOptions\n\n      options.sub[subProp] = subOptions\n\n      if (!subOptions.ref)\n      {\n        excludeMap[subProp] = true\n      }\n    }\n  }\n\n  return options as FieryOptions\n}\n\nexport function recycleOptions (options: FieryOptions)\n{\n  const instance: FieryInstance | undefined = options.instance\n\n  if (instance)\n  {\n    delete instance.options[options.id]\n  }\n}\n\nexport function define (nameOrMap: string | FieryOptionsMap, namedOptions?: Partial<FieryOptions>): void\n{\n  if (isString(nameOrMap))\n  {\n    const options: Partial<FieryOptions> = namedOptions as Partial<FieryOptions>\n\n    options.shared = true\n\n    globalOptions.defined[nameOrMap] = options\n  }\n  else\n  {\n    for (let name in nameOrMap)\n    {\n      const options: Partial<FieryOptions> = nameOrMap[name]\n\n      options.shared = true\n\n      globalOptions.defined[name] = options\n    }\n  }\n}\n\nexport function setGlobalOptions (user?: Partial<FieryOptions>): void\n{\n  if (user)\n  {\n    user.shared = true\n  }\n\n  globalOptions.user = user\n}\n\nexport function performMerge (options: Partial<FieryOptions>, defaults?: Partial<FieryOptions>): void\n{\n  if (!defaults) return\n\n  for (let prop in mergeOptions)\n  {\n    const optionsProp = prop as keyof FieryOptions\n    const merger: FieryMergeStrategy = mergeOptions[optionsProp]\n\n    options[optionsProp] = merger( options[optionsProp], defaults[optionsProp] )\n  }\n}\n\nexport const mergeStrategy: FieryMergeStrategies =\n{\n  ignore (options: any, defaults: any): any {\n    return options\n  },\n  replace (options: any, defaults: any): any {\n    return coalesce(options, defaults)\n  },\n  chain (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return function(this: any) {\n      (defaults as Function).apply(this, arguments)\n      (options as Function).apply(this, arguments)\n    }\n  },\n  shallow (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return {\n      ...defaults,\n      ...options\n    }\n  },\n  concat (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    if (isArray(options) && isArray(defaults)) {\n      let union = options.concat(defaults)\n      let added: {[k:string]:any} = {}\n      for (let i = union.length - 1; i >= 0; i--) {\n        if (union[i] in added) {\n          union.splice(i, 1)\n        } else {\n          added[union[i]] = true\n        }\n      }\n      return union\n    }\n  },\n  exclude (options: any, defaults: any): any {\n    const union = mergeStrategy.concat(options, defaults)\n    if (!union && options && defaults) {\n      let exclusions: {[k:string]:any} = {}\n      let defaultsArray = isArray(defaults)\n      let optionsArray = isArray(options)\n      forEach(defaults, (value, key) => value ? (exclusions[defaultsArray ? value : key] = true) : 0)\n      forEach(options, (value, key) => value ? (exclusions[optionsArray ? value : key] = true) : 0)\n      return exclusions\n    }\n    return union\n  }\n}\n\nexport const mergeOptions: FieryMergeStrategies =\n{\n  extends:            mergeStrategy.ignore,\n  id:                 mergeStrategy.ignore,\n  parent:             mergeStrategy.ignore,\n  shared:             mergeStrategy.ignore,\n  vm:                 mergeStrategy.ignore,\n  key:                mergeStrategy.replace,\n  query:              mergeStrategy.replace,\n  map:                mergeStrategy.replace,\n  once:               mergeStrategy.replace,\n  type:               mergeStrategy.replace,\n  newDocument:        mergeStrategy.replace,\n  newCollection:      mergeStrategy.replace,\n  decode:             mergeStrategy.replace,\n  decoders:           mergeStrategy.shallow,\n  encoders:           mergeStrategy.shallow,\n  record:             mergeStrategy.replace,\n  recordOptions:      mergeStrategy.replace,\n  recordFunctions:    mergeStrategy.replace,\n  propValue:          mergeStrategy.replace,\n  onceOptions:        mergeStrategy.replace,\n  liveOptions:        mergeStrategy.replace,\n  include:            mergeStrategy.concat,\n  exclude:            mergeStrategy.exclude,\n  onError:            mergeStrategy.replace,\n  onSuccess:          mergeStrategy.replace,\n  onMissing:          mergeStrategy.replace,\n  onRemove:           mergeStrategy.replace,\n  sub:                mergeStrategy.shallow\n}\n","\n\nimport { FierySystem, FieryOptionsInput, FieryEntryMap, FieryOptions, FieryInstance, FieryEntry, FierySources, FierySource, FieryCache, FieryData, FieryChanges, FieryEquality, FieryFields } from './types'\nimport { isCollectionSource, forEach, isDefined } from './util'\nimport { getOptions, recycleOptions } from './options'\nimport { getStoreKey } from './store'\nimport { removeCacheFromEntry } from './cache'\nimport * as operations from './operations'\n\n\n\nexport function closeEntry (entry: FieryEntry | null, remove: boolean = false): void\n{\n  if (entry && entry.live)\n  {\n    if (entry.off)\n    {\n      entry.off()\n\n      delete entry.off\n    }\n\n    entry.live = false\n\n    if (remove)\n    {\n      const instance: FieryInstance = entry.instance\n\n      if (isDefined(entry.index))\n      {\n        instance.entryList[entry.index as number] = null\n\n        delete entry.index\n      }\n\n      if (entry.name && entry.name in instance.entry)\n      {\n        delete instance.entry[entry.name]\n      }\n\n      forEach(entry.children, cached =>\n      {\n        removeCacheFromEntry(entry, cached)\n      })\n    }\n  }\n}\n\nexport function getEntry (instance: FieryInstance, source: FierySource, optionsInput?: FieryOptionsInput, name?: string, namedSource: boolean = true)\n{\n  // Things that are allowed to change on repetitive entry calls\n  const options: FieryOptions = getOptions(optionsInput, instance)\n  const storeKey: number = getStoreKey(source)\n\n  if (name && name in instance.entry)\n  {\n    const existing: FieryEntry = instance.entry[ name ]\n\n    closeEntry(existing)\n\n    if (options.id !== existing.options.id)\n    {\n      recycleOptions(existing.options)\n    }\n\n    existing.source = source\n    existing.options = options\n    existing.storeKey = storeKey\n    existing.live = true\n\n    return existing\n  }\n\n  const recordFunctions = getEntryRecordFunctions(instance)\n  const children: FieryCache = {}\n  const live: boolean = true\n  const entry: FieryEntry = {\n    name,\n    options,\n    source,\n    instance,\n    storeKey,\n    children,\n    recordFunctions,\n    live\n  }\n\n  if (!name || !(name in instance.entry))\n  {\n    entry.index = instance.entryList.length\n\n    instance.entryList.push(entry)\n  }\n\n  if (name)\n  {\n    instance.entry[ name ] = entry\n  }\n\n  if (name && namedSource)\n  {\n    instance.sources[ name ] = source\n  }\n\n  return entry\n}\n\nexport function getEntryRecordFunctions (instance: FieryInstance)\n{\n  return {\n    sync: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.sync.call(instance, this, fields)\n    },\n    update: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.update.call(instance, this, fields)\n    },\n    remove: function(this: FieryData, excludeSubs: boolean = false): Promise<void> {\n      return operations.remove.call(instance, this, excludeSubs)\n    },\n    ref: function(this: FieryData, sub?: string): FierySource {\n      return operations.ref.call(instance, this, sub)\n    },\n    clear: function(this: FieryData, props: FieryFields): Promise<void[]> {\n      return operations.clear.call(instance, this, props)\n    },\n    build: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.buildSub.call(instance, this, sub, initial)\n    },\n    create: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.createSub.call(instance, this, sub, initial)\n    },\n    getChanges: function(this: FieryData,\n      fieldsOrEquality: FieryFields | FieryEquality,\n      equalityOrNothing?: FieryEquality): Promise<FieryChanges> {\n      return operations.getChanges.call(instance, this, fieldsOrEquality, equalityOrNothing)\n    }\n  }\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryInstance, FieryCacheEntry, FieryOptions, FieryEntry, FieryData, FierySource, FieryChanges, FieryEquality, FieryFields, FieryTarget } from './types'\nimport { parseDocument, encodeData } from './data'\nimport { forEach, isEqual, isDefined, isFunction, isString, getFields } from './util'\nimport { getCacheForData, getCacheForReference } from './cache'\n\n\n\nexport function update (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n  const result = Promise.resolve(false)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    return cache.ref.update(values)\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function sync (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    return cache.ref.set(values)\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function remove (this: FieryInstance, data: FieryData, excludeSubs: boolean = false): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n\n    if (!excludeSubs && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        forEach(data[subProp], (sub) =>\n        {\n          remove.call(this, sub as FieryData)\n        })\n      }\n    }\n\n    return cache.ref.delete()\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function clear (this: FieryInstance, data: FieryData, props: FieryFields): Promise<void[]>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n  const propsArray: string[] = getFields(props) as string[]\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const ref: firebase.firestore.DocumentReference = cache.ref\n    const store: firebase.firestore.Firestore = ref.firestore\n    const promises: Promise<void>[] = []\n\n    const deleting: any = {}\n    let deleteCount: number = 0\n\n    for (let prop of propsArray)\n    {\n      if (options.sub && prop in options.sub && data[prop])\n      {\n        forEach(data[prop], (sub) =>\n        {\n          promises.push(remove.call(this, sub as FieryData))\n        })\n      }\n      else if (prop in data)\n      {\n        let firebaseRuntime: any = (<any>store.app).firebase_\n\n        if (firebaseRuntime)\n        {\n          deleting[prop] = firebaseRuntime.firestore.FieldValue.delete()\n          deleteCount++\n        }\n      }\n    }\n\n    if (deleteCount > 0)\n    {\n      promises.push(ref.update(deleting))\n    }\n\n    return Promise.all(promises)\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function getChanges (this: FieryInstance,\n  data: FieryData,\n  fieldsOrEquality: FieryFields | FieryEquality,\n  equalityOrNothing?: FieryEquality): Promise<FieryChanges>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const fields: FieryFields | undefined = isFunction(fieldsOrEquality) ? undefined : getFields(fieldsOrEquality as FieryFields)\n    const equality: FieryEquality = ((fields ? equalityOrNothing : fieldsOrEquality) || isEqual) as FieryEquality\n    const options: FieryOptions = cache.firstEntry.options\n    const current: FieryData = encodeData(data, options, fields)\n\n    const getter: Promise<firebase.firestore.DocumentSnapshot> = cache.ref.get()\n\n    return new Promise((resolve, reject) =>\n    {\n      getter.then((doc: firebase.firestore.DocumentSnapshot) =>\n      {\n        const encoded: FieryData = parseDocument(doc, options)\n        const remote: FieryData = {}\n        const local: FieryData = {}\n        let changed = false\n\n        for (let prop in current)\n        {\n          let remoteValue = encoded[prop]\n          let localValue = current[prop]\n\n          if (!equality(remoteValue, localValue))\n          {\n            changed = true\n            remote[prop] = remoteValue\n            local[prop] = localValue\n          }\n        }\n\n        resolve({ changed, remote, local })\n      })\n\n      getter.catch(error => reject(error))\n    })\n  }\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function ref (this: FieryInstance, data: FieryData, sub?: string): FierySource\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return sub ? ref.collection(sub) : ref\n  }\n\n  throw 'The given data is out of scope and cannot be referenced.'\n}\n\nexport function create <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  const built: T = this.build(target, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function createSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const built: T = this.buildSub(data, sub, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function build <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  if (isString(target))\n  {\n    if (target in this.entry)\n    {\n      const entry: FieryEntry = this.entry[target]\n\n      return buildFromCollection (entry.source as firebase.firestore.CollectionReference, entry, initial)\n    }\n  }\n  else\n  {\n    const entry = this.entryFor(target)\n\n    if (entry)\n    {\n      return buildFromCollection (entry.source as firebase.firestore.CollectionReference, entry, initial)\n    }\n  }\n\n  throw 'Cannot build ' + target + + ', it does not exist in the current $fiery instance.'\n}\n\nexport function buildSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref && sub in cache.sub)\n  {\n    const entry: FieryEntry = cache.sub[sub]\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return buildFromCollection(ref.collection(sub), entry, initial)\n  }\n\n  throw 'Cannot build in the sub collection ' + sub + + ', the parent data does not exist in the current $fiery instance or the sub collection is not defined in the options.'\n}\n\nexport function buildFromCollection <T extends FieryData>(collection: firebase.firestore.CollectionReference, entry: FieryEntry, initial?: FieryData): T\n{\n  const options: FieryOptions = entry.options\n  const ref = collection.doc()\n  const cache: FieryCacheEntry = getCacheForReference(entry, ref)\n\n  if (options.defaults)\n  {\n    forEach(options.defaults, (defaultValue, prop) =>\n    {\n      if (!initial || !(prop in initial))\n      {\n        cache.data[prop] = isFunction(defaultValue) ? defaultValue() : defaultValue\n      }\n    })\n  }\n\n  if (initial)\n  {\n    forEach(initial, (value, prop) =>\n    {\n      cache.data[prop] = value\n    })\n  }\n\n  return cache.data as T\n}\n","\n\nimport { FieryInstance, FieryEntry, FieryTarget, FierySource, FieryOptions } from '../types'\nimport { getEntry } from '../entry'\n\n\n\nimport factoryDocument from './document'\nimport factoryMap from './map'\nimport factoryCollection from './collection'\n\n\n\nexport function factory (entry: FieryEntry): FieryTarget\n{\n  let chosenFactory = (<any>entry.source).where\n    ? (entry.options.map ? factoryMap : factoryCollection)\n    : factoryDocument\n\n  return chosenFactory(entry)\n}\n\nexport default factory\n","\nimport { define, setGlobalOptions, mergeStrategy, mergeOptions } from './options'\nimport { getCacheForData, destroyCache } from './cache'\nimport { getInstance } from './instance'\n\nexport * from './constants'\nexport * from './types'\nexport { define, setGlobalOptions, mergeStrategy, mergeOptions }\nexport { getCacheForData, destroyCache }\nexport default getInstance\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource } from './types'\n\n\n\nexport const stores = {\n\n  keyNext: 0,\n\n  map: { } as { [storeKey: number]: firebase.firestore.Firestore },\n\n  idToKey: { } as { [id: string]: number }\n\n}\n\nexport function getStoreKey (source: FierySource): number\n{\n  const firestore: firebase.firestore.Firestore = source.firestore\n  const id: string = firestore.app.name\n  let key: number = stores.idToKey[id]\n\n  if (!key)\n  {\n    key = ++stores.keyNext\n    stores.map[key] = firestore\n    stores.idToKey[id] = key\n  }\n\n  return key\n}\n","\nimport * as firebase from 'firebase'\n\n\nimport { FierySystem, FieryOptions, FieryEntry, FieryData, FieryCacheEntry, FieryTarget } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForReference, removeDataFromEntry, destroyCache } from '../cache'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.DocumentSnapshot) => any\n\n\n\nexport function factory (entry: FieryEntry): FieryData\n{\n  const source: firebase.firestore.DocumentReference = entry.source as firebase.firestore.DocumentReference\n  const options: FieryOptions = entry.options\n  const cache: FieryCacheEntry = getCacheForReference(entry, source)\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  const onSnapshot = (doc: firebase.firestore.DocumentSnapshot) =>\n  {\n    handleDocumentUpdate(cache, entry, doc)\n  }\n\n  if (initialTarget && initialTarget !== cache.data)\n  {\n    removeDataFromEntry(entry, initialTarget)\n  }\n\n  entry.target = cache.data\n\n  if (options.once)\n  {\n    entry.promise = source.get(options.onceOptions)\n      .then(onSnapshot)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.off = source.onSnapshot(\n      options.liveOptions,\n      onSnapshot,\n      options.onError\n    )\n  }\n\n  return entry.target as FieryData\n}\n\nexport function handleDocumentUpdate (cache: FieryCacheEntry, entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot): void\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  if (!doc.exists)\n  {\n    destroyCache(cache)\n\n    if (entry.name)\n    {\n      system.removeNamed(entry.name)\n    }\n  }\n  else\n  {\n    refreshData(cache, doc, entry)\n\n    options.onSuccess(cache.data)\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { PROP_UID } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { forEach } from '../util'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeDataFromEntry, removeCacheFromEntry, destroyCache } from '../cache'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\n\n\n\nfunction factory (entry: FieryEntry): FieryMap\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n  const initial = getInitialHandler(entry)\n\n  if (!entry.target)\n  {\n    entry.target = options.newCollection()\n  }\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then(initial)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(\n      options.liveOptions,\n      getLiveHandler(entry, initial),\n      options.onError\n    )\n  }\n\n  return entry.target as FieryMap\n}\n\nfunction getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n    const missing: FieryMap = { ...target }\n\n    querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n    {\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n      refreshData(cache, doc, entry)\n\n      system.setProperty(target, doc.id, cache.data)\n\n      delete missing[doc.id]\n\n    }, options.onError)\n\n    forEach(missing, (missed, key) => system.removeProperty(target, key as string))\n    forEach(missing, missed => removeDataFromEntry(entry, missed))\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n\n    (<any>querySnapshot).docChanges().forEach((change: firebase.firestore.DocumentChange) =>\n    {\n      const doc: firebase.firestore.DocumentSnapshot = change.doc\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n      switch (change.type) {\n        case 'modified':\n        case 'added':\n          const data: FieryData = refreshData(cache, doc, entry)\n          system.setProperty(target, doc.id, data)\n          break\n        case 'removed':\n          system.removeProperty(target, doc.id)\n          if (doc.exists) {\n            removeCacheFromEntry(entry, cache)\n          } else {\n            destroyCache(cache)\n          }\n          break\n      }\n    }, options.onError)\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\nimport { PROP_UID } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeCacheFromEntry, removeDataFromEntry, destroyCache } from '../cache'\nimport { forEach } from '../util'\n\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\n\n\n\nexport function factory (entry: FieryEntry): FieryData[]\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n  const initial = getInitialHandler(entry)\n\n  if (!entry.target)\n  {\n    entry.target = options.newCollection()\n  }\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then(initial)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(\n      options.liveOptions,\n      getLiveHandler(entry, initial),\n      options.onError\n    )\n  }\n\n  return entry.target as FieryData[]\n}\n\nfunction getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n    const missing: FieryMap = {}\n\n    if (initialTarget)\n    {\n      for (let i = 0; i < target.length; i++)\n      {\n        const data = target[i]\n        missing[data[PROP_UID]] = data\n      }\n    }\n\n    system.arrayResize(target, 0)\n\n    querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n    {\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n      refreshData(cache, doc, entry)\n\n      system.arrayAdd(target, cache.data)\n\n      delete missing[cache.uid]\n\n    }, options.onError)\n\n    forEach(missing, value => removeDataFromEntry(entry, value))\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n\n    (<any>querySnapshot).docChanges().forEach((change: firebase.firestore.DocumentChange) =>\n    {\n      const doc: firebase.firestore.DocumentSnapshot = change.doc\n      const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n      switch (change.type)\n      {\n        case 'added':\n          const created: FieryData = refreshData(cache, doc, entry)\n          system.arraySet(target, change.newIndex, created)\n          break\n\n        case 'removed':\n          if (doc.exists) {\n            removeCacheFromEntry(entry, cache)\n          } else {\n            destroyCache(cache)\n          }\n          break\n\n        case 'modified':\n          const updated: FieryData = refreshData(cache, doc, entry)\n\n          if (change.oldIndex !== change.newIndex) {\n            system.arraySet(target, change.newIndex, updated)\n          }\n          break\n      }\n    }, options.onError)\n\n    system.arrayResize(target, querySnapshot.size)\n\n    options.onSuccess(target)\n  }\n}\n\nfunction getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport { FierySystem, FieryInstance, FieryOptionsInput, FieryTarget, FierySource, FieryEntry, FieryOptions } from './types'\nimport { forEach } from './util'\nimport { factory } from './factory'\nimport { getEntry, closeEntry } from './entry'\nimport { removeCacheFromInstance } from './cache'\nimport { globalOptions } from './options'\nimport * as operations from './operations'\n\n\nexport function getInstance (systemOverrides?: Partial<FierySystem>): FieryInstance\n{\n  const system = buildSystem(systemOverrides)\n\n  const targetFactory = (source: FierySource, options?: FieryOptionsInput, name?: string): FieryTarget => {\n    return factory(getEntry(instance, source, options, name))\n  }\n\n  const instance: FieryInstance = targetFactory as FieryInstance\n\n  instance.system = system\n  instance.entry = {}\n  instance.entryList = []\n  instance.options = {}\n  instance.sources = {}\n  instance.cache = {}\n  instance.update = operations.update\n  instance.sync = operations.sync\n  instance.remove = operations.remove\n  instance.clear = operations.clear\n  instance.getChanges = operations.getChanges\n  instance.ref = operations.ref\n  instance.create = operations.create\n  instance.createSub = operations.createSub\n  instance.build = operations.build\n  instance.buildSub = operations.buildSub\n  instance.entryFor = entryFor\n  instance.destroy = destroy\n  instance.free = free\n  instance.linkSources = linkSources\n\n  return instance as FieryInstance\n}\n\nfunction destroy(this: FieryInstance)\n{\n  forEach(this.options, opt => delete globalOptions.map[opt.id])\n  forEach(this.cache, cached => removeCacheFromInstance(cached, this))\n  forEach(this.entryList, entry => closeEntry(entry, true))\n\n  this.entry = {}\n  this.entryList = []\n  this.options = {}\n  this.sources = {}\n  this.cache = {}\n}\n\nfunction free (this: FieryInstance, target: FieryTarget)\n{\n  const entry = this.entryFor(target)\n\n  if (entry !== null)\n  {\n    closeEntry(entry, true)\n  }\n}\n\nfunction entryFor (this: FieryInstance, target: FieryTarget): FieryEntry | null\n{\n  const entries = this.entryList\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    const entry = entries[i]\n\n    if (entry && entry.target === target)\n    {\n      return entry\n    }\n  }\n\n  return null\n}\n\nfunction linkSources (this: FieryInstance, container: any): void\n{\n  const entryList: (FieryEntry | null)[] = this.entryList\n\n  for (let i = 0; i < entryList.length; i++)\n  {\n    const entry: FieryEntry | null = entryList[i]\n\n    if (entry === null)\n    {\n      continue\n    }\n\n    const options: FieryOptions = entry.options\n\n    if (!options.parent && !entry.name)\n    {\n      for (let prop in container)\n      {\n        if (container[prop] === entry.target)\n        {\n          entry.name = prop\n\n          this.entry[ prop ] = entry\n          this.sources[ prop ] = entry.source\n\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction buildSystem(systemOverrides?: Partial<FierySystem>): FierySystem\n{\n  const system = systemOverrides || {}\n\n  for (let prop in defaultSystem)\n  {\n    const systemProp = prop as keyof FierySystem\n\n    if (!(systemProp in system))\n    {\n      system[systemProp] = defaultSystem[systemProp]\n    }\n  }\n\n  return system as FierySystem\n}\n\nconst defaultSystem: FierySystem = {\n  removeNamed: (name: string) => {\n\n  },\n  setProperty: (target: any, property: string, value: any) => {\n    target[property] = value\n  },\n  removeProperty: (target: any, property: string) => {\n    delete target[property]\n  },\n  arraySet: (target: any[], index: number, value: any) => {\n    target[index] = value\n  },\n  arrayAdd: (target: any[], value: any) => {\n    target.push(value)\n  },\n  arrayResize: (target: any[], size: number) => {\n    target.length = size\n  }\n}\n"],"sourceRoot":""}