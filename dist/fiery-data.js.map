{"version":3,"sources":["webpack://FieryData/webpack/universalModuleDefinition","webpack://FieryData/webpack/bootstrap","webpack://FieryData/./src/util.ts","webpack://FieryData/./src/cache.ts","webpack://FieryData/./src/stats.ts","webpack://FieryData/./src/callbacks.ts","webpack://FieryData/./src/entry.ts","webpack://FieryData/./src/data.ts","webpack://FieryData/./src/constants.ts","webpack://FieryData/./src/options.ts","webpack://FieryData/./src/factory/index.ts","webpack://FieryData/./src/operations.ts","webpack://FieryData/./src/factory/map.ts","webpack://FieryData/./src/factory/collection.ts","webpack://FieryData/./src/index.ts","webpack://FieryData/./src/instance.ts","webpack://FieryData/./src/factory/document.ts","webpack://FieryData/./src/store.ts","webpack://FieryData/./src/pager.ts","webpack://FieryData/./src/factory/stream.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","x","toString","isFunction","isString","isArray","Array","isDate","Date","isDefined","isNumber","isFinite","parseDate","toDate","coalesce","a","b","isCollectionSource","source","getFields","fields","otherwise","forEach","iterable","callback","length","prop","isEqual","getTime","constants_1","entry_1","factory_1","stats_1","callbacks_1","getCacheForReference","entry","ref","checkSubs","uid","storeKey","constants","UID_SEPARATOR","path","globalCache","addCacheToEntry","data","options","newDocument","PROP_UID","cache","exists","uses","sub","firstEntry","entries","removed","createRecord","callbacks","onCacheCreate","triggerEvent","getCacheForData","removeCacheFromEntry","children","entryIndex","indexOf","splice","inInstance","instance","removeCacheFromInstance","isReferencedSub","onSubDestroy","closeEntry","entrySubs","addSubs","push","checkForDestroy","destroyCache","onCacheDestroy","subProp","hasLiveSub","subOptions","subName","ENTRY_SEPARATOR","subSource","doc","parent","split","PATH_SEPARATOR","pop","collection","subEntry","getEntry","onSubCreate","live","record","defineProperties","recordProperties","destroyGlobalCache","getCacheForDocument","stats","reads","removeDataFromEntry","queries","deletes","updates","sets","writes","onInvalidOperation","_data","_operation","onUpdate","_values","_cache","onSet","onDelete","onClear","_props","onGetChanges","_fields","onRefresh","_cachedOnly","onBuild","_sub","onCollectionAdd","_target","_entry","onCollectionRemove","onCollectionModify","onCollectionChanged","onDocumentUpdate","onDocumentMissing","onInstanceCreate","_instance","onInstanceDestroy","util_1","options_1","store_1","cache_1","operations","remove","off","index","entryList","cached","getEntryRecordFunctions","refresh","cachedOnly","sync","update","save","excludeSubs","clear","props","build","initial","buildSub","createSub","getChanges","fieldsOrEquality","equalityOrNothing","getEntryRecordProperties","recordFunctions","recordOptions","optionsInput","namedSource","getOptions","getStoreKey","existing","id","recycleOptions","sources","updatePointers","querySnapshot","docs","first","last","docChanges","copyData","system","setProperty","decodeData","encoded","decode","decoders","parseDocument","out","_a","propValue","refreshData","decoded","propExists","propParent","encodeData","values","explicit","include","exclude","encoders","PROP_VALUE","RECORD_OPTIONS","EVENTS_OPTIONS","missing","destroy","performMerge","defaults","mergeOptions","optionsProp","merger","globalOptions","defined","user","undefined","onError","_message","onMissing","onSuccess","_results","onRemove","onMutate","mutate","onPromise","_promise","streamInitial","streamMore","liveOptions","_encoded","eventsOptions","event","handler","events","map","getOptionsByKey","parseInt","extends","shared","type","typeConstructor_1","newCollection","excludeMap","_key","timestamps","decoders_1","timestamp","nameOrMap","namedOptions","setGlobalOptions","mergeStrategy","ignore","_defaults","replace","chain","apply","arguments","shallow","__assign","concat","union","added","exclusions_1","defaultsArray_1","optionsArray_1","vm","query","once","stream","nullifyMissing","onceOptions","document_1","map_1","collection_1","stream_1","where","default","data_1","pager_1","_this","delete","Promise","reject","buildFromCollection","defaultValue","pager","target","entryFor","getPager","more","count","hasMore","system_1","then","options_2","values_1","createValues","set","propsArray","ref_1","store","firestore","promises_1","deleting","deleteCount","_i","propsArray_1","firebaseRuntime","app","firebase_","FieldValue","all","equality_1","options_3","current_1","remote","local","changed","remoteValue","localValue","resolve","ref_2","built","getInitialHandler","_missed","removeProperty","getUpdateHandler","change","updated","created","getLiveHandler","handleInitial","handleUpdate","requery","promise","catch","resolve_1","reject_1","_resolve","_reject","onSnapshot","reason","initialTarget","arrayResize","arrayAdd","arrayInsert","newIndex","arrayRemove","oldIndex","arrayMove","size","instance_1","getInstance","__export","opt","free","linkSources","container","systemOverrides","defaultSystem","systemProp","buildSystem","removeNamed","_name","from","to","missingSynchronously","handleDocumentUpdate","stores","keyNext","idToKey","pointer","hasQuery","hasData","_prop","hasNext","hasPrev","next","startAfter","prev","queryReverse","startAt","limit","startStream","endAt"],"mappings":"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","file":"fiery-data.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FieryData\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FieryData\"] = factory();\n\telse\n\t\troot[\"FieryData\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","\n\nimport { FierySource, FieryFields } from './types'\n\n\n\nexport function isObject (x?: any): x is Object\n{\n  return Object.prototype.toString.call(x) === '[object Object]'\n}\n\nexport function isFunction (x?: any): x is Function\n{\n  return typeof x === 'function'\n}\n\nexport function isString (x?: any): x is string\n{\n  return typeof x === 'string'\n}\n\nexport function isArray (x?: any): x is Array<any>\n{\n  return x && x instanceof Array\n}\n\nexport function isDate (x?: any): x is Date\n{\n  return x && x instanceof Date\n}\n\nexport function isDefined (x?: any): boolean\n{\n  return typeof x !== 'undefined'\n}\n\nexport function isNumber (x?: any): x is number\n{\n  return typeof x === 'number' && isFinite(x)\n}\n\nexport function parseDate (x?: any): Date | any\n{\n  if (isDate(x))\n  {\n    return x\n  }\n\n  if (x && isFunction(x.toDate))\n  {\n    return x.toDate()\n  }\n\n  if (isNumber(x))\n  {\n    return new Date(x)\n  }\n\n  return x\n}\n\nexport function coalesce (a?: any, b?: any): any\n{\n  return isDefined(a) ? a : b\n}\n\nexport function isCollectionSource (source: FierySource): boolean\n{\n  return !!((<any>source).where)\n}\n\nexport function getFields (fields?: FieryFields, otherwise?: string[]): string[] | undefined\n{\n  return !fields ? otherwise : (isString(fields) ? [fields] : fields)\n}\n\n// export function forEach<I, V extends I[keyof I], K extends keyof I>(iterable: I, callback: (item: V, key: K, iterable: I) => any): boolean\n// export function forEach<V, K>(iterable: V[], callback: (item: V, key: K, iterable: V[]) => any): boolean\nexport function forEach(iterable: any, callback: (item: any, key: any, iterable: any) => any): boolean\n{\n  if (isArray(iterable))\n  {\n    for (let i = 0; i < iterable.length; i++)\n    {\n      callback(iterable[i], i, iterable)\n    }\n\n    return true\n  }\n  else if (isObject(iterable))\n  {\n    for (let prop in iterable)\n    {\n      if (iterable.hasOwnProperty(prop))\n      {\n        callback(iterable[prop], prop, iterable)\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n\nexport function isEqual (a: any, b: any): boolean\n{\n  if (a === b)\n  {\n    return true\n  }\n\n  if (!a || !b)\n  {\n    return false\n  }\n\n  if (typeof a !== typeof b)\n  {\n    return false\n  }\n\n  if (isArray(a) && isArray(b))\n  {\n    if (a.length !== b.length)\n    {\n      return false\n    }\n\n    for (let i = 0; i < a.length; i++)\n    {\n      if (!isEqual(a[i], b[i]))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (isDate(a) && isDate(b))\n  {\n    return a.getTime() === b.getTime()\n  }\n\n  if (isObject(a) && isObject(b))\n  {\n    for (let prop in a)\n    {\n      if (!isEqual(a[prop], b[prop]))\n      {\n        return false\n      }\n    }\n\n    for (let prop in b)\n    {\n      if (!(prop in a))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { constants } from './constants'\nimport { FieryInstance, FieryEntry, FierySource, FieryCacheEntry, FieryCache, FieryData, FieryOptions, FieryOptionsMap } from './types'\nimport { closeEntry, getEntry } from './entry'\nimport { factory } from './factory'\nimport { stats } from './stats'\nimport { callbacks } from './callbacks'\n\n\n\nexport let globalCache: FieryCache = Object.create(null)\n\n\nexport function destroyGlobalCache()\n{\n  for (const uid in globalCache)\n  {\n    destroyCache(globalCache[uid])\n  }\n}\n\nexport function getCacheForReference (entry: FieryEntry, ref: firebase.firestore.DocumentReference, checkSubs: boolean = false): FieryCacheEntry\n{\n  const uid = entry.storeKey + constants.UID_SEPARATOR + ref.path\n\n  if (uid in globalCache)\n  {\n    addCacheToEntry(globalCache[uid], entry, checkSubs)\n\n    return globalCache[uid]\n  }\n\n  const data = entry.options.newDocument()\n\n  data[constants.PROP_UID] = uid\n\n  const cache: FieryCacheEntry = {\n    uid,\n    data,\n    ref,\n    exists: null,\n    uses: 0,\n    sub: {},\n    firstEntry: entry,\n    entries: [],\n    removed: false\n  }\n\n  globalCache[uid] = cache\n\n  addCacheToEntry(cache, entry, true)\n  createRecord(data, entry)\n\n  callbacks.onCacheCreate(cache)\n\n  entry.options.triggerEvent(data, 'create')\n\n  return cache\n}\n\nexport function getCacheForDocument (entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot, checkSubs: boolean = false): FieryCacheEntry\n{\n  stats.reads++\n\n  return getCacheForReference(entry, doc.ref, checkSubs)\n}\n\nexport function getCacheForData (data: FieryData): FieryCacheEntry | undefined\n{\n  return globalCache[data[constants.PROP_UID]]\n}\n\nexport function removeDataFromEntry (entry: FieryEntry, data: FieryData): void\n{\n  removeCacheFromEntry(entry, getCacheForData(data))\n}\n\nexport function removeCacheFromEntry (entry: FieryEntry, cache?: FieryCacheEntry): void\n{\n  if (cache && cache.uid in entry.children)\n  {\n    const entries: FieryEntry[] = cache.entries\n\n    // remove reference to entry from cache\n    const entryIndex = entries.indexOf(entry)\n    if (entryIndex !== -1)\n    {\n      entries.splice(entryIndex, 1)\n    }\n\n    // remove cache reference from entry\n    delete entry.children[cache.uid]\n\n    // if no more entries for this instance, remove from instance\n    let inInstance: boolean = false\n\n    for (var i = 0; i < entries.length; i++)\n    {\n      if (entries[i].instance === entry.instance)\n      {\n        inInstance = true\n        break\n      }\n    }\n\n    if (!inInstance)\n    {\n      removeCacheFromInstance(cache, entry.instance, true)\n    }\n\n    // turn off any unneeded subs if we're still being used\n    if (cache.uses > 0)\n    {\n      for (var sub in cache.sub)\n      {\n        if (!isReferencedSub(cache, sub))\n        {\n          callbacks.onSubDestroy(cache.data, sub, cache)\n\n          closeEntry(cache.sub[sub], true)\n        }\n      }\n    }\n  }\n}\n\nexport function isReferencedSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  const entries: FieryEntry[] = cache.entries\n\n  for (var i = 0; i < entries.length; i++)\n  {\n    const entry: FieryEntry = entries[i]\n    const entrySubs: FieryOptionsMap | undefined = entry.options.sub as (FieryOptionsMap | undefined)\n\n    if (entrySubs && sub in entrySubs)\n    {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function addCacheToEntry (cache: FieryCacheEntry, entry: FieryEntry, checkSubs: boolean = false): void\n{\n  if (!(cache.uid in entry.instance.cache))\n  {\n    entry.instance.cache[cache.uid] = cache\n    cache.uses++\n  }\n\n  if (!(cache.uid in entry.children))\n  {\n    cache.entries.push(entry)\n    entry.children[cache.uid] = cache\n\n    addSubs(cache, entry)\n  }\n  else if (checkSubs)\n  {\n    addSubs(cache, entry)\n  }\n}\n\nexport function removeCacheFromInstance (cache: FieryCacheEntry, instance: FieryInstance, checkForDestroy: boolean = true): void\n{\n  if (cache.uid in instance.cache)\n  {\n    cache.uses--\n    delete instance.cache[cache.uid]\n\n    const entries: FieryEntry[] = cache.entries\n\n    for (let i = entries.length - 1; i >= 0; i--)\n    {\n      const entry = entries[i]\n\n      if (entry.instance === instance)\n      {\n        removeCacheFromEntry(entry, cache)\n      }\n    }\n\n    if (checkForDestroy && cache.uses <= 0)\n    {\n      destroyCache(cache)\n    }\n  }\n}\n\nexport function destroyCache (cache: FieryCacheEntry): void\n{\n  const entries: FieryEntry[] = cache.entries\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    removeCacheFromInstance(cache, entries[i].instance, false)\n  }\n\n  for (var sub in cache.sub)\n  {\n    closeEntry(cache.sub[sub], true)\n  }\n\n  if (cache.uses <= 0 && !cache.removed)\n  {\n    callbacks.onCacheDestroy(cache)\n\n    cache.firstEntry.options.triggerEvent(cache.data, 'destroy')\n\n    delete globalCache[cache.uid]\n    delete cache.ref\n    delete cache.sub\n    delete cache.data\n\n    cache.uses = 0\n    cache.entries.length = 0\n    cache.removed = true\n  }\n}\n\nexport function addSubs (cache: FieryCacheEntry, entry: FieryEntry): void\n{\n  const options: FieryOptions = entry.options\n  const data: FieryData = cache.data\n  const ref: firebase.firestore.DocumentReference | undefined = cache.ref\n\n  if (options.sub && ref)\n  {\n    for (let subProp in options.sub)\n    {\n      if (!hasLiveSub(cache, subProp))\n      {\n        let subOptions: FieryOptions = options.sub[subProp] as FieryOptions\n        let subName: string = cache.uid + constants.ENTRY_SEPARATOR + subProp\n\n        let subSource: FierySource = subOptions.doc\n          ? ref.parent.doc(cache.uid.split(constants.PATH_SEPARATOR).pop() + constants.PATH_SEPARATOR + subProp)\n          : ref.collection(subProp)\n\n        let subEntry: FieryEntry = getEntry(\n          entry.instance,\n          subSource,\n          subOptions,\n          subName,\n          false // we shouldn't add this to sources\n        )\n\n        subEntry.parent = cache\n        cache.sub[subProp] = subEntry\n\n        data[subProp] = factory(subEntry)\n\n        callbacks.onSubCreate(data, subProp, cache)\n      }\n    }\n  }\n}\n\nexport function hasLiveSub (cache: FieryCacheEntry, sub: string): boolean\n{\n  return sub in cache.sub && cache.sub[sub].live\n}\n\nexport function createRecord (data: FieryData, entry: FieryEntry): FieryData\n{\n  const options: FieryOptions = entry.options\n\n  if (options.record)\n  {\n    Object.defineProperties(data, entry.recordProperties)\n  }\n\n  return data\n}\n","\n\nexport const stats = {\n  queries: 0,\n  reads: 0,\n  deletes: 0,\n  updates: 0,\n  sets: 0,\n  writes: 0\n}\n","\nimport { FieryData, FieryCacheEntry, FieryTarget, FieryEntry, FieryInstance } from './types'\n\nexport const callbacks =\n{\n  onInvalidOperation (_data: FieryData, _operation: string) {},\n\n  onUpdate (_data: FieryData, _values: FieryData, _cache: FieryCacheEntry) {},\n\n  onSet (_data: FieryData, _values: FieryData, _cache: FieryCacheEntry) {},\n\n  onDelete (_data: FieryData, _cache: FieryCacheEntry) {},\n\n  onClear (_data: FieryData, _props: string[]) {},\n\n  onGetChanges (_data: FieryData, _cache: FieryCacheEntry, _fields?: string[]) {},\n\n  onRefresh (_data: FieryData, _cachedOnly?: boolean) {},\n\n  onBuild (_data: FieryData, _cache: FieryCacheEntry) {},\n\n  onCacheCreate (_cache: FieryCacheEntry) {},\n\n  onCacheDestroy (_cache: FieryCacheEntry) {},\n\n  onSubCreate (_data: FieryData, _sub: string, _cache: FieryCacheEntry) {},\n\n  onSubDestroy (_data: FieryData, _sub: string, _cache: FieryCacheEntry) {},\n\n  onCollectionAdd (_data: FieryData, _target: FieryTarget, _entry: FieryEntry) {},\n\n  onCollectionRemove (_data: FieryData, _target: FieryTarget, _entry: FieryEntry) {},\n\n  onCollectionModify (_data: FieryData, _target: FieryTarget, _entry: FieryEntry) {},\n\n  onCollectionChanged (_target: FieryTarget, _entry: FieryEntry) {},\n\n  onDocumentUpdate (_data: FieryData, _entry: FieryEntry) {},\n\n  onDocumentMissing (_data: FieryData, _entry: FieryEntry) {},\n\n  onInstanceCreate (_instance: FieryInstance) {},\n\n  onInstanceDestroy (_instance: FieryInstance) {},\n}\n","\n\nimport { FieryOptionsInput, FieryOptions, FieryInstance, FieryEntry, FierySource, FieryCache, FieryData, FieryChanges, FieryEquality, FieryFields, FieryRecordProperties } from './types'\nimport { forEach, isDefined, isArray, isFunction } from './util'\nimport { getOptions, recycleOptions } from './options'\nimport { getStoreKey } from './store'\nimport { removeCacheFromEntry } from './cache'\nimport * as operations from './operations'\n\n\n\nexport function closeEntry (entry: FieryEntry | null, remove: boolean = false): void\n{\n  if (entry && entry.live)\n  {\n    if (entry.off)\n    {\n      entry.off()\n\n      delete entry.off\n    }\n\n    entry.live = false\n\n    if (remove)\n    {\n      const instance: FieryInstance = entry.instance\n\n      if (isDefined(entry.index))\n      {\n        instance.entryList[entry.index as number] = null\n\n        delete entry.index\n      }\n\n      if (entry.name && entry.name in instance.entry)\n      {\n        delete instance.entry[entry.name]\n      }\n\n      forEach(entry.children, cached =>\n      {\n        removeCacheFromEntry(entry, cached)\n      })\n    }\n  }\n}\n\nexport function getEntry (instance: FieryInstance, source: FierySource, optionsInput?: FieryOptionsInput, name?: string, namedSource: boolean = true)\n{\n  // Things that are allowed to change on repetitive entry calls\n  const options: FieryOptions = getOptions(optionsInput, instance)\n  const storeKey: number = getStoreKey(source)\n\n  if (name && name in instance.entry)\n  {\n    const existing: FieryEntry = instance.entry[ name ]\n\n    closeEntry(existing)\n\n    if (options.id !== existing.options.id)\n    {\n      recycleOptions(existing.options)\n    }\n\n    existing.source = source\n    existing.options = options\n    existing.storeKey = storeKey\n    existing.live = true\n\n    if (name && namedSource)\n    {\n      instance.sources[ name ] = source\n    }\n\n    return existing\n  }\n\n  const recordFunctions = getEntryRecordFunctions(instance)\n  const recordProperties = getEntryRecordProperties(options, recordFunctions)\n  const children: FieryCache = {}\n  const live: boolean = true\n  const entry: FieryEntry = {\n    name,\n    options,\n    source,\n    instance,\n    storeKey,\n    children,\n    recordFunctions,\n    recordProperties,\n    live\n  }\n\n  if (!name || !(name in instance.entry))\n  {\n    entry.index = instance.entryList.length\n\n    instance.entryList.push(entry)\n  }\n\n  if (name)\n  {\n    instance.entry[ name ] = entry\n  }\n\n  if (name && namedSource)\n  {\n    instance.sources[ name ] = source\n  }\n\n  return entry\n}\n\nexport function updatePointers (entry: FieryEntry, querySnapshot: firebase.firestore.QuerySnapshot): void\n{\n  const docs = querySnapshot.docs\n\n  entry.first = docs[0]\n  entry.last = docs[docs.length - 1]\n}\n\nexport function getChanges (querySnapshot: firebase.firestore.QuerySnapshot): firebase.firestore.DocumentChange[]\n{\n  if (isFunction(querySnapshot.docChanges))\n  {\n    return querySnapshot.docChanges()\n  }\n\n  if (isArray(querySnapshot.docChanges))\n  {\n    return (<any>querySnapshot.docChanges) as firebase.firestore.DocumentChange[]\n  }\n\n  return []\n}\n\nexport function getEntryRecordFunctions (instance: FieryInstance)\n{\n  return {\n    refresh: function(this: FieryData, cachedOnly?: boolean): Promise<void> {\n      return operations.refresh.call(instance, this, cachedOnly)\n    },\n    sync: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.sync.call(instance, this, fields)\n    },\n    update: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.update.call(instance, this, fields)\n    },\n    save: function(this: FieryData, fields?: FieryFields): Promise<void> {\n      return operations.save.call(instance, this, fields)\n    },\n    remove: function(this: FieryData, excludeSubs: boolean = false): Promise<void> {\n      return operations.remove.call(instance, this, excludeSubs)\n    },\n    ref: function(this: FieryData, sub?: string): FierySource {\n      return operations.ref.call(instance, this, sub)\n    },\n    clear: function(this: FieryData, props: FieryFields): Promise<void[]> {\n      return operations.clear.call(instance, this, props)\n    },\n    build: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.buildSub.call(instance, this, sub, initial)\n    },\n    create: function<T extends FieryData>(this: FieryData, sub: string, initial?: FieryData): T {\n      return operations.createSub.call(instance, this, sub, initial)\n    },\n    getChanges: function(this: FieryData,\n      fieldsOrEquality: FieryFields | FieryEquality,\n      equalityOrNothing?: FieryEquality): Promise<FieryChanges> {\n      return operations.getChanges.call(instance, this, fieldsOrEquality, equalityOrNothing)\n    }\n  }\n}\n\nexport function getEntryRecordProperties (options: FieryOptions, recordFunctions: any): FieryRecordProperties\n{\n  const props: FieryRecordProperties = {}\n\n  for (var prop in options.recordOptions)\n  {\n    const newProp = options.recordOptions[prop]\n\n    props[newProp] = {\n      value: recordFunctions[prop]\n    }\n  }\n\n  return props\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySystem, FieryOptions, FieryEntry, FieryData, FieryFields, FieryCacheEntry } from './types'\nimport { isObject, getFields } from './util'\n\n\n\nexport function refreshData (cache: FieryCacheEntry, doc: firebase.firestore.DocumentSnapshot, entry: FieryEntry): FieryData\n{\n  const system: FierySystem = entry.instance.system\n  const options: FieryOptions = entry.options\n  const encoded: FieryData = parseDocument(doc, options)\n  const decoded: FieryData = decodeData(encoded, options)\n  const data: FieryData = cache.data\n\n  copyData(system, data, decoded)\n\n  if (options.propExists)\n  {\n    system.setProperty(data, options.propExists, doc.exists)\n  }\n\n  if (options.propParent && entry.parent)\n  {\n    system.setProperty(data, options.propParent, entry.parent.data)\n  }\n\n  cache.exists = doc.exists\n\n  options.triggerEvent(data, 'update')\n\n  return data;\n}\n\nexport function copyData (system: FierySystem, data: FieryData, update: FieryData): FieryData\n{\n  for (let prop in update)\n  {\n    system.setProperty(data, prop, update[prop])\n  }\n\n  return data\n}\n\nexport function decodeData (encoded: FieryData, options: FieryOptions): FieryData\n{\n  if (options.decode)\n  {\n    encoded = options.decode(encoded)\n  }\n  else if (options.decoders)\n  {\n    for (let prop in options.decoders)\n    {\n      if (prop in encoded)\n      {\n        encoded[prop] = options.decoders[prop](encoded[prop], encoded)\n      }\n    }\n  }\n\n  return encoded\n}\n\nexport function encodeData (data: FieryData, options: FieryOptions, fields?: FieryFields): FieryData\n{\n  const values: FieryData = {}\n  const explicit: string[] = getFields(fields, options.include) as string[]\n\n  if (explicit)\n  {\n    for (let i = 0; i < explicit.length; i++)\n    {\n      let prop: string = explicit[i]\n\n      if (prop in data)\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n  else\n  {\n    for (let prop in data)\n    {\n      if (!(prop in options.exclude))\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n\n  if (options.encoders)\n  {\n    for (let prop in options.encoders)\n    {\n      if (prop in values)\n      {\n        values[prop] = options.encoders[prop](values[prop], data)\n      }\n    }\n  }\n\n  return values\n}\n\nexport function parseDocument (doc: firebase.firestore.DocumentSnapshot, options: FieryOptions): FieryData\n{\n  let value = doc.data()\n  let out = (isObject(value) ? value : { [options.propValue]: value }) as FieryData\n\n  if (out && options.key)\n  {\n    out[options.key] = doc.id\n  }\n\n  return out\n}\n","\nexport const constants = {\n\n  PROP_VALUE: '.value',\n\n  PROP_UID: '.uid',\n\n  UID_SEPARATOR: '///',\n\n  ENTRY_SEPARATOR: '/',\n\n  PATH_SEPARATOR: '/',\n\n  RECORD_OPTIONS: {\n    refresh: '$refresh',\n    sync: '$sync',\n    update: '$update',\n    save: '$save',\n    remove: '$remove',\n    ref: '$ref',\n    clear: '$clear',\n    build: '$build',\n    create: '$create',\n    getChanges: '$getChanges'\n  },\n\n  EVENTS_OPTIONS: {\n    create: '$onCreate',\n    missing: '$onMissing',\n    update: '$onUpdate',\n    remove: '$onRemove',\n    destroy: '$onDestroy'\n  }\n\n}\n\n","\nimport { constants } from './constants'\nimport { FieryOptionsInput, FieryTarget, FieryOptions, FieryOptionsMap, FieryInstance, FieryExclusions, FieryData, FieryMap, FieryMergeStrategy, FieryMergeStrategies, FieryEvents } from './types'\nimport { parseDate, isObject, isArray, coalesce, forEach, isDefined, isString } from './util'\n\n\n\nexport const globalOptions =\n{\n  defined: {} as FieryOptionsMap,\n\n  user: undefined as Partial<FieryOptions> | undefined,\n\n  defaults:\n  {\n    onError: (_message: any) => {},\n\n    onMissing: () => {},\n\n    onSuccess: (_results: any) => {},\n\n    onRemove: () => {},\n\n    onMutate: (mutate: () => FieryTarget) => {\n      mutate()\n    },\n\n    onPromise: (_promise: Promise<FieryTarget>) => {},\n\n    streamInitial: 20,\n\n    streamMore: 10,\n\n    liveOptions: {},\n\n    propValue: constants.PROP_VALUE,\n\n    recordOptions: constants.RECORD_OPTIONS,\n\n    newDocument: (_encoded?: FieryData) => ({} as FieryData),\n\n    eventsOptions: constants.EVENTS_OPTIONS,\n\n    triggerEvent (this: FieryOptions, data: FieryData, event: FieryEvents)\n    {\n      const handler = this.eventsOptions[event]\n\n      if (this.events && handler && data[handler])\n      {\n        data[handler]()\n      }\n    }\n\n  } as Partial<FieryOptions>,\n\n  id: 0,\n\n  map: {} as FieryOptionsMap\n}\n\n\nexport function getOptionsByKey (key: string): FieryOptions\n{\n  return globalOptions.map[parseInt(key)] as FieryOptions\n}\n\nexport function getOptions (options?: FieryOptionsInput, instance?: FieryInstance): FieryOptions\n{\n  // If a string is passed - returned a defined option.\n  if (isString(options))\n  {\n    if (!(options in globalOptions.defined))\n    {\n      throw 'The definition ' + options + ' was not found. You must call define before you use the definition'\n    }\n\n    // Ensure the defined option is properly populated\n    return getOptions(globalOptions.defined[options])\n  }\n\n  // If nothing was given, populate an empty set of options\n  if (!options || !isObject(options))\n  {\n    options = {}\n  }\n\n  // If the options was already populated, return the options\n  if (options.id && options.id in globalOptions.map)\n  {\n    return options as FieryOptions\n  }\n  // Otherwise, assign this options an id and add it to the list of options\n  else if (!options.id)\n  {\n    options.id = ++globalOptions.id\n    globalOptions.map[options.id] = options as FieryOptions\n  }\n\n  if (options.extends)\n  {\n    performMerge(options, getOptions(options.extends))\n  }\n\n  performMerge(options, globalOptions.user)\n  performMerge(options, globalOptions.defaults)\n\n  if (instance && !options.shared)\n  {\n    options.instance = instance\n    instance.options[ options.id ] = options as FieryOptions\n  }\n\n  if (options.type)\n  {\n    const typeConstructor = options.type\n\n    options.newDocument = (_encoded?: FieryData) => (new typeConstructor() as FieryData)\n  }\n\n  if (!options.newCollection)\n  {\n    options.newCollection = options.map\n      ? () => ({} as FieryMap)\n      : () => ([] as FieryData[])\n  }\n\n  let excludeMap: FieryExclusions = {}\n\n  if (!options.exclude)\n  {\n    if (options.key)\n    {\n      excludeMap[options.key] = true\n    }\n  }\n  else if (isArray(options.exclude))\n  {\n    forEach(options.exclude, (value, _key) => excludeMap[value] = true)\n  }\n  else\n  {\n    excludeMap = options.exclude as FieryExclusions\n  }\n\n  excludeMap[options.propValue as string] = true\n  excludeMap[constants.PROP_UID] = true\n\n  forEach(options.recordOptions, (value, _key) => excludeMap[value] = true)\n\n  options.exclude = excludeMap\n\n  if (options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptionsInput = options.sub[subProp] as FieryOptionsInput\n      let subOptions = getOptions(subOptionsInput, instance)\n\n      subOptions.parent = options as FieryOptions\n\n      options.sub[subProp] = subOptions\n\n      if (!subOptions.ref)\n      {\n        excludeMap[subProp] = true\n      }\n    }\n  }\n\n  if (isArray(options.timestamps) && options.timestamps.length)\n  {\n    let decoders = options.decoders || {}\n\n    forEach(options.timestamps, timestamp =>\n    {\n      if (!(timestamp in decoders))\n      {\n        decoders[timestamp] = parseDate\n      }\n    })\n\n    options.decoders = decoders\n  }\n\n  return options as FieryOptions\n}\n\nexport function recycleOptions (options: FieryOptions)\n{\n  const instance: FieryInstance | undefined = options.instance\n\n  if (instance)\n  {\n    delete instance.options[options.id]\n  }\n}\n\nexport function define (nameOrMap: string | FieryOptionsMap, namedOptions?: Partial<FieryOptions>): void\n{\n  if (isString(nameOrMap))\n  {\n    const options: Partial<FieryOptions> = namedOptions as Partial<FieryOptions>\n\n    options.shared = true\n\n    globalOptions.defined[nameOrMap] = options\n  }\n  else\n  {\n    for (let name in nameOrMap)\n    {\n      const options: Partial<FieryOptions> = nameOrMap[name]\n\n      options.shared = true\n\n      globalOptions.defined[name] = options\n    }\n  }\n}\n\nexport function setGlobalOptions (user?: Partial<FieryOptions>): void\n{\n  if (user)\n  {\n    user.shared = true\n  }\n\n  globalOptions.user = user\n}\n\nexport function performMerge (options: Partial<FieryOptions>, defaults?: Partial<FieryOptions>): void\n{\n  if (!defaults) return\n\n  for (let prop in mergeOptions)\n  {\n    const optionsProp = prop as keyof FieryOptions\n    const merger: FieryMergeStrategy = mergeOptions[optionsProp]\n\n    options[optionsProp] = merger( options[optionsProp], defaults[optionsProp] )\n  }\n}\n\nexport const mergeStrategy: FieryMergeStrategies =\n{\n  ignore (options: any, _defaults: any): any {\n    return options\n  },\n  replace (options: any, defaults: any): any {\n    return coalesce(options, defaults)\n  },\n  chain (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return function(this: any) {\n      (defaults as Function).apply(this, arguments)\n      (options as Function).apply(this, arguments)\n    }\n  },\n  shallow (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return {\n      ...defaults,\n      ...options\n    }\n  },\n  concat (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    if (isArray(options) && isArray(defaults)) {\n      let union = options.concat(defaults)\n      let added: {[k:string]:any} = {}\n      for (let i = union.length - 1; i >= 0; i--) {\n        if (union[i] in added) {\n          union.splice(i, 1)\n        } else {\n          added[union[i]] = true\n        }\n      }\n      return union\n    }\n  },\n  exclude (options: any, defaults: any): any {\n    const union = mergeStrategy.concat(options, defaults)\n    if (!union && options && defaults) {\n      let exclusions: {[k:string]:any} = {}\n      let defaultsArray = isArray(defaults)\n      let optionsArray = isArray(options)\n      forEach(defaults, (value, key) => value ? (exclusions[defaultsArray ? value : key] = true) : 0)\n      forEach(options, (value, key) => value ? (exclusions[optionsArray ? value : key] = true) : 0)\n      return exclusions\n    }\n    return union\n  }\n}\n\nexport const mergeOptions: FieryMergeStrategies =\n{\n  extends:            mergeStrategy.ignore,\n  id:                 mergeStrategy.ignore,\n  parent:             mergeStrategy.ignore,\n  shared:             mergeStrategy.ignore,\n  vm:                 mergeStrategy.ignore,\n  key:                mergeStrategy.replace,\n  query:              mergeStrategy.replace,\n  map:                mergeStrategy.replace,\n  once:               mergeStrategy.replace,\n  stream:             mergeStrategy.replace,\n  streamInitial:      mergeStrategy.replace,\n  streamMore:         mergeStrategy.replace,\n  type:               mergeStrategy.replace,\n  nullifyMissing:     mergeStrategy.replace,\n  newDocument:        mergeStrategy.replace,\n  newCollection:      mergeStrategy.replace,\n  decode:             mergeStrategy.replace,\n  decoders:           mergeStrategy.shallow,\n  encoders:           mergeStrategy.shallow,\n  record:             mergeStrategy.replace,\n  recordOptions:      mergeStrategy.replace,\n  recordFunctions:    mergeStrategy.replace,\n  events:             mergeStrategy.replace,\n  eventsOptions:      mergeStrategy.replace,\n  triggerEvent:       mergeStrategy.replace,\n  propValue:          mergeStrategy.replace,\n  propExists:         mergeStrategy.replace,\n  propParent:         mergeStrategy.replace,\n  onceOptions:        mergeStrategy.replace,\n  liveOptions:        mergeStrategy.replace,\n  include:            mergeStrategy.concat,\n  exclude:            mergeStrategy.exclude,\n  timestamps:         mergeStrategy.concat,\n  onError:            mergeStrategy.replace,\n  onSuccess:          mergeStrategy.replace,\n  onMissing:          mergeStrategy.replace,\n  onRemove:           mergeStrategy.replace,\n  onMutate:           mergeStrategy.replace,\n  onPromise:          mergeStrategy.replace,\n  sub:                mergeStrategy.shallow\n}\n","\n\nimport { FieryEntry, FieryTarget } from '../types'\n\n\n\nimport factoryDocument from './document'\nimport factoryMap from './map'\nimport factoryCollection from './collection'\nimport factoryStream from './stream'\n\n\n\nexport function factory (entry: FieryEntry): FieryTarget\n{\n  let chosenFactory = (<any>entry.source).where\n    ? (entry.options.stream\n        ? factoryStream\n        : (entry.options.map\n            ? factoryMap\n            : factoryCollection\n          )\n      )\n    : factoryDocument\n\n  return chosenFactory(entry)\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FieryInstance, FierySystem, FieryCacheEntry, FieryOptions, FieryEntry, FieryData, FierySource, FieryChanges, FieryEquality, FieryFields, FieryTarget, FieryPager } from './types'\nimport { parseDocument, encodeData, refreshData } from './data'\nimport { forEach, isEqual, isFunction, getFields } from './util'\nimport { getCacheForData, getCacheForReference } from './cache'\nimport { stats } from './stats'\nimport { callbacks } from './callbacks'\nimport { getPager } from './pager'\n\n\n\nexport function pager (this: FieryInstance, target: string | FieryTarget): FieryPager | null\n{\n  const entry = this.entryFor(target)\n\n  return entry\n    ? (entry.pager ? entry.pager : entry.pager = getPager(entry))\n    : null\n}\n\n\nexport function more (this: FieryInstance, target: string | FieryTarget, count?: number): Promise<void>\n{\n  const entry = this.entryFor(target)\n\n  return entry\n    ? (entry.more ? entry.more(count) : Promise.reject(undefined))\n    : Promise.reject(undefined)\n}\n\n\nexport function hasMore (this: FieryInstance, target: string | FieryTarget): boolean\n{\n  const entry = this.entryFor(target)\n\n  return !!(entry && entry.hasMore)\n}\n\n\nexport async function refresh (this: FieryInstance, data: FieryData, cachedOnly: boolean = false): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const entry: FieryEntry = cache.firstEntry\n    const options: FieryOptions = entry.options\n    const system: FierySystem = entry.instance.system\n    const getOptions: firebase.firestore.GetOptions = {\n      source: cachedOnly ? 'cache' : 'default'\n    }\n\n    stats.reads++\n\n    callbacks.onRefresh(data, cachedOnly)\n\n    return cache.ref.get(getOptions).then(doc =>\n    {\n      options.onMutate(() =>\n      {\n        if (doc.exists)\n        {\n          refreshData(cache, doc, entry)\n        }\n        else\n        {\n          if (options.propExists)\n          {\n            system.setProperty(cache.data, options.propExists, false)\n          }\n\n          cache.exists = false\n        }\n\n        return cache.data\n      })\n    })\n  }\n\n  callbacks.onInvalidOperation(data, 'refresh')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport async function save (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    if (cache.exists)\n    {\n      stats.writes++\n      stats.updates++\n\n      callbacks.onUpdate(data, values, cache)\n\n      return cache.ref.update(values)\n    }\n    else\n    {\n      return cache.ref.get().then(doc =>\n      {\n        stats.writes++\n\n        if (doc.exists)\n        {\n          stats.updates++\n\n          callbacks.onUpdate(data, values, cache)\n\n          return cache.ref.update(values)\n        }\n        else\n        {\n          const createValues = encodeData(data, options)\n\n          stats.sets++\n\n          callbacks.onSet(data, createValues, cache)\n\n          return cache.ref.set(createValues)\n        }\n      })\n    }\n  }\n\n  callbacks.onInvalidOperation(data, 'save')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function update (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    stats.writes++\n    stats.updates++\n\n    callbacks.onUpdate(data, values, cache)\n\n    return cache.ref.update(values)\n  }\n\n  callbacks.onInvalidOperation(data, 'update')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function sync (this: FieryInstance, data: FieryData, fields?: FieryFields): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const values: FieryData = encodeData(data, options, fields)\n\n    stats.sets++\n    stats.writes++\n\n    callbacks.onSet(data, values, cache)\n\n    return cache.ref.set(values)\n  }\n\n  callbacks.onInvalidOperation(data, 'sync')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function remove (this: FieryInstance, data: FieryData, excludeSubs: boolean = false): Promise<void>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n\n    if (!excludeSubs && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        forEach(data[subProp], (sub) =>\n        {\n          remove.call(this, sub as FieryData)\n        })\n      }\n    }\n\n    stats.deletes++\n\n    callbacks.onDelete(data, cache)\n\n    return cache.ref.delete()\n  }\n\n  callbacks.onInvalidOperation(data, 'remove')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function clear (this: FieryInstance, data: FieryData, props: FieryFields): Promise<void[]>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n  const propsArray: string[] = getFields(props) as string[]\n\n  if (cache && cache.ref)\n  {\n    const options: FieryOptions = cache.firstEntry.options\n    const ref: firebase.firestore.DocumentReference = cache.ref\n    const store: firebase.firestore.Firestore = ref.firestore\n    const promises: Promise<void>[] = []\n\n    const deleting: any = {}\n    let deleteCount: number = 0\n\n    for (let prop of propsArray)\n    {\n      if (options.sub && prop in options.sub && data[prop])\n      {\n        forEach(data[prop], (sub) =>\n        {\n          promises.push(remove.call(this, sub as FieryData))\n        })\n      }\n      else if (prop in data)\n      {\n        let firebaseRuntime: any = (<any>store.app).firebase_\n\n        if (firebaseRuntime)\n        {\n          deleting[prop] = firebaseRuntime.firestore.FieldValue.delete()\n          deleteCount++\n        }\n      }\n    }\n\n    if (deleteCount > 0)\n    {\n      stats.updates++\n      stats.writes++\n\n      promises.push(ref.update(deleting))\n    }\n\n    callbacks.onClear(data, propsArray)\n\n    return Promise.all(promises)\n  }\n\n  callbacks.onInvalidOperation(data, 'clear')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport async function getChanges (this: FieryInstance,\n  data: FieryData,\n  fieldsOrEquality: FieryFields | FieryEquality,\n  equalityOrNothing?: FieryEquality): Promise<FieryChanges>\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const fields: FieryFields | undefined = isFunction(fieldsOrEquality) ? undefined : getFields(fieldsOrEquality as FieryFields)\n    const equality: FieryEquality = ((fields ? equalityOrNothing : fieldsOrEquality) || isEqual) as FieryEquality\n    const options: FieryOptions = cache.firstEntry.options\n    const current: FieryData = encodeData(data, options, fields)\n\n    stats.reads++\n\n    callbacks.onGetChanges(data, cache, fields)\n\n    return cache.ref.get().then(doc =>\n    {\n      const encoded: FieryData = parseDocument(doc, options)\n      const remote: FieryData = {}\n      const local: FieryData = {}\n      let changed = false\n\n      for (let prop in current)\n      {\n        let remoteValue = encoded[prop]\n        let localValue = current[prop]\n\n        if (!equality(remoteValue, localValue))\n        {\n          changed = true\n          remote[prop] = remoteValue\n          local[prop] = localValue\n        }\n      }\n\n      return Promise.resolve({ changed, remote, local })\n    })\n  }\n\n  callbacks.onInvalidOperation(data, 'getChanges')\n\n  return Promise.reject('The given data is out of scope and cannot be operated on.')\n}\n\nexport function ref (this: FieryInstance, data: FieryData, sub?: string): FierySource\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref)\n  {\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return sub ? ref.collection(sub) : ref\n  }\n\n  throw 'The given data is out of scope and cannot be referenced.'\n}\n\nexport function create <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  const built: T = this.build(target, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function createSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const built: T = this.buildSub(data, sub, initial)\n\n  if (built)\n  {\n    this.sync(built)\n  }\n\n  return built\n}\n\nexport function build <T extends FieryData>(this: FieryInstance, target: string | FieryTarget, initial?: FieryData): T\n{\n  const entry = this.entryFor(target)\n\n  if (entry)\n  {\n    return buildFromCollection (entry.source as firebase.firestore.CollectionReference, entry, initial)\n  }\n\n  throw 'Cannot build ' + target + + ', it does not exist in the current $fiery instance.'\n}\n\nexport function buildSub <T extends FieryData>(this: FieryInstance, data: FieryData, sub: string, initial?: FieryData): T\n{\n  const cache: FieryCacheEntry | undefined = getCacheForData(data)\n\n  if (cache && cache.ref && sub in cache.sub)\n  {\n    const entry: FieryEntry = cache.sub[sub]\n    const ref: firebase.firestore.DocumentReference = cache.ref\n\n    return buildFromCollection(ref.collection(sub), entry, initial)\n  }\n\n  throw 'Cannot build in the sub collection ' + sub + + ', the parent data does not exist in the current $fiery instance or the sub collection is not defined in the options.'\n}\n\nexport function buildFromCollection <T extends FieryData>(collection: firebase.firestore.CollectionReference, entry: FieryEntry, initial?: FieryData): T\n{\n  const options: FieryOptions = entry.options\n  const ref = collection.doc()\n  const cache: FieryCacheEntry = getCacheForReference(entry, ref)\n\n  if (options.defaults)\n  {\n    forEach(options.defaults, (defaultValue, prop) =>\n    {\n      if (!initial || !(prop in initial))\n      {\n        cache.data[prop] = isFunction(defaultValue) ? defaultValue() : defaultValue\n      }\n    })\n  }\n\n  if (initial)\n  {\n    forEach(initial, (value, prop) =>\n    {\n      cache.data[prop] = value\n    })\n  }\n\n  callbacks.onBuild(cache.data, cache)\n\n  return cache.data as T\n}\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { forEach } from '../util'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeDataFromEntry, removeCacheFromEntry, destroyCache } from '../cache'\nimport { stats } from '../stats'\nimport { updatePointers, getChanges } from '../entry'\nimport { callbacks } from '../callbacks'\n\n\n\nexport type OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\nexport type OnResolve = (target: FieryTarget) => any\nexport type OnReject = (reason: any) => any\n\n\n\nfunction factory (entry: FieryEntry): FieryMap\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n\n  entry.requery = (query) =>\n  {\n    const initial = getInitialHandler(entry)\n\n    if (!entry.target)\n    {\n      entry.target = options.newCollection()\n    }\n\n    stats.queries++\n\n    if (options.once)\n    {\n      entry.promise = query.get(options.onceOptions)\n        .then(initial)\n        .catch(options.onError)\n    }\n    else\n    {\n      let resolve: OnResolve = () => {}\n      let reject: OnReject = () => {}\n\n      entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n        resolve = _resolve\n        reject = _reject\n      })\n\n      entry.off = query.onSnapshot(\n        options.liveOptions,\n        getLiveHandler(entry, initial, resolve),\n        (reason: any) => {\n          reject(reason)\n          options.onError(reason)\n        }\n      )\n    }\n\n    options.onPromise(entry.promise)\n  }\n\n  entry.requery(entry.query = query)\n\n  return entry.target as FieryMap\n}\n\nexport function getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n    const missing: FieryMap = { ...target }\n\n    options.onMutate(() =>\n    {\n      querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n      {\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc, true)\n\n        refreshData(cache, doc, entry)\n\n        system.setProperty(target, doc.id, cache.data)\n\n        delete missing[doc.id]\n\n        callbacks.onCollectionAdd(cache.data, target, entry)\n\n      }, options.onError)\n\n      forEach(missing, (_missed, key) => system.removeProperty(target, key as string))\n\n      return target\n    })\n\n    forEach(missing, data =>\n    {\n      callbacks.onCollectionRemove(data, target, entry)\n\n      removeDataFromEntry(entry, data)\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n\n    return target\n  }\n}\n\nexport function getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryMap = entry.target as FieryMap\n\n    options.onMutate(() =>\n    {\n      const changes = getChanges(querySnapshot)\n\n      changes.forEach((change: firebase.firestore.DocumentChange) =>\n      {\n        const doc: firebase.firestore.DocumentSnapshot = change.doc\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n        switch (change.type)\n        {\n          case 'modified':\n            const updated: FieryData = refreshData(cache, doc, entry)\n            system.setProperty(target, doc.id, updated)\n\n            callbacks.onCollectionModify(updated, target, entry)\n            break\n\n          case 'added':\n            const created: FieryData = refreshData(cache, doc, entry)\n            system.setProperty(target, doc.id, created)\n\n            callbacks.onCollectionAdd(created, target, entry)\n            break\n\n          case 'removed':\n            callbacks.onCollectionRemove(cache.data, target, entry)\n\n            system.removeProperty(target, doc.id)\n\n            if (doc.exists)\n            {\n              removeCacheFromEntry(entry, cache)\n            }\n            else\n            {\n              if (options.propExists)\n              {\n                system.setProperty(cache.data, options.propExists, false)\n              }\n\n              cache.exists = false\n\n              options.triggerEvent(cache.data, 'remove')\n\n              destroyCache(cache)\n            }\n            break\n        }\n      }, options.onError)\n\n      return target\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n  }\n}\n\nexport function getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot, resolve: OnResolve): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    resolve(entry.target as FieryTarget)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\nimport { constants } from '../constants'\nimport { FierySystem, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap, FieryCacheEntry } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForDocument, removeCacheFromEntry, removeDataFromEntry, destroyCache } from '../cache'\nimport { forEach } from '../util'\nimport { updatePointers, getChanges } from '../entry'\nimport { stats } from '../stats'\nimport { callbacks } from '../callbacks'\n\n\n\nexport type OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\nexport type OnResolve = (target: FieryTarget) => any\nexport type OnReject = (reason: any) => any\n\n\nexport function factory (entry: FieryEntry): FieryData[]\n{\n  type CollectionQuery = firebase.firestore.CollectionReference | firebase.firestore.Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query\n    ? options.query(entry.source as firebase.firestore.CollectionReference)\n    : entry.source) as CollectionQuery\n\n  entry.requery = (query) =>\n  {\n    const initial = getInitialHandler(entry)\n\n    if (!entry.target)\n    {\n      entry.target = options.newCollection()\n    }\n\n    stats.queries++\n\n    if (options.once)\n    {\n      entry.promise = query.get(options.onceOptions)\n        .then(initial)\n        .catch(options.onError)\n    }\n    else\n    {\n      let resolve: OnResolve = () => {}\n      let reject: OnReject = () => {}\n\n      entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n        resolve = _resolve\n        reject = _reject\n      })\n\n      entry.off = query.onSnapshot(\n        options.liveOptions,\n        getLiveHandler(entry, initial, resolve),\n        (reason: any) => {\n          reject(reason)\n          options.onError(reason)\n        }\n      )\n    }\n\n    options.onPromise(entry.promise)\n  }\n\n  entry.requery(entry.query = query)\n\n  return entry.target as FieryData[]\n}\n\nexport function getInitialHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n    const missing: FieryMap = {}\n\n    if (initialTarget)\n    {\n      for (let i = 0; i < target.length; i++)\n      {\n        const data = target[i]\n        missing[data[constants.PROP_UID]] = data\n      }\n    }\n\n    options.onMutate(() =>\n    {\n      system.arrayResize(target, 0)\n\n      querySnapshot.forEach((doc: firebase.firestore.DocumentSnapshot) =>\n      {\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc, true)\n\n        refreshData(cache, doc, entry)\n\n        system.arrayAdd(target, cache.data)\n\n        delete missing[cache.uid]\n\n        callbacks.onCollectionAdd(cache.data, target, entry)\n\n      }, options.onError)\n\n      return target\n    })\n\n    forEach(missing, data =>\n    {\n      callbacks.onCollectionRemove(data, target, entry)\n\n      removeDataFromEntry(entry, data)\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n\n    return target\n  }\n}\n\nexport function getUpdateHandler (entry: FieryEntry): OnSnapshot\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    const target: FieryData[] = entry.target as FieryData[]\n\n    options.onMutate(() =>\n    {\n      const changes = getChanges(querySnapshot)\n\n      changes.forEach((change: firebase.firestore.DocumentChange) =>\n      {\n        const doc: firebase.firestore.DocumentSnapshot = change.doc\n        const cache: FieryCacheEntry = getCacheForDocument(entry, doc)\n\n        switch (change.type)\n        {\n          case 'added':\n            const created: FieryData = refreshData(cache, doc, entry)\n            system.arrayInsert(target, change.newIndex, created)\n\n            callbacks.onCollectionAdd(created, target, entry)\n            break\n\n          case 'removed':\n            system.arrayRemove(target, change.oldIndex)\n\n            callbacks.onCollectionRemove(cache.data, target, entry)\n\n            if (doc.exists)\n            {\n              removeCacheFromEntry(entry, cache)\n            }\n            else\n            {\n              if (options.propExists)\n              {\n                system.setProperty(cache.data, options.propExists, false)\n              }\n\n              cache.exists = false\n\n              options.triggerEvent(cache.data, 'remove')\n\n              destroyCache(cache)\n            }\n            break\n\n          case 'modified':\n            const updated: FieryData = refreshData(cache, doc, entry)\n\n            if (change.oldIndex !== change.newIndex)\n            {\n              system.arrayMove(target, change.oldIndex, change.newIndex, updated)\n            }\n\n            callbacks.onCollectionModify(updated, target, entry)\n            break\n        }\n      }, options.onError)\n\n      system.arrayResize(target, querySnapshot.size)\n\n      return target\n    })\n\n    options.onSuccess(target)\n\n    updatePointers(entry, querySnapshot)\n\n    callbacks.onCollectionChanged(target, entry)\n  }\n}\n\nexport function getLiveHandler (entry: FieryEntry, handleInitial: OnSnapshot, resolve: OnResolve): OnSnapshot\n{\n  const handleUpdate: OnSnapshot = getUpdateHandler(entry)\n  let handler: OnSnapshot = handleInitial\n\n  return (querySnapshot: firebase.firestore.QuerySnapshot) =>\n  {\n    handler(querySnapshot)\n    resolve(entry.target as FieryTarget)\n    handler = handleUpdate\n  }\n}\n\nexport default factory\n","\nimport { getInstance } from './instance'\n\nexport * from './constants'\nexport * from './types'\nexport { stats } from './stats'\nexport { callbacks } from './callbacks'\nexport { define, setGlobalOptions, mergeStrategy, mergeOptions, getOptions } from './options'\nexport { getCacheForData, destroyCache, destroyGlobalCache } from './cache'\n\nexport { getInstance }\nexport default getInstance\n","\nimport { FierySystem, FieryInstance, FieryOptionsInput, FieryTarget, FierySource, FieryEntry, FieryOptions } from './types'\nimport { forEach, isString } from './util'\nimport { factory } from './factory'\nimport { getEntry, closeEntry } from './entry'\nimport { removeCacheFromInstance } from './cache'\nimport { globalOptions } from './options'\nimport { callbacks } from './callbacks'\nimport * as operations from './operations'\n\n\nexport function getInstance (systemOverrides?: Partial<FierySystem>): FieryInstance\n{\n  const system = buildSystem(systemOverrides)\n\n  const targetFactory = (source: FierySource, options?: FieryOptionsInput, name?: string): FieryTarget => {\n    return factory(getEntry(instance, source, options, name))\n  }\n\n  const instance: FieryInstance = targetFactory as FieryInstance\n\n  instance.system = system\n  instance.entry = {}\n  instance.entryList = []\n  instance.options = {}\n  instance.sources = {}\n  instance.cache = {}\n  instance.pager = operations.pager\n  instance.more = operations.more\n  instance.hasMore = operations.hasMore\n  instance.refresh = operations.refresh\n  instance.update = operations.update\n  instance.save = operations.save\n  instance.sync = operations.sync\n  instance.remove = operations.remove\n  instance.clear = operations.clear\n  instance.getChanges = operations.getChanges\n  instance.ref = operations.ref\n  instance.create = operations.create\n  instance.createSub = operations.createSub\n  instance.build = operations.build\n  instance.buildSub = operations.buildSub\n  instance.entryFor = entryFor\n  instance.destroy = destroy\n  instance.free = free\n  instance.linkSources = linkSources\n\n  callbacks.onInstanceCreate(instance as FieryInstance)\n\n  return instance as FieryInstance\n}\n\nfunction destroy(this: FieryInstance)\n{\n  forEach(this.options, opt => delete globalOptions.map[opt.id])\n  forEach(this.cache, cached => removeCacheFromInstance(cached, this))\n  forEach(this.entryList, entry => closeEntry(entry, true))\n\n  this.entry = {}\n  this.entryList = []\n  this.options = {}\n  this.sources = {}\n  this.cache = {}\n\n  callbacks.onInstanceDestroy(this)\n}\n\nfunction free (this: FieryInstance, target: FieryTarget)\n{\n  const entry = this.entryFor(target)\n\n  if (entry !== null)\n  {\n    closeEntry(entry, true)\n  }\n}\n\nfunction entryFor (this: FieryInstance, target: string | FieryTarget): FieryEntry | null\n{\n  if (isString(target))\n  {\n    return this.entry[ target ]\n  }\n\n  const entries = this.entryList\n\n  for (let i = 0; i < entries.length; i++)\n  {\n    const entry = entries[i]\n\n    if (entry && entry.target === target)\n    {\n      return entry\n    }\n  }\n\n  return null\n}\n\nfunction linkSources (this: FieryInstance, container: any): void\n{\n  const entryList: (FieryEntry | null)[] = this.entryList\n\n  for (let i = 0; i < entryList.length; i++)\n  {\n    const entry: FieryEntry | null = entryList[i]\n\n    if (entry === null)\n    {\n      continue\n    }\n\n    const options: FieryOptions = entry.options\n\n    if (!options.parent && !entry.name)\n    {\n      for (let prop in container)\n      {\n        if (container[prop] === entry.target)\n        {\n          entry.name = prop\n\n          this.entry[ prop ] = entry\n          this.sources[ prop ] = entry.source\n\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction buildSystem(systemOverrides?: Partial<FierySystem>): FierySystem\n{\n  const system = systemOverrides || {}\n\n  for (let prop in defaultSystem)\n  {\n    const systemProp = prop as keyof FierySystem\n\n    if (!(systemProp in system))\n    {\n      system[systemProp] = defaultSystem[systemProp]\n    }\n  }\n\n  return system as FierySystem\n}\n\nconst defaultSystem: FierySystem = {\n  removeNamed: (_name: string) => {\n\n  },\n  setProperty: (target: any, property: string, value: any) => {\n    target[property] = value\n  },\n  removeProperty: (target: any, property: string) => {\n    delete target[property]\n  },\n  arrayRemove: (target: any[], index: number) => {\n    target.splice(index, 1)\n  },\n  arrayInsert: (target: any[], index: number, value: any) => {\n    target.splice(index, 0, value)\n  },\n  arrayMove: (target: any[], from: number, to: number, value: any) => {\n    target.splice(from, 1)\n    target.splice(to, 0, value)\n  },\n  arrayAdd: (target: any[], value: any) => {\n    target.push(value)\n  },\n  arrayResize: (target: any[], size: number) => {\n    if (target.length > size) {\n      target.splice(size, target.length - size)\n    }\n  }\n}\n","\nimport * as firebase from 'firebase'\n\n\nimport { FierySystem, FieryOptions, FieryEntry, FieryData, FieryCacheEntry, FieryTarget } from '../types'\nimport { refreshData } from '../data'\nimport { getCacheForReference, removeDataFromEntry, destroyCache } from '../cache'\nimport { stats } from '../stats'\nimport { callbacks } from '../callbacks'\n\n\n\ntype OnResolve = (target: FieryTarget) => any\ntype OnReject = (reason: any) => any\n\n\n\nexport function factory (entry: FieryEntry): FieryData\n{\n  const source: firebase.firestore.DocumentReference = entry.source as firebase.firestore.DocumentReference\n  const options: FieryOptions = entry.options\n  const cache: FieryCacheEntry = getCacheForReference(entry, source, true)\n  const initialTarget: FieryTarget | undefined = entry.target\n\n  let missingSynchronously = false\n  let resolve: OnResolve = () => {}\n  let reject: OnReject = () => {}\n\n  const onSnapshot = (doc: firebase.firestore.DocumentSnapshot) =>\n  {\n    options.onMutate(() =>\n    {\n        handleDocumentUpdate(cache, entry, doc)\n\n        return cache.data\n    })\n\n    missingSynchronously = !doc.exists\n\n    resolve(cache.data)\n\n    return cache.data\n  }\n\n  if (initialTarget && initialTarget !== cache.data)\n  {\n    removeDataFromEntry(entry, initialTarget)\n  }\n\n  entry.target = cache.data\n\n  stats.queries++\n\n  if (options.once)\n  {\n    entry.promise = source.get(options.onceOptions)\n      .then(onSnapshot)\n      .catch(options.onError)\n  }\n  else\n  {\n    entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n      resolve = _resolve\n      reject = _reject\n    })\n\n    entry.off = source.onSnapshot(\n      options.liveOptions,\n      onSnapshot,\n      (reason: any) => {\n        reject(reason)\n        options.onError(reason)\n      }\n    )\n  }\n\n  options.onPromise(entry.promise)\n\n  if (missingSynchronously && options.nullifyMissing)\n  {\n    return (<any>null) as FieryData\n  }\n\n  return entry.target as FieryData\n}\n\nexport function handleDocumentUpdate (cache: FieryCacheEntry, entry: FieryEntry, doc: firebase.firestore.DocumentSnapshot): void\n{\n  const options: FieryOptions = entry.options\n  const system: FierySystem = entry.instance.system\n\n  if (!doc.exists)\n  {\n    if (options.propExists)\n    {\n      system.setProperty(cache.data, options.propExists, false)\n    }\n\n    if (cache.exists === null)\n    {\n      callbacks.onDocumentMissing(cache.data, entry)\n\n      options.triggerEvent(cache.data, 'missing')\n    }\n    else\n    {\n      options.triggerEvent(cache.data, 'remove')\n    }\n\n    cache.exists = false\n\n    if (options.nullifyMissing)\n    {\n      destroyCache(cache)\n\n      if (entry.name)\n      {\n        system.removeNamed(entry.name)\n      }\n    }\n  }\n  else\n  {\n    refreshData(cache, doc, entry)\n\n    options.onSuccess(cache.data)\n\n    callbacks.onDocumentUpdate(cache.data, entry)\n  }\n}\n\nexport default factory\n","\nimport * as firebase from 'firebase'\n\n\n\nimport { FierySource } from './types'\n\n\n\nexport const stores = {\n\n  keyNext: 0,\n\n  map: { } as { [storeKey: number]: firebase.firestore.Firestore },\n\n  idToKey: { } as { [id: string]: number }\n\n}\n\nexport function getStoreKey (source: FierySource): number\n{\n  const firestore: firebase.firestore.Firestore = source.firestore\n  const id: string = firestore.app.name\n  let key: number = stores.idToKey[id]\n\n  if (!key)\n  {\n    key = ++stores.keyNext\n    stores.map[key] = firestore\n    stores.idToKey[id] = key\n  }\n\n  return key\n}\n","\nimport * as firebase from 'firebase'\n\n\nimport { FieryEntry, FieryPager, FieryTarget } from './types'\nimport { isArray, isObject } from './util'\n\n\n\nexport function getPager(entry: FieryEntry): FieryPager\n{\n  let pointer: firebase.firestore.DocumentSnapshot | undefined\n\n  const pager: FieryPager =\n  {\n    index: 0,\n\n    hasQuery(): boolean\n    {\n      return !!(entry.query && entry.requery)\n    },\n\n    hasData(): boolean\n    {\n      const target = entry.target\n\n      if (isArray(target))\n      {\n        return target.length > 0\n      }\n\n      if (isObject(target))\n      {\n        for (let _prop in target)\n        {\n          return true\n        }\n      }\n\n      return false\n    },\n\n    hasNext(): boolean\n    {\n      return this.hasQuery() && this.hasData()\n    },\n\n    hasPrev(): boolean\n    {\n      return this.hasQuery() && this.index > 0\n    },\n\n    next(): Promise<FieryTarget>\n    {\n      const { query, requery, last, first, off } = entry\n\n      if (query && requery && last && this.hasData())\n      {\n        if (off) off()\n\n        delete entry.off\n        delete entry.last\n\n        this.index++\n        pointer = first\n\n        requery(query.startAfter(last))\n\n        if (entry.promise) return entry.promise\n      }\n\n      return Promise.reject('The pager could not execute next')\n    },\n\n    prev(): Promise<FieryTarget>\n    {\n      const { query, requery, first, off, options } = entry\n\n      if (query && requery && (first || pointer) && this.index > 0)\n      {\n        if (off) off()\n\n        delete entry.off\n\n        this.index--\n\n        if (first && options.queryReverse)\n        {\n          delete entry.first\n\n          options.queryReverse(entry.source as firebase.firestore.CollectionReference)\n            .startAfter(first)\n            .get(options.onceOptions)\n            .then((querySnapshot: firebase.firestore.QuerySnapshot) => {\n              const last = querySnapshot.docs[querySnapshot.docs.length - 1];\n              requery(query.startAt(last))\n            })\n        }\n        else\n        {\n          requery(query.startAt(pointer))\n\n          pointer = undefined\n        }\n\n        if (entry.promise) return entry.promise\n      }\n\n      return Promise.reject('The pager could not execute prev')\n    }\n  }\n\n  return pager\n}\n","\nimport * as firebase from 'firebase'\n\n\nimport { FieryEntry, FieryTarget, FieryData, FieryOptions } from '../types'\nimport { updatePointers } from '../entry'\nimport { stats } from '../stats'\n\nimport {\n  getInitialHandler as getCollectionInitialHandler,\n  getLiveHandler as getCollectionLiveHandler\n} from './collection'\n\nimport {\n  getInitialHandler as getMapInitialHandler,\n  getLiveHandler as getMapLiveHandler\n} from './map'\n\n\ntype OnSnapshot = (querySnapshot: firebase.firestore.QuerySnapshot) => any\ntype OnResolve = (target: FieryTarget) => any\ntype OnReject = (reason: any) => any\n\nexport function factory (entry: FieryEntry): FieryData[]\n{\n  const options: FieryOptions = entry.options\n\n  if (!options.query) {\n    throw 'query is required for streaming'\n  }\n  if (!options.streamInitial) {\n    throw 'streamInitial is required for streaming'\n  }\n\n  const query: firebase.firestore.Query =\n    options.query(entry.source as firebase.firestore.CollectionReference) as\n      firebase.firestore.Query\n\n  entry.requery = (query) =>\n  {\n    const initial: OnSnapshot = options.map\n      ? getMapInitialHandler(entry)\n      : getCollectionInitialHandler(entry)\n    const limit = options.streamInitial as number\n\n    if (!entry.target)\n    {\n      entry.target = options.newCollection()\n    }\n\n    stats.queries++\n    entry.hasMore = true\n\n    entry.promise = query\n      .limit(limit)\n      .get(options.onceOptions)\n      .then((querySnapshot: firebase.firestore.QuerySnapshot) => {\n        stats.queries++\n        entry.hasMore = querySnapshot.size >= limit\n        initial(querySnapshot)\n        startStream(entry, initial, query)\n      })\n      .catch(options.onError)\n  }\n\n  entry.more = (count?: number) =>\n  {\n    const limit: number = (count || options.streamMore) as number\n\n    if (!limit || limit < 0) {\n      throw 'streamMore is required for streaming'\n    }\n\n    if (!entry.last || !entry.hasMore) {\n      return Promise.reject('There are no more results to load.')\n    }\n\n    const initial: OnSnapshot = options.map\n      ? getMapInitialHandler(entry)\n      : getCollectionInitialHandler(entry)\n\n    return query\n      .startAfter(entry.last)\n      .limit(limit)\n      .get(options.onceOptions)\n      .then((querySnapshot: firebase.firestore.QuerySnapshot) => {\n        stats.queries++\n        entry.hasMore = querySnapshot.size >= limit\n        updatePointers(entry, querySnapshot)\n        startStream(entry, initial, query)\n      })\n      .catch(options.onError)\n  }\n\n  entry.requery(entry.query = query)\n\n  return entry.target as FieryData[]\n}\n\nfunction startStream (entry: FieryEntry, initial: OnSnapshot, query: firebase.firestore.Query)\n{\n  const options: FieryOptions = entry.options\n\n  let resolve: OnResolve = () => {}\n  let reject: OnReject = () => {}\n\n  entry.promise = new Promise<FieryTarget>((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n\n  const live = options.map\n    ? getMapLiveHandler(entry, initial, resolve)\n    : getCollectionLiveHandler(entry, initial, resolve)\n\n  if (entry.off) {\n    entry.off()\n  }\n\n  if (entry.last) {\n    query = query.endAt(entry.last)\n  }\n\n  entry.off = query.onSnapshot(\n    options.liveOptions,\n    live,\n    (reason: any) => {\n      reject(reason)\n      options.onError(reason)\n    }\n  )\n\n  options.onPromise(entry.promise)\n}\n\nexport default factory\n"],"sourceRoot":""}